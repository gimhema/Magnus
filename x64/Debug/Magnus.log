  main.cpp
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\macros\Macros.h(138,20): warning C4067: 전처리기 지시문 다음에 예기치 않은 토큰이 있습니다. 줄 바꿈 문자가 필요합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\variant.h(1799,1): warning C4819: 현재 코드 페이지(949)에서 표시할 수 없는 문자가 파일에 들어 있습니다. 데이터가 손실되지 않게 하려면 해당 파일을 유니코드 형식으로 저장하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Exception.h(29,45): warning C4275: DLL 인터페이스가 아닌 class 'std::exception'이(가) DLL 인터페이스 class 'c10::Error'의 기본으로 사용되었습니다.
C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\vcruntime_exception.h(48): message : 'std::exception' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Exception.h(29): message : 'c10::Error' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Exception.h(31,15): warning C4251: 'c10::Error::msg_': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 class 'c10::Error'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xstring(5186): message : 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Exception.h(36,28): warning C4251: 'c10::Error::context_': class 'std::vector<std::string,std::allocator<std::string>>'에서는 class 'c10::Error'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Exception.h(36): message : 'std::vector<std::string,std::allocator<std::string>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Exception.h(41,15): warning C4251: 'c10::Error::backtrace_': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 class 'c10::Error'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xstring(5186): message : 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Exception.h(48,15): warning C4251: 'c10::Error::what_': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 class 'c10::Error'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xstring(5186): message : 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Exception.h(49,15): warning C4251: 'c10::Error::what_without_backtrace_': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 class 'c10::Error'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xstring(5186): message : 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Exception.h(149,21): warning C4251: 'c10::Warning::type_': class 'c10::variant<c10::Warning::UserWarning,c10::Warning::DeprecationWarning>'에서는 class 'c10::Warning'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Exception.h(121): message : 'c10::variant<c10::Warning::UserWarning,c10::Warning::DeprecationWarning>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Exception.h(155,15): warning C4251: 'c10::Warning::msg_': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 class 'c10::Warning'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xstring(5186): message : 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\DispatchKeySet.h(1,1): warning C4819: 현재 코드 페이지(949)에서 표시할 수 없는 문자가 파일에 들어 있습니다. 데이터가 손실되지 않게 하려면 해당 파일을 유니코드 형식으로 저장하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\DispatchKeySet.h(427,1): warning C4267: 'return': 'size_t'에서 'uint8_t'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\BFloat16-inl.h(214,36): warning C4244: '인수': 'int'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\BFloat16-inl.h(217,36): warning C4244: '인수': 'int'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\BFloat16-inl.h(220,36): warning C4244: '인수': 'int'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\BFloat16-inl.h(223,36): warning C4244: '인수': 'int'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\BFloat16-inl.h(227,32): warning C4244: '인수': 'int'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\BFloat16-inl.h(230,32): warning C4244: '인수': 'int'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\BFloat16-inl.h(233,32): warning C4244: '인수': 'int'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\BFloat16-inl.h(236,32): warning C4244: '인수': 'int'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\BFloat16-inl.h(242,36): warning C4244: '인수': 'int64_t'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\BFloat16-inl.h(245,36): warning C4244: '인수': 'int64_t'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\BFloat16-inl.h(248,36): warning C4244: '인수': 'int64_t'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\BFloat16-inl.h(251,36): warning C4244: '인수': 'int64_t'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\BFloat16-inl.h(255,32): warning C4244: '인수': 'int64_t'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\BFloat16-inl.h(258,32): warning C4244: '인수': 'int64_t'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\BFloat16-inl.h(261,32): warning C4244: '인수': 'int64_t'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\BFloat16-inl.h(264,32): warning C4244: '인수': 'int64_t'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Half-inl.h(207,32): warning C4244: '인수': 'int'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Half-inl.h(210,32): warning C4244: '인수': 'int'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Half-inl.h(213,32): warning C4244: '인수': 'int'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Half-inl.h(216,32): warning C4244: '인수': 'int'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Half-inl.h(220,28): warning C4244: '인수': 'int'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Half-inl.h(223,28): warning C4244: '인수': 'int'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Half-inl.h(226,28): warning C4244: '인수': 'int'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Half-inl.h(229,28): warning C4244: '인수': 'int'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Half-inl.h(235,32): warning C4244: '인수': 'int64_t'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Half-inl.h(238,32): warning C4244: '인수': 'int64_t'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Half-inl.h(241,32): warning C4244: '인수': 'int64_t'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Half-inl.h(244,32): warning C4244: '인수': 'int64_t'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Half-inl.h(248,28): warning C4244: '인수': 'int64_t'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Half-inl.h(251,28): warning C4244: '인수': 'int64_t'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Half-inl.h(254,28): warning C4244: '인수': 'int64_t'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Half-inl.h(257,28): warning C4244: '인수': 'int64_t'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\intrusive_ptr.h(79,31): warning C4251: 'c10::intrusive_ptr_target::refcount_': struct 'std::atomic<unsigned __int64>'에서는 class 'c10::intrusive_ptr_target'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\atomic(2698): message : 'std::atomic<unsigned __int64>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\intrusive_ptr.h(80,31): warning C4251: 'c10::intrusive_ptr_target::weakcount_': struct 'std::atomic<unsigned __int64>'에서는 class 'c10::intrusive_ptr_target'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\atomic(2698): message : 'std::atomic<unsigned __int64>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\SymFloat.h(70,11): warning C4251: 'c10::SymFloat::ptr_': class 'c10::intrusive_ptr<c10::SymNodeImpl,c10::detail::intrusive_target_default_null_type<TTarget>>'에서는 class 'c10::SymFloat'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              TTarget=c10::SymNodeImpl
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\SymNodeImpl.h(12): message : 'c10::intrusive_ptr<c10::SymNodeImpl,c10::detail::intrusive_target_default_null_type<TTarget>>' 선언을 참조하십시오.
          with
          [
              TTarget=c10::SymNodeImpl
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\SymBool.h(63,11): warning C4251: 'c10::SymBool::ptr_': class 'c10::intrusive_ptr<c10::SymNodeImpl,c10::detail::intrusive_target_default_null_type<TTarget>>'에서는 class 'c10::SymBool'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              TTarget=c10::SymNodeImpl
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\SymNodeImpl.h(12): message : 'c10::intrusive_ptr<c10::SymNodeImpl,c10::detail::intrusive_target_default_null_type<TTarget>>' 선언을 참조하십시오.
          with
          [
              TTarget=c10::SymNodeImpl
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\Scalar.h(300,5): warning C4251: 'c10::Scalar::v': union 'c10::Scalar::v_t'에서는 class 'c10::Scalar'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\Scalar.h(294): message : 'c10::Scalar::v_t' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\typeid.h(68,67): warning C4251: 'c10::IdWrapper<caffe2::TypeIdentifier,c10::util::type_index>::id_': struct 'c10::util::type_index'에서는 class 'c10::IdWrapper<caffe2::TypeIdentifier,c10::util::type_index>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\TypeIndex.h(62): message : 'c10::util::type_index' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\typeid.h(516,21): warning C4251: 'caffe2::TypeMeta::typeMetaDatasLock': class 'std::mutex'에서는 class 'caffe2::TypeMeta'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\mutex(86): message : 'std::mutex' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\ThreadLocalDebugInfo.h(54,34): warning C4251: 'c10::ThreadLocalDebugInfo::info_': class 'std::shared_ptr<c10::DebugInfoBase>'에서는 class 'c10::ThreadLocalDebugInfo'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\ThreadLocalDebugInfo.h(45): message : 'std::shared_ptr<c10::DebugInfoBase>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\ThreadLocalDebugInfo.h(56,41): warning C4251: 'c10::ThreadLocalDebugInfo::parent_info_': class 'std::shared_ptr<c10::ThreadLocalDebugInfo>'에서는 class 'c10::ThreadLocalDebugInfo'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\ThreadLocalDebugInfo.h(38): message : 'std::shared_ptr<c10::ThreadLocalDebugInfo>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\ThreadLocalDebugInfo.h(80,41): warning C4251: 'c10::DebugInfoGuard::prev_info_': class 'std::shared_ptr<c10::ThreadLocalDebugInfo>'에서는 class 'c10::DebugInfoGuard'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\ThreadLocalDebugInfo.h(38): message : 'std::shared_ptr<c10::ThreadLocalDebugInfo>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\Allocator.h(22,30): warning C4251: 'c10::DataPtr::ptr_': class 'c10::detail::UniqueVoidPtr'에서는 class 'c10::DataPtr'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\UniqueVoidPtr.h(38): message : 'c10::detail::UniqueVoidPtr' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\Allocator.h(186,53): warning C4251: 'c10::InefficientStdFunctionContext::ptr_': class 'std::unique_ptr<void,std::function<void (void *)>>'에서는 struct 'c10::InefficientStdFunctionContext'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\Allocator.h(186): message : 'std::unique_ptr<void,std::function<void (void *)>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\Storage.h(181,35): warning C4251: 'c10::Storage::storage_impl_': class 'c10::intrusive_ptr<c10::StorageImpl,c10::detail::intrusive_target_default_null_type<TTarget>>'에서는 struct 'c10::Storage'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              TTarget=c10::StorageImpl
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\Storage.h(12): message : 'c10::intrusive_ptr<c10::StorageImpl,c10::detail::intrusive_target_default_null_type<TTarget>>' 선언을 참조하십시오.
          with
          [
              TTarget=c10::StorageImpl
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\impl\LocalDispatchKeySet.h(61,18): warning C4251: 'c10::impl::LocalDispatchKeySet::included_': class 'c10::DispatchKeySet'에서는 struct 'c10::impl::LocalDispatchKeySet'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\DispatchKeySet.h(152): message : 'c10::DispatchKeySet' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\impl\LocalDispatchKeySet.h(62,18): warning C4251: 'c10::impl::LocalDispatchKeySet::excluded_': class 'c10::DispatchKeySet'에서는 struct 'c10::impl::LocalDispatchKeySet'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\DispatchKeySet.h(152): message : 'c10::DispatchKeySet' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\impl\LocalDispatchKeySet.h(99,18): warning C4251: 'c10::impl::IncludeDispatchKeyGuard::include_': class 'c10::DispatchKeySet'에서는 class 'c10::impl::IncludeDispatchKeyGuard'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\DispatchKeySet.h(152): message : 'c10::DispatchKeySet' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\impl\LocalDispatchKeySet.h(117,18): warning C4251: 'c10::impl::ExcludeDispatchKeyGuard::exclude_': class 'c10::DispatchKeySet'에서는 class 'c10::impl::ExcludeDispatchKeyGuard'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\DispatchKeySet.h(152): message : 'c10::DispatchKeySet' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\SymIntArrayRef.h(55,26): warning C4244: '초기화 중': 'const T'에서 'long'(으)로 변환하면서 데이터가 손실될 수 있습니다.
          with
          [
              T=int64_t
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\impl\HermeticPyObjectTLS.h(56,28): warning C4251: 'c10::impl::HermeticPyObjectTLS::haveState_': struct 'std::atomic<bool>'에서는 struct 'c10::impl::HermeticPyObjectTLS'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\atomic(2686): message : 'std::atomic<bool>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\impl\PyObjectSlot.h(148,31): warning C4251: 'c10::impl::PyObjectSlot::pyobj_interpreter_': struct 'std::atomic<c10::impl::PyInterpreter *>'에서는 struct 'c10::impl::PyObjectSlot'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\impl\PyObjectSlot.h(148): message : 'std::atomic<c10::impl::PyInterpreter *>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\logging_is_not_google_glog.h(43,21): warning C4251: 'c10::MessageLogger::stream_': class 'std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>'에서는 class 'c10::MessageLogger'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\iosfwd(241): message : 'std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\TensorImpl.h(221,16): warning C4251: 'c10::ExtraMeta::sizes_': class 'c10::SmallVector<c10::SymInt,5>'에서는 struct 'c10::ExtraMeta'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\DimVector.h(14): message : 'c10::SmallVector<c10::SymInt,5>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\TensorImpl.h(222,16): warning C4251: 'c10::ExtraMeta::strides_': class 'c10::SmallVector<c10::SymInt,5>'에서는 struct 'c10::ExtraMeta'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\DimVector.h(14): message : 'c10::SmallVector<c10::SymInt,5>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\TensorImpl.h(231,50): warning C4251: 'c10::ExtraMeta::named_tensor_meta_': class 'std::unique_ptr<c10::NamedTensorMetaInterface,std::default_delete<c10::NamedTensorMetaInterface>>'에서는 struct 'c10::ExtraMeta'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\TensorImpl.h(200): message : 'std::unique_ptr<c10::NamedTensorMetaInterface,std::default_delete<c10::NamedTensorMetaInterface>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\TensorImpl.h(323,38): warning C4251: 'c10::VariableVersion::version_counter_': class 'c10::intrusive_ptr<c10::VariableVersion::VersionCounter,c10::detail::intrusive_target_default_null_type<TTarget>>'에서는 struct 'c10::VariableVersion'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              TTarget=c10::VariableVersion::VersionCounter
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\TensorImpl.h(323): message : 'c10::intrusive_ptr<c10::VariableVersion::VersionCounter,c10::detail::intrusive_target_default_null_type<TTarget>>' 선언을 참조하십시오.
          with
          [
              TTarget=c10::VariableVersion::VersionCounter
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\TensorImpl.h(397,34): warning C4244: '인수': 'int64_t'에서 'const _Ty'(으)로 변환하면서 데이터가 손실될 수 있습니다.
          with
          [
              _Ty=unsigned int
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\TensorImpl.h(2775,47): warning C4251: 'c10::TensorImpl::autograd_meta_': class 'std::unique_ptr<c10::AutogradMetaInterface,std::default_delete<c10::AutogradMetaInterface>>'에서는 struct 'c10::TensorImpl'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\TensorImpl.h(181): message : 'std::unique_ptr<c10::AutogradMetaInterface,std::default_delete<c10::AutogradMetaInterface>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\TensorImpl.h(2778,35): warning C4251: 'c10::TensorImpl::extra_meta_': class 'std::unique_ptr<c10::ExtraMeta,std::default_delete<c10::ExtraMeta>>'에서는 struct 'c10::TensorImpl'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\TensorImpl.h(260): message : 'std::unique_ptr<c10::ExtraMeta,std::default_delete<c10::ExtraMeta>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\TensorImpl.h(2809,30): warning C4251: 'c10::TensorImpl::device_opt_': class 'c10::optional<c10::Device>'에서는 struct 'c10::TensorImpl'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\TensorOptions.h(25): message : 'c10::optional<c10::Device>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\TensorImpl.h(2932,18): warning C4251: 'c10::TensorImpl::key_set_': class 'c10::DispatchKeySet'에서는 struct 'c10::TensorImpl'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\DispatchKeySet.h(152): message : 'c10::DispatchKeySet' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(212,1): warning C4624: 'c10::constexpr_storage_t<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=c10::SymInt
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(411): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::constexpr_storage_t<T>'에 대한 참조를 확인하세요.
          with
          [
              T=c10::SymInt
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(549): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::trivially_copyable_optimization_optional_base<T>'에 대한 참조를 확인하세요.
          with
          [
              T=c10::SymInt
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(549): message : 컴파일되는 별칭 템플릿 인스턴스화 'c10::OptionalBase<T>'에 대한 참조를 확인하세요.
          with
          [
              T=c10::SymInt
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\TensorImpl.h(1605): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::optional<c10::SymInt>'에 대한 참조를 확인하세요.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(446,1): warning C4624: 'c10::trivially_copyable_optimization_optional_base<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=c10::SymInt
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\DeprecatedTypePropertiesRegistry.h(24,45): warning C4251: 'at::DeprecatedTypePropertiesRegistry::registry': class 'std::unique_ptr<at::DeprecatedTypeProperties,std::default_delete<at::DeprecatedTypeProperties>>'에서는 class 'at::DeprecatedTypePropertiesRegistry'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\DeprecatedTypePropertiesRegistry.h(24): message : 'std::unique_ptr<at::DeprecatedTypeProperties,std::default_delete<at::DeprecatedTypeProperties>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\GeneratorImpl.h(77,14): warning C4251: 'c10::GeneratorImpl::mutex_': class 'std::mutex'에서는 struct 'c10::GeneratorImpl'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\mutex(86): message : 'std::mutex' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\GeneratorImpl.h(93,18): warning C4251: 'c10::GeneratorImpl::key_set_': class 'c10::DispatchKeySet'에서는 struct 'c10::GeneratorImpl'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\DispatchKeySet.h(152): message : 'c10::DispatchKeySet' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\Generator.h(133,42): warning C4251: 'at::Generator::impl_': class 'c10::intrusive_ptr<c10::GeneratorImpl,c10::detail::intrusive_target_default_null_type<TTarget>>'에서는 struct 'at::Generator'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              TTarget=c10::GeneratorImpl
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\GeneratorImpl.h(66): message : 'c10::intrusive_ptr<c10::GeneratorImpl,c10::detail::intrusive_target_default_null_type<TTarget>>' 선언을 참조하십시오.
          with
          [
              TTarget=c10::GeneratorImpl
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\NamedTensor.h(69,24): warning C4251: 'at::NamedTensorMeta::names_': class 'std::vector<at::Dimname,std::allocator<at::Dimname>>'에서는 struct 'at::NamedTensorMeta'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\NamedTensor.h(35): message : 'std::vector<at::Dimname,std::allocator<at::Dimname>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\TensorBase.h(837,55): warning C4251: 'at::TensorBase::impl_': class 'c10::intrusive_ptr<c10::TensorImpl,c10::UndefinedTensorImpl>'에서는 class 'at::TensorBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\TensorBase.h(96): message : 'c10::intrusive_ptr<c10::TensorImpl,c10::UndefinedTensorImpl>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(212,1): warning C4624: 'c10::constexpr_storage_t<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=at::TensorBase
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(411): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::constexpr_storage_t<T>'에 대한 참조를 확인하세요.
          with
          [
              T=at::TensorBase
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(549): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::trivially_copyable_optimization_optional_base<T>'에 대한 참조를 확인하세요.
          with
          [
              T=at::TensorBase
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(549): message : 컴파일되는 별칭 템플릿 인스턴스화 'c10::OptionalBase<T>'에 대한 참조를 확인하세요.
          with
          [
              T=at::TensorBase
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\TensorBase.h(933): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::optional<at::TensorBase>'에 대한 참조를 확인하세요.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(446,1): warning C4624: 'c10::trivially_copyable_optimization_optional_base<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=at::TensorBase
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(212,1): warning C4624: 'c10::constexpr_storage_t<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=at::Tensor
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(411): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::constexpr_storage_t<T>'에 대한 참조를 확인하세요.
          with
          [
              T=at::Tensor
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(549): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::trivially_copyable_optimization_optional_base<T>'에 대한 참조를 확인하세요.
          with
          [
              T=at::Tensor
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(549): message : 컴파일되는 별칭 템플릿 인스턴스화 'c10::OptionalBase<T>'에 대한 참조를 확인하세요.
          with
          [
              T=at::Tensor
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\TensorBody.h(518): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::optional<at::Tensor>'에 대한 참조를 확인하세요.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(446,1): warning C4624: 'c10::trivially_copyable_optimization_optional_base<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=at::Tensor
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(212,1): warning C4624: 'c10::constexpr_storage_t<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=at::Generator
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(411): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::constexpr_storage_t<T>'에 대한 참조를 확인하세요.
          with
          [
              T=at::Generator
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(549): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::trivially_copyable_optimization_optional_base<T>'에 대한 참조를 확인하세요.
          with
          [
              T=at::Generator
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(549): message : 컴파일되는 별칭 템플릿 인스턴스화 'c10::OptionalBase<T>'에 대한 참조를 확인하세요.
          with
          [
              T=at::Generator
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\TensorBody.h(597): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::optional<at::Generator>'에 대한 참조를 확인하세요.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(446,1): warning C4624: 'c10::trivially_copyable_optimization_optional_base<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=at::Generator
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(212,1): warning C4624: 'c10::constexpr_storage_t<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=c10::Scalar
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(411): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::constexpr_storage_t<T>'에 대한 참조를 확인하세요.
          with
          [
              T=c10::Scalar
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(549): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::trivially_copyable_optimization_optional_base<T>'에 대한 참조를 확인하세요.
          with
          [
              T=c10::Scalar
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(549): message : 컴파일되는 별칭 템플릿 인스턴스화 'c10::OptionalBase<T>'에 대한 참조를 확인하세요.
          with
          [
              T=c10::Scalar
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\TensorBody.h(628): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::optional<c10::Scalar>'에 대한 참조를 확인하세요.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(446,1): warning C4624: 'c10::trivially_copyable_optimization_optional_base<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=c10::Scalar
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\autograd\forward_grad.h(122,52): warning C4251: 'torch::autograd::ForwardADLevel::grads_': class 'std::unordered_set<std::shared_ptr<torch::autograd::ForwardGrad>,std::hash<std::shared_ptr<torch::autograd::ForwardGrad>>,std::equal_to<std::shared_ptr<torch::autograd::ForwardGrad>>,std::allocator<std::shared_ptr<torch::autograd::ForwardGrad>>>'에서는 struct 'torch::autograd::ForwardADLevel'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\autograd\forward_grad.h(122): message : 'std::unordered_set<std::shared_ptr<torch::autograd::ForwardGrad>,std::hash<std::shared_ptr<torch::autograd::ForwardGrad>>,std::equal_to<std::shared_ptr<torch::autograd::ForwardGrad>>,std::allocator<std::shared_ptr<torch::autograd::ForwardGrad>>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\autograd\forward_grad.h(123,14): warning C4251: 'torch::autograd::ForwardADLevel::mutex_': class 'std::mutex'에서는 struct 'torch::autograd::ForwardADLevel'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\mutex(86): message : 'std::mutex' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\autograd\forward_grad.h(127,74): warning C4251: 'std::enable_shared_from_this<torch::autograd::ForwardGrad>::_Wptr': class 'std::weak_ptr<_Ty>'에서는 class 'std::enable_shared_from_this<torch::autograd::ForwardGrad>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=torch::autograd::ForwardGrad
          ]
C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\memory(3103): message : 'std::weak_ptr<_Ty>' 선언을 참조하십시오.
          with
          [
              _Ty=torch::autograd::ForwardGrad
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\autograd\forward_grad.h(206,44): warning C4251: 'torch::autograd::ForwardGrad::content_': class 'std::unordered_map<uint64_t,at::Tensor,std::hash<uint64_t>,std::equal_to<uint64_t>,std::allocator<std::pair<const uint64_t,at::Tensor>>>'에서는 struct 'torch::autograd::ForwardGrad'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\autograd\forward_grad.h(206): message : 'std::unordered_map<uint64_t,at::Tensor,std::hash<uint64_t>,std::equal_to<uint64_t>,std::allocator<std::pair<const uint64_t,at::Tensor>>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\autograd\forward_grad.h(207,22): warning C4251: 'torch::autograd::ForwardGrad::mutex_': class 'std::mutex'에서는 struct 'torch::autograd::ForwardGrad'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\mutex(86): message : 'std::mutex' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(212,1): warning C4624: 'c10::constexpr_storage_t<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=std::string
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(411): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::constexpr_storage_t<T>'에 대한 참조를 확인하세요.
          with
          [
              T=std::string
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(549): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::trivially_copyable_optimization_optional_base<T>'에 대한 참조를 확인하세요.
          with
          [
              T=std::string
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(549): message : 컴파일되는 별칭 템플릿 인스턴스화 'c10::OptionalBase<T>'에 대한 참조를 확인하세요.
          with
          [
              T=std::string
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\jit_type_base.h(452): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::optional<std::string>'에 대한 참조를 확인하세요.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(446,1): warning C4624: 'c10::trivially_copyable_optimization_optional_base<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=std::string
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\jit_type_base.h(651,92): warning C4251: 'std::enable_shared_from_this<c10::SharedType>::_Wptr': class 'std::weak_ptr<_Ty>'에서는 class 'std::enable_shared_from_this<c10::SharedType>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=c10::SharedType
          ]
C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\memory(3103): message : 'std::weak_ptr<_Ty>' 선언을 참조하십시오.
          with
          [
              _Ty=c10::SharedType
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(212,1): warning C4624: 'c10::constexpr_storage_t<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=c10::QualifiedName
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(411): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::constexpr_storage_t<T>'에 대한 참조를 확인하세요.
          with
          [
              T=c10::QualifiedName
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(549): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::trivially_copyable_optimization_optional_base<T>'에 대한 참조를 확인하세요.
          with
          [
              T=c10::QualifiedName
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(549): message : 컴파일되는 별칭 템플릿 인스턴스화 'c10::OptionalBase<T>'에 대한 참조를 확인하세요.
          with
          [
              T=c10::QualifiedName
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\jit_type_base.h(700): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::optional<c10::QualifiedName>'에 대한 참조를 확인하세요.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(446,1): warning C4624: 'c10::trivially_copyable_optimization_optional_base<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=c10::QualifiedName
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\jit_type_base.h(700,32): warning C4251: 'c10::NamedType::name_': class 'c10::optional<c10::QualifiedName>'에서는 struct 'c10::NamedType'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\jit_type_base.h(683): message : 'c10::optional<c10::QualifiedName>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\ivalue.h(1263,11): warning C4251: 'c10::IValue::payload': union 'c10::IValue::Payload'에서는 struct 'c10::IValue'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\ivalue.h(1224): message : 'c10::IValue::Payload' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\ivalue.h(1380,11): warning C4251: 'c10::WeakIValue::payload': union 'c10::IValue::Payload::TriviallyCopyablePayload'에서는 struct 'c10::WeakIValue'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\ivalue.h(1231): message : 'c10::IValue::Payload::TriviallyCopyablePayload' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\ivalue.h(1393,48): warning C4251: 'c10::StrongTypePtr::cu_': class 'std::shared_ptr<torch::jit::CompilationUnit>'에서는 struct 'c10::StrongTypePtr'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\ivalue.h(1390): message : 'std::shared_ptr<torch::jit::CompilationUnit>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\ivalue.h(1394,11): warning C4251: 'c10::StrongTypePtr::type_': class 'c10::Type::SingletonOrSharedTypePtr<c10::Type>'에서는 struct 'c10::StrongTypePtr'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\jit_type_base.h(384): message : 'c10::Type::SingletonOrSharedTypePtr<c10::Type>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\ivalue.h(1407,46): warning C4251: 'c10::WeakTypePtr::cu_': class 'std::weak_ptr<torch::jit::CompilationUnit>'에서는 struct 'c10::WeakTypePtr'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\ivalue.h(1404): message : 'std::weak_ptr<torch::jit::CompilationUnit>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\ivalue.h(1408,11): warning C4251: 'c10::WeakTypePtr::type_': class 'c10::Type::SingletonOrSharedTypePtr<c10::Type>'에서는 struct 'c10::WeakTypePtr'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\jit_type_base.h(384): message : 'c10::Type::SingletonOrSharedTypePtr<c10::Type>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(212,1): warning C4624: 'c10::constexpr_storage_t<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=std::shared_ptr<torch::jit::CompilationUnit>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(411): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::constexpr_storage_t<T>'에 대한 참조를 확인하세요.
          with
          [
              T=std::shared_ptr<torch::jit::CompilationUnit>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(549): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::trivially_copyable_optimization_optional_base<T>'에 대한 참조를 확인하세요.
          with
          [
              T=std::shared_ptr<torch::jit::CompilationUnit>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(549): message : 컴파일되는 별칭 템플릿 인스턴스화 'c10::OptionalBase<T>'에 대한 참조를 확인하세요.
          with
          [
              T=std::shared_ptr<torch::jit::CompilationUnit>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\ivalue.h(1437): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::optional<std::shared_ptr<torch::jit::CompilationUnit>>'에 대한 참조를 확인하세요.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(446,1): warning C4624: 'c10::trivially_copyable_optimization_optional_base<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=std::shared_ptr<torch::jit::CompilationUnit>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(212,1): warning C4624: 'c10::constexpr_storage_t<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=std::weak_ptr<torch::jit::CompilationUnit>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(411): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::constexpr_storage_t<T>'에 대한 참조를 확인하세요.
          with
          [
              T=std::weak_ptr<torch::jit::CompilationUnit>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(549): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::trivially_copyable_optimization_optional_base<T>'에 대한 참조를 확인하세요.
          with
          [
              T=std::weak_ptr<torch::jit::CompilationUnit>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(549): message : 컴파일되는 별칭 템플릿 인스턴스화 'c10::OptionalBase<T>'에 대한 참조를 확인하세요.
          with
          [
              T=std::weak_ptr<torch::jit::CompilationUnit>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\ivalue.h(1438): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::optional<std::weak_ptr<torch::jit::CompilationUnit>>'에 대한 참조를 확인하세요.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(446,1): warning C4624: 'c10::trivially_copyable_optimization_optional_base<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=std::weak_ptr<torch::jit::CompilationUnit>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\ivalue.h(1452,31): warning C4251: 'c10::WeakOrStrongTypePtr::cu_': struct 'c10::WeakOrStrongCompilationUnit'에서는 struct 'c10::WeakOrStrongTypePtr'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\ivalue.h(1412): message : 'c10::WeakOrStrongCompilationUnit' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\ivalue.h(1453,11): warning C4251: 'c10::WeakOrStrongTypePtr::type_': class 'c10::Type::SingletonOrSharedTypePtr<c10::Type>'에서는 struct 'c10::WeakOrStrongTypePtr'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\jit_type_base.h(384): message : 'c10::Type::SingletonOrSharedTypePtr<c10::Type>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\jit_type.h(179,26): warning C4251: 'c10::UnionType::types_': class 'std::vector<c10::Type::TypePtr,std::allocator<c10::Type::TypePtr>>'에서는 struct 'c10::UnionType'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\jit_type_base.h(575): message : 'std::vector<c10::Type::TypePtr,std::allocator<c10::Type::TypePtr>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\jit_type.h(239,11): warning C4251: 'c10::OptionalType::contained_': class 'c10::Type::SingletonOrSharedTypePtr<c10::Type>'에서는 struct 'c10::OptionalType'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\jit_type_base.h(384): message : 'c10::Type::SingletonOrSharedTypePtr<c10::Type>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\jit_type.h(290,25): warning C4251: 'c10::Stride::stride_index_': class 'c10::optional<size_t>'에서는 struct 'c10::Stride'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\jit_type.h(276): message : 'c10::optional<size_t>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\jit_type.h(291,23): warning C4251: 'c10::Stride::contiguous_': class 'c10::optional<bool>'에서는 struct 'c10::Stride'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\TensorOptions.h(44): message : 'c10::optional<bool>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\jit_type.h(292,25): warning C4251: 'c10::Stride::stride_': class 'c10::optional<size_t>'에서는 struct 'c10::Stride'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\jit_type.h(276): message : 'c10::optional<size_t>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\jit_type.h(358,30): warning C4251: 'c10::ShapeSymbol::num_symbols': struct 'std::atomic<unsigned __int64>'에서는 struct 'c10::ShapeSymbol'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\atomic(2698): message : 'std::atomic<unsigned __int64>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(212,1): warning C4624: 'c10::constexpr_storage_t<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=std::vector<c10::ShapeSymbol,std::allocator<c10::ShapeSymbol>>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(411): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::constexpr_storage_t<T>'에 대한 참조를 확인하세요.
          with
          [
              T=std::vector<c10::ShapeSymbol,std::allocator<c10::ShapeSymbol>>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(549): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::trivially_copyable_optimization_optional_base<T>'에 대한 참조를 확인하세요.
          with
          [
              T=std::vector<c10::ShapeSymbol,std::allocator<c10::ShapeSymbol>>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(549): message : 컴파일되는 별칭 템플릿 인스턴스화 'c10::OptionalBase<T>'에 대한 참조를 확인하세요.
          with
          [
              T=std::vector<c10::ShapeSymbol,std::allocator<c10::ShapeSymbol>>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\jit_type.h(484): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::optional<std::vector<c10::ShapeSymbol,std::allocator<c10::ShapeSymbol>>>'에 대한 참조를 확인하세요.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(446,1): warning C4624: 'c10::trivially_copyable_optimization_optional_base<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=std::vector<c10::ShapeSymbol,std::allocator<c10::ShapeSymbol>>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\jit_type.h(484,45): warning C4251: 'c10::SymbolicShape::dims_': class 'c10::optional<std::vector<c10::ShapeSymbol,std::allocator<c10::ShapeSymbol>>>'에서는 struct 'c10::SymbolicShape'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\jit_type.h(439): message : 'c10::optional<std::vector<c10::ShapeSymbol,std::allocator<c10::ShapeSymbol>>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(212,1): warning C4624: 'c10::constexpr_storage_t<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=std::vector<bool,std::allocator<bool>>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(411): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::constexpr_storage_t<T>'에 대한 참조를 확인하세요.
          with
          [
              T=std::vector<bool,std::allocator<bool>>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(549): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::trivially_copyable_optimization_optional_base<T>'에 대한 참조를 확인하세요.
          with
          [
              T=std::vector<bool,std::allocator<bool>>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(549): message : 컴파일되는 별칭 템플릿 인스턴스화 'c10::OptionalBase<T>'에 대한 참조를 확인하세요.
          with
          [
              T=std::vector<bool,std::allocator<bool>>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\jit_type.h(443): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::optional<std::vector<bool,std::allocator<bool>>>'에 대한 참조를 확인하세요.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(446,1): warning C4624: 'c10::trivially_copyable_optimization_optional_base<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=std::vector<bool,std::allocator<bool>>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\jit_type.h(842,33): warning C4251: 'c10::TensorType::scalar_type_': class 'c10::optional<c10::ScalarType>'에서는 struct 'c10::TensorType'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\ScalarTypeToTypeMeta.h(30): message : 'c10::optional<c10::ScalarType>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\jit_type.h(843,29): warning C4251: 'c10::TensorType::device_': class 'c10::optional<c10::Device>'에서는 struct 'c10::TensorType'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\TensorOptions.h(25): message : 'c10::optional<c10::Device>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(212,1): warning C4624: 'c10::constexpr_storage_t<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=std::vector<c10::optional<c10::Stride>,std::allocator<c10::optional<c10::Stride>>>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(411): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::constexpr_storage_t<T>'에 대한 참조를 확인하세요.
          with
          [
              T=std::vector<c10::optional<c10::Stride>,std::allocator<c10::optional<c10::Stride>>>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(549): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::trivially_copyable_optimization_optional_base<T>'에 대한 참조를 확인하세요.
          with
          [
              T=std::vector<c10::optional<c10::Stride>,std::allocator<c10::optional<c10::Stride>>>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(549): message : 컴파일되는 별칭 템플릿 인스턴스화 'c10::OptionalBase<T>'에 대한 참조를 확인하세요.
          with
          [
              T=std::vector<c10::optional<c10::Stride>,std::allocator<c10::optional<c10::Stride>>>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\jit_type.h(569): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::optional<std::vector<c10::optional<c10::Stride>,std::allocator<c10::optional<c10::Stride>>>>'에 대한 참조를 확인하세요.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\jit_type.h(845): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::VaryingShape<c10::Stride>'에 대한 참조를 확인하세요.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(446,1): warning C4624: 'c10::trivially_copyable_optimization_optional_base<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=std::vector<c10::optional<c10::Stride>,std::allocator<c10::optional<c10::Stride>>>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\jit_type.h(845,24): warning C4251: 'c10::TensorType::strides_': struct 'c10::VaryingShape<c10::Stride>'에서는 struct 'c10::TensorType'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\jit_type.h(594): message : 'c10::VaryingShape<c10::Stride>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\jit_type.h(846,23): warning C4251: 'c10::TensorType::requires_grad_': class 'c10::optional<bool>'에서는 struct 'c10::TensorType'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\TensorOptions.h(44): message : 'c10::optional<bool>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\jit_type.h(858,23): warning C4251: 'c10::TensorType::undefined_': class 'c10::optional<bool>'에서는 struct 'c10::TensorType'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\TensorOptions.h(44): message : 'c10::optional<bool>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(212,1): warning C4624: 'c10::constexpr_storage_t<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=std::vector<c10::optional<int64_t>,std::allocator<c10::optional<int64_t>>>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(411): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::constexpr_storage_t<T>'에 대한 참조를 확인하세요.
          with
          [
              T=std::vector<c10::optional<int64_t>,std::allocator<c10::optional<int64_t>>>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(549): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::trivially_copyable_optimization_optional_base<T>'에 대한 참조를 확인하세요.
          with
          [
              T=std::vector<c10::optional<int64_t>,std::allocator<c10::optional<int64_t>>>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(549): message : 컴파일되는 별칭 템플릿 인스턴스화 'c10::OptionalBase<T>'에 대한 참조를 확인하세요.
          with
          [
              T=std::vector<c10::optional<int64_t>,std::allocator<c10::optional<int64_t>>>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\jit_type.h(569): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::optional<std::vector<c10::optional<int64_t>,std::allocator<c10::optional<int64_t>>>>'에 대한 참조를 확인하세요.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\jit_type.h(615): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::VaryingShape<int64_t>'에 대한 참조를 확인하세요.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(446,1): warning C4624: 'c10::trivially_copyable_optimization_optional_base<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=std::vector<c10::optional<int64_t>,std::allocator<c10::optional<int64_t>>>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(212,1): warning C4624: 'c10::constexpr_storage_t<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=std::vector<int64_t,std::allocator<int64_t>>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(411): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::constexpr_storage_t<T>'에 대한 참조를 확인하세요.
          with
          [
              T=std::vector<int64_t,std::allocator<int64_t>>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(549): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::trivially_copyable_optimization_optional_base<T>'에 대한 참조를 확인하세요.
          with
          [
              T=std::vector<int64_t,std::allocator<int64_t>>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(549): message : 컴파일되는 별칭 템플릿 인스턴스화 'c10::OptionalBase<T>'에 대한 참조를 확인하세요.
          with
          [
              T=std::vector<int64_t,std::allocator<int64_t>>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\jit_type.h(728): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::optional<std::vector<int64_t,std::allocator<int64_t>>>'에 대한 참조를 확인하세요.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(446,1): warning C4624: 'c10::trivially_copyable_optimization_optional_base<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=std::vector<int64_t,std::allocator<int64_t>>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\jit_type.h(866,62): warning C4251: 'c10::SingleElementType<c10::TypeKind::ListType,c10::ListType>::elem': class 'c10::Type::SingletonOrSharedTypePtr<c10::Type>'에서는 struct 'c10::SingleElementType<c10::TypeKind::ListType,c10::ListType>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\jit_type_base.h(384): message : 'c10::Type::SingletonOrSharedTypePtr<c10::Type>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\jit_type.h(1009,24): warning C4251: 'c10::DictType::types': class 'std::vector<c10::Type::TypePtr,std::allocator<c10::Type::TypePtr>>'에서는 struct 'c10::DictType'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\jit_type_base.h(575): message : 'std::vector<c10::Type::TypePtr,std::allocator<c10::Type::TypePtr>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\jit_type.h(1017,66): warning C4251: 'c10::SingleElementType<c10::TypeKind::FutureType,c10::FutureType>::elem': class 'c10::Type::SingletonOrSharedTypePtr<c10::Type>'에서는 struct 'c10::SingleElementType<c10::TypeKind::FutureType,c10::FutureType>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\jit_type_base.h(384): message : 'c10::Type::SingletonOrSharedTypePtr<c10::Type>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\jit_type.h(1059,64): warning C4251: 'c10::SingleElementType<c10::TypeKind::AwaitType,c10::AwaitType>::elem': class 'c10::Type::SingletonOrSharedTypePtr<c10::Type>'에서는 struct 'c10::SingleElementType<c10::TypeKind::AwaitType,c10::AwaitType>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\jit_type_base.h(384): message : 'c10::Type::SingletonOrSharedTypePtr<c10::Type>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\jit_type.h(1101,62): warning C4251: 'c10::SingleElementType<c10::TypeKind::RRefType,c10::RRefType>::elem': class 'c10::Type::SingletonOrSharedTypePtr<c10::Type>'에서는 struct 'c10::SingleElementType<c10::TypeKind::RRefType,c10::RRefType>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\jit_type_base.h(384): message : 'c10::Type::SingletonOrSharedTypePtr<c10::Type>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\jit_type.h(1231,24): warning C4251: 'c10::TupleType::elements_': class 'std::vector<c10::Type::TypePtr,std::allocator<c10::Type::TypePtr>>'에서는 struct 'c10::TupleType'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\jit_type_base.h(575): message : 'std::vector<c10::Type::TypePtr,std::allocator<c10::Type::TypePtr>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\jit_type.h(1233,35): warning C4251: 'c10::TupleType::schema_': class 'std::shared_ptr<c10::FunctionSchema>'에서는 struct 'c10::TupleType'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\jit_type.h(1191): message : 'std::shared_ptr<c10::FunctionSchema>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\jit_type.h(2177,48): warning C4251: 'c10::InterfaceType::methods_': class 'std::shared_ptr<std::vector<c10::FunctionSchema,std::allocator<c10::FunctionSchema>>>'에서는 struct 'c10::InterfaceType'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\jit_type.h(2177): message : 'std::shared_ptr<std::vector<c10::FunctionSchema,std::allocator<c10::FunctionSchema>>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(212,1): warning C4624: 'c10::constexpr_storage_t<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=c10::impl::InlineDeviceGuard<c10::impl::VirtualGuardImpl>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(411): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::constexpr_storage_t<T>'에 대한 참조를 확인하세요.
          with
          [
              T=c10::impl::InlineDeviceGuard<c10::impl::VirtualGuardImpl>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(549): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::trivially_copyable_optimization_optional_base<T>'에 대한 참조를 확인하세요.
          with
          [
              T=c10::impl::InlineDeviceGuard<c10::impl::VirtualGuardImpl>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(549): message : 컴파일되는 별칭 템플릿 인스턴스화 'c10::OptionalBase<T>'에 대한 참조를 확인하세요.
          with
          [
              T=c10::impl::InlineDeviceGuard<c10::impl::VirtualGuardImpl>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\impl\InlineDeviceGuard.h(427): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::optional<c10::impl::InlineDeviceGuard<c10::impl::VirtualGuardImpl>>'에 대한 참조를 확인하세요.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\DeviceGuard.h(178): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::impl::InlineOptionalDeviceGuard<c10::impl::VirtualGuardImpl>'에 대한 참조를 확인하세요.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(446,1): warning C4624: 'c10::trivially_copyable_optimization_optional_base<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=c10::impl::InlineDeviceGuard<c10::impl::VirtualGuardImpl>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(212,1): warning C4624: 'c10::constexpr_storage_t<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=c10::impl::InlineStreamGuard<c10::impl::VirtualGuardImpl>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(411): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::constexpr_storage_t<T>'에 대한 참조를 확인하세요.
          with
          [
              T=c10::impl::InlineStreamGuard<c10::impl::VirtualGuardImpl>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(549): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::trivially_copyable_optimization_optional_base<T>'에 대한 참조를 확인하세요.
          with
          [
              T=c10::impl::InlineStreamGuard<c10::impl::VirtualGuardImpl>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(549): message : 컴파일되는 별칭 템플릿 인스턴스화 'c10::OptionalBase<T>'에 대한 참조를 확인하세요.
          with
          [
              T=c10::impl::InlineStreamGuard<c10::impl::VirtualGuardImpl>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\impl\InlineStreamGuard.h(197): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::optional<c10::impl::InlineStreamGuard<c10::impl::VirtualGuardImpl>>'에 대한 참조를 확인하세요.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\StreamGuard.h(139): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::impl::InlineOptionalStreamGuard<c10::impl::VirtualGuardImpl>'에 대한 참조를 확인하세요.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(446,1): warning C4624: 'c10::trivially_copyable_optimization_optional_base<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=c10::impl::InlineStreamGuard<c10::impl::VirtualGuardImpl>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(212,1): warning C4624: 'c10::constexpr_storage_t<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=c10::impl::VirtualGuardImpl
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(411): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::constexpr_storage_t<T>'에 대한 참조를 확인하세요.
          with
          [
              T=c10::impl::VirtualGuardImpl
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(549): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::trivially_copyable_optimization_optional_base<T>'에 대한 참조를 확인하세요.
          with
          [
              T=c10::impl::VirtualGuardImpl
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(549): message : 컴파일되는 별칭 템플릿 인스턴스화 'c10::OptionalBase<T>'에 대한 참조를 확인하세요.
          with
          [
              T=c10::impl::VirtualGuardImpl
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\impl\InlineStreamGuard.h(232): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::optional<T>'에 대한 참조를 확인하세요.
          with
          [
              T=c10::impl::VirtualGuardImpl
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\StreamGuard.h(162): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::impl::InlineMultiStreamGuard<c10::impl::VirtualGuardImpl>'에 대한 참조를 확인하세요.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(446,1): warning C4624: 'c10::trivially_copyable_optimization_optional_base<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=c10::impl::VirtualGuardImpl
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\ivalue_inl.h(279,21): warning C4251: 'c10::ivalue::ConstantString::str_': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 struct 'c10::ivalue::ConstantString'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xstring(5186): message : 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\ivalue_inl.h(648,24): warning C4251: 'c10::ivalue::Tuple::type_': class 'c10::Type::SingletonOrSharedTypePtr<c10::Type>'에서는 struct 'c10::ivalue::Tuple'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\jit_type_base.h(384): message : 'c10::Type::SingletonOrSharedTypePtr<c10::Type>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\ivalue_inl.h(837,62): warning C4275: DLL 인터페이스가 아닌 class 'std::exception'이(가) DLL 인터페이스 struct 'c10::ivalue::Future::FutureError'의 기본으로 사용되었습니다.
C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\vcruntime_exception.h(48): message : 'std::exception' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\ivalue_inl.h(837): message : 'c10::ivalue::Future::FutureError' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\ivalue_inl.h(847,17): warning C4251: 'c10::ivalue::Future::FutureError::error_msg': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 struct 'c10::ivalue::Future::FutureError'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xstring(5186): message : 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\ivalue_inl.h(1338,22): warning C4251: 'c10::ivalue::Future::mutex_': class 'std::mutex'에서는 struct 'c10::ivalue::Future'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\mutex(86): message : 'std::mutex' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\ivalue_inl.h(1339,20): warning C4251: 'c10::ivalue::Future::completed_': struct 'std::atomic<bool>'에서는 struct 'c10::ivalue::Future'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\atomic(2686): message : 'std::atomic<bool>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\ivalue_inl.h(1340,27): warning C4251: 'c10::ivalue::Future::finished_cv_': class 'std::condition_variable'에서는 struct 'c10::ivalue::Future'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\mutex(573): message : 'std::condition_variable' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\ivalue_inl.h(1343,11): warning C4251: 'c10::ivalue::Future::type_': class 'c10::Type::SingletonOrSharedTypePtr<c10::Type>'에서는 struct 'c10::ivalue::Future'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\jit_type_base.h(384): message : 'c10::Type::SingletonOrSharedTypePtr<c10::Type>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\ivalue_inl.h(1344,45): warning C4251: 'c10::ivalue::Future::callbacks_': class 'std::vector<std::function<void (c10::ivalue::Future &)>,std::allocator<std::function<void (c10::ivalue::Future &)>>>'에서는 struct 'c10::ivalue::Future'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\ivalue_inl.h(1344): message : 'std::vector<std::function<void (c10::ivalue::Future &)>,std::allocator<std::function<void (c10::ivalue::Future &)>>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\ivalue_inl.h(1345,22): warning C4251: 'c10::ivalue::Future::eptr_': class 'std::exception_ptr'에서는 struct 'c10::ivalue::Future'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\exception(216): message : 'std::exception_ptr' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\ivalue_inl.h(1349,37): warning C4251: 'c10::ivalue::Future::impl_': class 'c10::impl::VirtualGuardImpl'에서는 struct 'c10::ivalue::Future'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\impl\VirtualGuardImpl.h(12): message : 'c10::impl::VirtualGuardImpl' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\ivalue_inl.h(1354,25): warning C4251: 'c10::ivalue::Future::currentDevice_': class 'c10::optional<c10::Device>'에서는 struct 'c10::ivalue::Future'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\TensorOptions.h(25): message : 'c10::optional<c10::Device>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\ivalue_inl.h(1360,27): warning C4251: 'c10::ivalue::Future::events_': class 'std::vector<c10::Event,std::allocator<c10::Event>>'에서는 struct 'c10::ivalue::Future'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\ivalue_inl.h(1360): message : 'std::vector<c10::Event,std::allocator<c10::Event>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\ivalue_inl.h(1364,28): warning C4251: 'c10::ivalue::Future::storages_': class 'std::vector<c10::ivalue::Future::WeakStorage,std::allocator<c10::ivalue::Future::WeakStorage>>'에서는 struct 'c10::ivalue::Future'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\ivalue_inl.h(884): message : 'std::vector<c10::ivalue::Future::WeakStorage,std::allocator<c10::ivalue::Future::WeakStorage>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\ivalue_inl.h(1372,34): warning C4251: 'c10::ivalue::Future::devices_': class 'std::vector<c10::Device,std::allocator<c10::Device>>'에서는 struct 'c10::ivalue::Future'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\ivalue_inl.h(824): message : 'std::vector<c10::Device,std::allocator<c10::Device>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(212,1): warning C4624: 'c10::constexpr_storage_t<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=std::vector<c10::ivalue::Future::WeakStorage,std::allocator<c10::ivalue::Future::WeakStorage>>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(411): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::constexpr_storage_t<T>'에 대한 참조를 확인하세요.
          with
          [
              T=std::vector<c10::ivalue::Future::WeakStorage,std::allocator<c10::ivalue::Future::WeakStorage>>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(549): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::trivially_copyable_optimization_optional_base<T>'에 대한 참조를 확인하세요.
          with
          [
              T=std::vector<c10::ivalue::Future::WeakStorage,std::allocator<c10::ivalue::Future::WeakStorage>>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(549): message : 컴파일되는 별칭 템플릿 인스턴스화 'c10::OptionalBase<T>'에 대한 참조를 확인하세요.
          with
          [
              T=std::vector<c10::ivalue::Future::WeakStorage,std::allocator<c10::ivalue::Future::WeakStorage>>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\ivalue_inl.h(884): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::optional<std::vector<c10::ivalue::Future::WeakStorage,std::allocator<c10::ivalue::Future::WeakStorage>>>'에 대한 참조를 확인하세요.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(446,1): warning C4624: 'c10::trivially_copyable_optimization_optional_base<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=std::vector<c10::ivalue::Future::WeakStorage,std::allocator<c10::ivalue::Future::WeakStorage>>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\ivalue_inl.h(1439,11): warning C4251: 'c10::ivalue::Await::elType_': class 'c10::Type::SingletonOrSharedTypePtr<c10::Type>'에서는 struct 'c10::ivalue::Await'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\jit_type_base.h(384): message : 'c10::Type::SingletonOrSharedTypePtr<c10::Type>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\ivalue_inl.h(1440,11): warning C4251: 'c10::ivalue::Await::type_': class 'c10::Type::SingletonOrSharedTypePtr<c10::Type>'에서는 struct 'c10::ivalue::Await'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\jit_type_base.h(384): message : 'c10::Type::SingletonOrSharedTypePtr<c10::Type>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\ivalue_inl.h(1441,23): warning C4251: 'c10::ivalue::Await::args_': class 'std::vector<c10::IValue,std::allocator<c10::IValue>>'에서는 struct 'c10::ivalue::Await'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\impl\PyInterpreter.h(25): message : 'std::vector<c10::IValue,std::allocator<c10::IValue>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\ivalue_inl.h(1442,27): warning C4251: 'c10::ivalue::Await::fn_': class 'std::function<c10::IValue (void)>'에서는 struct 'c10::ivalue::Await'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\ivalue_inl.h(1377): message : 'std::function<c10::IValue (void)>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\ivalue_inl.h(1579,23): warning C4251: 'c10::ivalue::Object::slots_': class 'std::vector<c10::IValue,std::allocator<c10::IValue>>'에서는 struct 'c10::ivalue::Object'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\impl\PyInterpreter.h(25): message : 'std::vector<c10::IValue,std::allocator<c10::IValue>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\TensorNames.h(40,21): warning C4251: 'at::namedinference::TensorName::origin_': class 'c10::ArrayRef<at::Dimname>'에서는 struct 'at::namedinference::TensorName'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\Dimname.h(36): message : 'c10::ArrayRef<at::Dimname>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\TensorNames.h(71,17): warning C4251: 'at::namedinference::TensorNames::names_': class 'c10::SmallVector<at::namedinference::TensorName,10>'에서는 struct 'at::namedinference::TensorNames'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\TensorNames.h(49): message : 'c10::SmallVector<at::namedinference::TensorName,10>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\autograd\variable.h(203,15): warning C4251: 'torch::autograd::AutogradMeta::name_': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 struct 'torch::autograd::AutogradMeta'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xstring(5186): message : 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\autograd\variable.h(206,25): warning C4251: 'torch::autograd::AutogradMeta::grad_fn_': class 'std::shared_ptr<torch::autograd::Node>'에서는 struct 'torch::autograd::AutogradMeta'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\TensorBase.h(748): message : 'std::shared_ptr<torch::autograd::Node>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\autograd\variable.h(207,23): warning C4251: 'torch::autograd::AutogradMeta::grad_accumulator_': class 'std::weak_ptr<torch::autograd::Node>'에서는 struct 'torch::autograd::AutogradMeta'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\autograd\variable.h(128): message : 'std::weak_ptr<torch::autograd::Node>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\autograd\variable.h(218,32): warning C4251: 'torch::autograd::AutogradMeta::fw_grad_': class 'std::shared_ptr<torch::autograd::ForwardGrad>'에서는 struct 'torch::autograd::AutogradMeta'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\autograd\forward_grad.h(111): message : 'std::shared_ptr<torch::autograd::ForwardGrad>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\autograd\variable.h(230,49): warning C4251: 'torch::autograd::AutogradMeta::hooks_': class 'std::vector<std::unique_ptr<torch::autograd::FunctionPreHook,std::default_delete<torch::autograd::FunctionPreHook>>,std::allocator<std::unique_ptr<torch::autograd::FunctionPreHook,std::default_delete<torch::autograd::FunctionPreHook>>>>'에서는 struct 'torch::autograd::AutogradMeta'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\autograd\variable.h(185): message : 'std::vector<std::unique_ptr<torch::autograd::FunctionPreHook,std::default_delete<torch::autograd::FunctionPreHook>>,std::allocator<std::unique_ptr<torch::autograd::FunctionPreHook,std::default_delete<torch::autograd::FunctionPreHook>>>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\autograd\variable.h(231,31): warning C4251: 'torch::autograd::AutogradMeta::cpp_hooks_list_': class 'std::shared_ptr<torch::autograd::hooks_list>'에서는 struct 'torch::autograd::AutogradMeta'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\autograd\cpp_hook.h(14): message : 'std::shared_ptr<torch::autograd::hooks_list>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\autograd\variable.h(252,22): warning C4251: 'torch::autograd::AutogradMeta::mutex_': class 'std::mutex'에서는 struct 'torch::autograd::AutogradMeta'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\mutex(86): message : 'std::mutex' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\autograd\variable.h(327,44): warning C4251: 'torch::autograd::ViewInfo::view_fn_': class 'std::function<torch::autograd::Variable (const torch::autograd::Variable &)>'에서는 struct 'torch::autograd::ViewInfo'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\autograd\variable.h(327): message : 'std::function<torch::autograd::Variable (const torch::autograd::Variable &)>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(212,1): warning C4624: 'c10::constexpr_storage_t<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=torch::autograd::ViewInfo
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(411): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::constexpr_storage_t<T>'에 대한 참조를 확인하세요.
          with
          [
              T=torch::autograd::ViewInfo
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(549): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::trivially_copyable_optimization_optional_base<T>'에 대한 참조를 확인하세요.
          with
          [
              T=torch::autograd::ViewInfo
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(549): message : 컴파일되는 별칭 템플릿 인스턴스화 'c10::OptionalBase<T>'에 대한 참조를 확인하세요.
          with
          [
              T=torch::autograd::ViewInfo
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\autograd\variable.h(575): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::optional<torch::autograd::ViewInfo>'에 대한 참조를 확인하세요.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(446,1): warning C4624: 'c10::trivially_copyable_optimization_optional_base<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=torch::autograd::ViewInfo
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\autograd\variable.h(575,27): warning C4251: 'torch::autograd::DifferentiableViewMeta::backward_info_': class 'c10::optional<torch::autograd::ViewInfo>'에서는 struct 'torch::autograd::DifferentiableViewMeta'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\autograd\variable.h(575): message : 'c10::optional<torch::autograd::ViewInfo>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\autograd\variable.h(576,27): warning C4251: 'torch::autograd::DifferentiableViewMeta::forward_info_': class 'c10::optional<torch::autograd::ViewInfo>'에서는 struct 'torch::autograd::DifferentiableViewMeta'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\autograd\variable.h(575): message : 'c10::optional<torch::autograd::ViewInfo>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(212,1): warning C4624: 'c10::constexpr_storage_t<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=c10::IValue
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(411): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::constexpr_storage_t<T>'에 대한 참조를 확인하세요.
          with
          [
              T=c10::IValue
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(549): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::trivially_copyable_optimization_optional_base<T>'에 대한 참조를 확인하세요.
          with
          [
              T=c10::IValue
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(549): message : 컴파일되는 별칭 템플릿 인스턴스화 'c10::OptionalBase<T>'에 대한 참조를 확인하세요.
          with
          [
              T=c10::IValue
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\function_schema.h(183): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::optional<c10::IValue>'에 대한 참조를 확인하세요.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(446,1): warning C4624: 'c10::trivially_copyable_optimization_optional_base<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=c10::IValue
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(212,1): warning C4624: 'c10::constexpr_storage_t<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=c10::AliasInfo
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(411): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::constexpr_storage_t<T>'에 대한 참조를 확인하세요.
          with
          [
              T=c10::AliasInfo
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(549): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::trivially_copyable_optimization_optional_base<T>'에 대한 참조를 확인하세요.
          with
          [
              T=c10::AliasInfo
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(549): message : 컴파일되는 별칭 템플릿 인스턴스화 'c10::OptionalBase<T>'에 대한 참조를 확인하세요.
          with
          [
              T=c10::AliasInfo
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\function_schema.h(28): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::optional<c10::AliasInfo>'에 대한 참조를 확인하세요.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(446,1): warning C4624: 'c10::trivially_copyable_optimization_optional_base<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=c10::AliasInfo
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\function_schema.h(310,16): warning C4251: 'c10::FunctionSchema::name_': struct 'c10::OperatorName'에서는 struct 'c10::FunctionSchema'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\operator_name.h(14): message : 'c10::OperatorName' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\function_schema.h(311,25): warning C4251: 'c10::FunctionSchema::arguments_': class 'std::vector<c10::Argument,std::allocator<c10::Argument>>'에서는 struct 'c10::FunctionSchema'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\function_schema.h(231): message : 'std::vector<c10::Argument,std::allocator<c10::Argument>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\function_schema.h(312,25): warning C4251: 'c10::FunctionSchema::returns_': class 'std::vector<c10::Argument,std::allocator<c10::Argument>>'에서는 struct 'c10::FunctionSchema'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\function_schema.h(231): message : 'std::vector<c10::Argument,std::allocator<c10::Argument>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\function_schema.h(324,36): warning C4251: 'c10::FunctionSchema::alias_kind_': class 'c10::optional<c10::AliasAnalysisKind>'에서는 struct 'c10::FunctionSchema'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\function_schema.h(324): message : 'c10::optional<c10::AliasAnalysisKind>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\boxing\BoxedKernel.h(170,38): warning C4251: 'c10::BoxedKernel::functor_': class 'c10::intrusive_ptr<c10::OperatorKernel,c10::detail::intrusive_target_default_null_type<TTarget>>'에서는 class 'c10::BoxedKernel'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              TTarget=c10::OperatorKernel
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\boxing\BoxedKernel.h(170): message : 'c10::intrusive_ptr<c10::OperatorKernel,c10::detail::intrusive_target_default_null_type<TTarget>>' 선언을 참조하십시오.
          with
          [
              TTarget=c10::OperatorKernel
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(212,1): warning C4624: 'c10::constexpr_storage_t<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=std::vector<c10::SymInt,std::allocator<c10::SymInt>>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(411): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::constexpr_storage_t<T>'에 대한 참조를 확인하세요.
          with
          [
              T=std::vector<c10::SymInt,std::allocator<c10::SymInt>>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(549): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::trivially_copyable_optimization_optional_base<T>'에 대한 참조를 확인하세요.
          with
          [
              T=std::vector<c10::SymInt,std::allocator<c10::SymInt>>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(549): message : 컴파일되는 별칭 템플릿 인스턴스화 'c10::OptionalBase<T>'에 대한 참조를 확인하세요.
          with
          [
              T=std::vector<c10::SymInt,std::allocator<c10::SymInt>>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\ivalue.h(96): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::optional<std::vector<T,std::allocator<T>>>'에 대한 참조를 확인하세요.
          with
          [
              T=c10::SymInt
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\boxing\impl\make_boxed_from_unboxed_functor.h(378): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::OptionalArray<c10::SymInt>'에 대한 참조를 확인하세요.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\boxing\impl\make_boxed_from_unboxed_functor.h(388): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::impl::ivalue_to_arg<c10::OptionalArray<c10::SymInt>,AllowDeprecatedTypes>'에 대한 참조를 확인하세요.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(446,1): warning C4624: 'c10::trivially_copyable_optimization_optional_base<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=std::vector<c10::SymInt,std::allocator<c10::SymInt>>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\dispatch\CppSignature.h(57,21): warning C4251: 'c10::impl::CppSignature::signature_': class 'std::type_index'에서는 class 'c10::impl::CppSignature'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\typeindex(25): message : 'std::type_index' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(212,1): warning C4624: 'c10::constexpr_storage_t<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=c10::either<c10::OperatorName,c10::FunctionSchema>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(411): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::constexpr_storage_t<T>'에 대한 참조를 확인하세요.
          with
          [
              T=c10::either<c10::OperatorName,c10::FunctionSchema>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(549): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::trivially_copyable_optimization_optional_base<T>'에 대한 참조를 확인하세요.
          with
          [
              T=c10::either<c10::OperatorName,c10::FunctionSchema>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(549): message : 컴파일되는 별칭 템플릿 인스턴스화 'c10::OptionalBase<T>'에 대한 참조를 확인하세요.
          with
          [
              T=c10::either<c10::OperatorName,c10::FunctionSchema>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\op_registration\op_registration.h(434): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::optional<c10::either<c10::OperatorName,c10::FunctionSchema>>'에 대한 참조를 확인하세요.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(446,1): warning C4624: 'c10::trivially_copyable_optimization_optional_base<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=c10::either<c10::OperatorName,c10::FunctionSchema>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\op_registration\op_registration.h(434,62): warning C4251: 'c10::RegisterOperators::Options::schemaOrName_': class 'c10::optional<c10::either<c10::OperatorName,c10::FunctionSchema>>'에서는 class 'c10::RegisterOperators::Options'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\op_registration\op_registration.h(434): message : 'c10::optional<c10::either<c10::OperatorName,c10::FunctionSchema>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\op_registration\op_registration.h(436,43): warning C4251: 'c10::RegisterOperators::Options::kernels': class 'std::vector<c10::RegisterOperators::Options::KernelRegistrationConfig,std::allocator<c10::RegisterOperators::Options::KernelRegistrationConfig>>'에서는 class 'c10::RegisterOperators::Options'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\op_registration\op_registration.h(436): message : 'std::vector<c10::RegisterOperators::Options::KernelRegistrationConfig,std::allocator<c10::RegisterOperators::Options::KernelRegistrationConfig>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\op_registration\op_registration.h(437,33): warning C4251: 'c10::RegisterOperators::Options::aliasAnalysisKind_': class 'c10::optional<c10::AliasAnalysisKind>'에서는 class 'c10::RegisterOperators::Options'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\function_schema.h(324): message : 'c10::optional<c10::AliasAnalysisKind>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\op_registration\op_registration.h(588,39): warning C4251: 'c10::RegisterOperators::registrars_': class 'std::vector<c10::RegistrationHandleRAII,std::allocator<c10::RegistrationHandleRAII>>'에서는 class 'c10::RegisterOperators'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\op_registration\op_registration.h(588): message : 'std::vector<c10::RegistrationHandleRAII,std::allocator<c10::RegistrationHandleRAII>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\library.h(302,35): warning C4251: 'torch::CppFunction::dispatch_key_': class 'c10::optional<c10::DispatchKey>'에서는 class 'torch::CppFunction'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\op_registration\op_registration.h(402): message : 'c10::optional<c10::DispatchKey>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\library.h(304,42): warning C4251: 'torch::CppFunction::cpp_signature_': class 'c10::optional<c10::impl::CppSignature>'에서는 class 'torch::CppFunction'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\op_registration\op_registration.h(402): message : 'c10::optional<c10::impl::CppSignature>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\library.h(305,40): warning C4251: 'torch::CppFunction::schema_': class 'std::unique_ptr<c10::FunctionSchema,std::default_delete<c10::FunctionSchema>>'에서는 class 'torch::CppFunction'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\op_registration\op_registration.h(28): message : 'std::unique_ptr<c10::FunctionSchema,std::default_delete<c10::FunctionSchema>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\library.h(306,15): warning C4251: 'torch::CppFunction::debug_': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 class 'torch::CppFunction'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xstring(5186): message : 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\library.h(808,30): warning C4251: 'torch::Library::ns_': class 'c10::optional<std::string>'에서는 class 'torch::Library'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\jit_type_base.h(76): message : 'c10::optional<std::string>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\library.h(809,35): warning C4251: 'torch::Library::dispatch_key_': class 'c10::optional<c10::DispatchKey>'에서는 class 'torch::Library'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\op_registration\op_registration.h(402): message : 'c10::optional<c10::DispatchKey>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\library.h(813,44): warning C4251: 'torch::Library::registrars_': class 'std::vector<c10::RegistrationHandleRAII,std::allocator<c10::RegistrationHandleRAII>>'에서는 class 'torch::Library'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\op_registration\op_registration.h(588): message : 'std::vector<c10::RegistrationHandleRAII,std::allocator<c10::RegistrationHandleRAII>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\class_type.h(53,11): warning C4251: 'c10::ClassAttribute::attributeType_': class 'c10::Type::SingletonOrSharedTypePtr<c10::Type>'에서는 struct 'c10::ClassAttribute'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\jit_type_base.h(384): message : 'c10::Type::SingletonOrSharedTypePtr<c10::Type>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\class_type.h(54,15): warning C4251: 'c10::ClassAttribute::attributeName_': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 struct 'c10::ClassAttribute'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xstring(5186): message : 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\class_type.h(411,28): warning C4251: 'c10::ClassType::constantNames_': class 'std::vector<std::string,std::allocator<std::string>>'에서는 struct 'c10::ClassType'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Exception.h(36): message : 'std::vector<std::string,std::allocator<std::string>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\class_type.h(412,23): warning C4251: 'c10::ClassType::constantValues_': class 'std::vector<c10::IValue,std::allocator<c10::IValue>>'에서는 struct 'c10::ClassType'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\impl\PyInterpreter.h(25): message : 'std::vector<c10::IValue,std::allocator<c10::IValue>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\class_type.h(414,34): warning C4251: 'c10::ClassType::compilation_unit_': class 'std::weak_ptr<torch::jit::CompilationUnit>'에서는 struct 'c10::ClassType'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\ivalue.h(1404): message : 'std::weak_ptr<torch::jit::CompilationUnit>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\class_type.h(417,31): warning C4251: 'c10::ClassType::attributes_': class 'std::vector<c10::ClassAttribute,std::allocator<c10::ClassAttribute>>'에서는 struct 'c10::ClassType'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\class_type.h(320): message : 'std::vector<c10::ClassAttribute,std::allocator<c10::ClassAttribute>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\class_type.h(420,24): warning C4251: 'c10::ClassType::attributeTypes_': class 'std::vector<c10::Type::TypePtr,std::allocator<c10::Type::TypePtr>>'에서는 struct 'c10::ClassType'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\jit_type_base.h(575): message : 'std::vector<c10::Type::TypePtr,std::allocator<c10::Type::TypePtr>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\class_type.h(423,38): warning C4251: 'c10::ClassType::methods_': class 'std::vector<torch::jit::Function *,std::allocator<torch::jit::Function *>>'에서는 struct 'c10::ClassType'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\class_type.h(108): message : 'std::vector<torch::jit::Function *,std::allocator<torch::jit::Function *>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\class_type.h(424,38): warning C4251: 'c10::ClassType::staticmethods_': class 'std::vector<torch::jit::Function *,std::allocator<torch::jit::Function *>>'에서는 struct 'c10::ClassType'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\class_type.h(108): message : 'std::vector<torch::jit::Function *,std::allocator<torch::jit::Function *>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\class_type.h(427,38): warning C4251: 'c10::ClassType::forward_hooks_': class 'std::vector<torch::jit::Function *,std::allocator<torch::jit::Function *>>'에서는 struct 'c10::ClassType'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\class_type.h(108): message : 'std::vector<torch::jit::Function *,std::allocator<torch::jit::Function *>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\class_type.h(428,38): warning C4251: 'c10::ClassType::forward_pre_hooks_': class 'std::vector<torch::jit::Function *,std::allocator<torch::jit::Function *>>'에서는 struct 'c10::ClassType'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\class_type.h(108): message : 'std::vector<torch::jit::Function *,std::allocator<torch::jit::Function *>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\class_type.h(431,25): warning C4251: 'c10::ClassType::properties_': class 'std::vector<c10::ClassType::Property,std::allocator<c10::ClassType::Property>>'에서는 struct 'c10::ClassType'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\class_type.h(246): message : 'std::vector<c10::ClassType::Property,std::allocator<c10::ClassType::Property>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\class_type.h(436,15): warning C4251: 'c10::ClassType::doc_string_': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 struct 'c10::ClassType'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xstring(5186): message : 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\class_type.h(439,28): warning C4251: 'c10::ClassType::unresolved_class_attributes_': class 'std::vector<std::string,std::allocator<std::string>>'에서는 struct 'c10::ClassType'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Exception.h(36): message : 'std::vector<std::string,std::allocator<std::string>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\custom_class_detail.h(212,15): warning C4251: 'torch::detail::class_base::qualClassName': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 class 'torch::detail::class_base'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xstring(5186): message : 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\custom_class_detail.h(213,20): warning C4251: 'torch::detail::class_base::classTypePtr': class 'std::shared_ptr<c10::ClassType>'에서는 class 'torch::detail::class_base'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\custom_class.h(13): message : 'std::shared_ptr<c10::ClassType>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\autograd\anomaly_mode.h(68,15): warning C4251: 'torch::autograd::AnomalyMetadata::traceback_': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 struct 'torch::autograd::AnomalyMetadata'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xstring(5186): message : 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\autograd\anomaly_mode.h(69,25): warning C4251: 'torch::autograd::AnomalyMetadata::parent_': class 'std::shared_ptr<torch::autograd::Node>'에서는 struct 'torch::autograd::AnomalyMetadata'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\TensorBase.h(748): message : 'std::shared_ptr<torch::autograd::Node>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\PythonTorchFunctionTLS.h(30,51): warning C4251: 'at::impl::PythonTorchFunctionTLS::stack_': class 'std::vector<std::shared_ptr<c10::SafePyObject>,std::allocator<std::shared_ptr<c10::SafePyObject>>>'에서는 struct 'at::impl::PythonTorchFunctionTLS'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\PythonTorchFunctionTLS.h(30): message : 'std::vector<std::shared_ptr<c10::SafePyObject>,std::allocator<std::shared_ptr<c10::SafePyObject>>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\SavedTensorHooks.h(17,47): warning C4251: 'at::impl::SavedTensorDefaultHooksTLS::stack': class 'std::stack<std::pair<PyObject *,PyObject *>,std::deque<std::pair<PyObject *,PyObject *>,std::allocator<std::pair<PyObject *,PyObject *>>>>'에서는 struct 'at::impl::SavedTensorDefaultHooksTLS'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\SavedTensorHooks.h(17): message : 'std::stack<std::pair<PyObject *,PyObject *>,std::deque<std::pair<PyObject *,PyObject *>,std::allocator<std::pair<PyObject *,PyObject *>>>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\SavedTensorHooks.h(24,30): warning C4251: 'at::impl::SavedTensorDefaultHooksTLS::disabled_error_message': class 'c10::optional<std::string>'에서는 struct 'at::impl::SavedTensorDefaultHooksTLS'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\jit_type_base.h(76): message : 'c10::optional<std::string>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\ThreadLocalPythonObjects.h(19,71): warning C4251: 'at::impl::ThreadLocalPythonObjects::obj_dict_': class 'std::unordered_map<std::string,std::shared_ptr<c10::SafePyObject>,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::pair<const std::string,std::shared_ptr<c10::SafePyObject>>>>'에서는 struct 'at::impl::ThreadLocalPythonObjects'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\ThreadLocalPythonObjects.h(19): message : 'std::unordered_map<std::string,std::shared_ptr<c10::SafePyObject>,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::pair<const std::string,std::shared_ptr<c10::SafePyObject>>>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\record_function.h(84,32): warning C4251: 'at::StringView::owned_str_ptr_': class 'std::shared_ptr<std::string>'에서는 struct 'at::StringView'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\record_function.h(84): message : 'std::shared_ptr<std::string>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\record_function.h(445,17): warning C4251: 'at::RecordFunction::step_callbacks_': struct 'at::StepCallbacks'에서는 struct 'at::RecordFunction'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\record_function.h(256): message : 'at::StepCallbacks' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\record_function.h(457,23): warning C4251: 'at::RecordFunction::ctx_': class 'c10::SmallVector<std::unique_ptr<at::ObserverContext,std::default_delete<at::ObserverContext>>,4>'에서는 struct 'at::RecordFunction'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\record_function.h(101): message : 'c10::SmallVector<std::unique_ptr<at::ObserverContext,std::default_delete<at::ObserverContext>>,4>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\record_function.h(459,43): warning C4251: 'at::RecordFunction::fn_': class 'c10::variant<std::string,at::RecordFunction::schema_ref_t>'에서는 struct 'at::RecordFunction'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\record_function.h(459): message : 'c10::variant<std::string,at::RecordFunction::schema_ref_t>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\record_function.h(462,31): warning C4251: 'at::RecordFunction::inputs_': class 'c10::ArrayRef<const c10::IValue>'에서는 struct 'at::RecordFunction'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\record_function.h(291): message : 'c10::ArrayRef<const c10::IValue>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\record_function.h(463,28): warning C4251: 'at::RecordFunction::outputs_': class 'std::vector<c10::IValue,std::allocator<c10::IValue>>'에서는 struct 'at::RecordFunction'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\impl\PyInterpreter.h(25): message : 'std::vector<c10::IValue,std::allocator<c10::IValue>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\record_function.h(718,27): warning C4251: 'at::RecordFunctionTLS::sorted_tls_callbacks_': class 'std::vector<at::RecordFunctionCallbacksEntry,std::allocator<at::RecordFunctionCallbacksEntry>>'에서는 struct 'at::RecordFunctionTLS'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\record_function.h(253): message : 'std::vector<at::RecordFunctionCallbacksEntry,std::allocator<at::RecordFunctionCallbacksEntry>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\impl\TorchDispatchModeTLS.h(19,51): warning C4251: 'c10::impl::TorchDispatchModeTLS::stack_': class 'std::vector<std::shared_ptr<c10::SafePyObject>,std::allocator<std::shared_ptr<c10::SafePyObject>>>'에서는 struct 'c10::impl::TorchDispatchModeTLS'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\PythonTorchFunctionTLS.h(30): message : 'std::vector<std::shared_ptr<c10::SafePyObject>,std::allocator<std::shared_ptr<c10::SafePyObject>>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\ThreadLocalState.h(49,46): warning C4251: 'at::ThreadLocalState::debug_info_': class 'std::shared_ptr<c10::ThreadLocalDebugInfo>'에서는 class 'at::ThreadLocalState'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\ThreadLocalDebugInfo.h(38): message : 'std::shared_ptr<c10::ThreadLocalDebugInfo>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\ThreadLocalState.h(61,54): warning C4251: 'at::ThreadLocalState::functorch_tls_': class 'std::shared_ptr<const at::functorch::FuncTorchTLSBase>'에서는 class 'at::ThreadLocalState'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\FuncTorchTLS.h(41): message : 'std::shared_ptr<const at::functorch::FuncTorchTLSBase>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\CPUGeneratorImpl.h(34,15): warning C4251: 'at::CPUGeneratorImpl::engine_': class 'at::mt19937_engine'에서는 struct 'at::CPUGeneratorImpl'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\MT19937RNGEngine.h(110): message : 'at::mt19937_engine' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\CPUGeneratorImpl.h(35,24): warning C4251: 'at::CPUGeneratorImpl::next_float_normal_sample_': class 'c10::optional<float>'에서는 struct 'at::CPUGeneratorImpl'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\CPUGeneratorImpl.h(25): message : 'c10::optional<float>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\CPUGeneratorImpl.h(36,25): warning C4251: 'at::CPUGeneratorImpl::next_double_normal_sample_': class 'c10::optional<double>'에서는 struct 'at::CPUGeneratorImpl'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\ops\logit_ops.h(18): message : 'c10::optional<double>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\Context.h(279,18): warning C4251: 'at::Context::thc_init': class 'c10::once_flag'에서는 class 'at::Context'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\CallOnce.h(24): message : 'c10::once_flag' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\Context.h(280,18): warning C4251: 'at::Context::thh_init': class 'c10::once_flag'에서는 class 'at::Context'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\CallOnce.h(24): message : 'c10::once_flag' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\Context.h(309,30): warning C4251: 'at::Context::quantized_engine': class 'c10::optional<c10::QEngine>'에서는 class 'at::Context'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\Context.h(309): message : 'c10::optional<c10::QEngine>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\TensorGeometry.h(117,28): warning C4251: 'at::TensorGeometry::sizes_': class 'std::vector<T,std::allocator<T>>'에서는 struct 'at::TensorGeometry'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              T=c10::SymInt
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\ArrayRef.h(247): message : 'std::vector<T,std::allocator<T>>' 선언을 참조하십시오.
          with
          [
              T=c10::SymInt
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\TensorGeometry.h(118,28): warning C4251: 'at::TensorGeometry::strides_': class 'std::vector<T,std::allocator<T>>'에서는 struct 'at::TensorGeometry'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              T=c10::SymInt
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\ArrayRef.h(247): message : 'std::vector<T,std::allocator<T>>' 선언을 참조하십시오.
          with
          [
              T=c10::SymInt
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\ops\from_blob.h(81,15): warning C4251: 'at::TensorMaker::sizes_': class 'c10::ArrayRef<int64_t>'에서는 class 'at::TensorMaker'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\ArrayRef.h(364): message : 'c10::ArrayRef<int64_t>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\ops\from_blob.h(82,23): warning C4251: 'at::TensorMaker::strides_': class 'c10::OptionalArrayRef<int64_t>'에서는 class 'at::TensorMaker'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\OptionalArrayRef.h(214): message : 'c10::OptionalArrayRef<int64_t>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\ops\from_blob.h(83,21): warning C4251: 'at::TensorMaker::storage_offset_': class 'c10::optional<int64_t>'에서는 class 'at::TensorMaker'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\TensorImpl.h(1702): message : 'c10::optional<int64_t>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\ops\from_blob.h(84,30): warning C4251: 'at::TensorMaker::deleter_': class 'std::function<void (void *)>'에서는 class 'at::TensorMaker'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\Allocator.h(186): message : 'std::function<void (void *)>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\ops\from_blob.h(85,41): warning C4251: 'at::TensorMaker::ctx_': class 'std::unique_ptr<void,c10::DeleterFnPtr>'에서는 class 'at::TensorMaker'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\UniqueVoidPtr.h(42): message : 'std::unique_ptr<void,c10::DeleterFnPtr>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\ops\from_blob.h(86,20): warning C4251: 'at::TensorMaker::device_': class 'c10::optional<c10::Device>'에서는 class 'at::TensorMaker'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\TensorOptions.h(25): message : 'c10::optional<c10::Device>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\NestedTensorImpl.h(168,24): warning C4251: 'at::native::NestedTensorImpl::storage_offsets_': class 'std::vector<int64_t,std::allocator<int64_t>>'에서는 struct 'at::native::NestedTensorImpl'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\MemoryFormat.h(85): message : 'std::vector<int64_t,std::allocator<int64_t>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\NestedTensorImpl.h(172,24): warning C4251: 'at::native::NestedTensorImpl::opt_sizes_': class 'std::vector<int64_t,std::allocator<int64_t>>'에서는 struct 'at::native::NestedTensorImpl'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\MemoryFormat.h(85): message : 'std::vector<int64_t,std::allocator<int64_t>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\autograd\saved_variable.h(77,32): warning C4251: 'torch::autograd::SavedVariable::fw_grad_': class 'std::shared_ptr<torch::autograd::ForwardGrad>'에서는 class 'torch::autograd::SavedVariable'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\autograd\forward_grad.h(111): message : 'std::shared_ptr<torch::autograd::ForwardGrad>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\autograd\saved_variable.h(85,23): warning C4251: 'torch::autograd::SavedVariable::weak_grad_fn_': class 'std::weak_ptr<torch::autograd::Node>'에서는 class 'torch::autograd::SavedVariable'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\autograd\variable.h(128): message : 'std::weak_ptr<torch::autograd::Node>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\autograd\saved_variable.h(100,39): warning C4251: 'torch::autograd::SavedVariable::hooks_': class 'std::unique_ptr<torch::autograd::SavedVariableHooks,std::default_delete<torch::autograd::SavedVariableHooks>>'에서는 class 'torch::autograd::SavedVariable'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\autograd\saved_variable.h(47): message : 'std::unique_ptr<torch::autograd::SavedVariableHooks,std::default_delete<torch::autograd::SavedVariableHooks>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\autograd\saved_variable.h(104,25): warning C4251: 'torch::autograd::SavedVariable::grad_fn_': class 'std::shared_ptr<torch::autograd::Node>'에서는 class 'torch::autograd::SavedVariable'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\TensorBase.h(748): message : 'std::shared_ptr<torch::autograd::Node>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\autograd\saved_variable.h(105,23): warning C4251: 'torch::autograd::SavedVariable::grad_accumulator_': class 'std::weak_ptr<torch::autograd::Node>'에서는 class 'torch::autograd::SavedVariable'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\autograd\variable.h(128): message : 'std::weak_ptr<torch::autograd::Node>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\autograd\function.h(113,60): warning C4251: 'std::enable_shared_from_this<torch::autograd::Node>::_Wptr': class 'std::weak_ptr<torch::autograd::Node>'에서는 class 'std::enable_shared_from_this<torch::autograd::Node>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\autograd\variable.h(128): message : 'std::weak_ptr<torch::autograd::Node>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\autograd\function.h(624,14): warning C4251: 'torch::autograd::Node::mutex_': class 'std::mutex'에서는 struct 'torch::autograd::Node'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\mutex(86): message : 'std::mutex' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\autograd\function.h(627,13): warning C4251: 'torch::autograd::Node::next_edges_': class 'std::vector<torch::autograd::Edge,std::allocator<torch::autograd::Edge>>'에서는 struct 'torch::autograd::Node'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\autograd\graph_task.h(12): message : 'std::vector<torch::autograd::Edge,std::allocator<torch::autograd::Edge>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\autograd\function.h(631,36): warning C4251: 'torch::autograd::Node::anomaly_metadata_': class 'std::unique_ptr<torch::autograd::AnomalyMetadata,std::default_delete<torch::autograd::AnomalyMetadata>>'에서는 struct 'torch::autograd::Node'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\autograd\function.h(631): message : 'std::unique_ptr<torch::autograd::AnomalyMetadata,std::default_delete<torch::autograd::AnomalyMetadata>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\autograd\function.h(644,49): warning C4251: 'torch::autograd::Node::pre_hooks_': class 'std::vector<std::unique_ptr<torch::autograd::FunctionPreHook,std::default_delete<torch::autograd::FunctionPreHook>>,std::allocator<std::unique_ptr<torch::autograd::FunctionPreHook,std::default_delete<torch::autograd::FunctionPreHook>>>>'에서는 struct 'torch::autograd::Node'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\autograd\variable.h(185): message : 'std::vector<std::unique_ptr<torch::autograd::FunctionPreHook,std::default_delete<torch::autograd::FunctionPreHook>>,std::allocator<std::unique_ptr<torch::autograd::FunctionPreHook,std::default_delete<torch::autograd::FunctionPreHook>>>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\autograd\function.h(646,49): warning C4251: 'torch::autograd::Node::tensor_pre_hooks_': class 'std::vector<std::unique_ptr<torch::autograd::FunctionPreHook,std::default_delete<torch::autograd::FunctionPreHook>>,std::allocator<std::unique_ptr<torch::autograd::FunctionPreHook,std::default_delete<torch::autograd::FunctionPreHook>>>>'에서는 struct 'torch::autograd::Node'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\autograd\variable.h(185): message : 'std::vector<std::unique_ptr<torch::autograd::FunctionPreHook,std::default_delete<torch::autograd::FunctionPreHook>>,std::allocator<std::unique_ptr<torch::autograd::FunctionPreHook,std::default_delete<torch::autograd::FunctionPreHook>>>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\autograd\function.h(648,61): warning C4251: 'torch::autograd::Node::retains_grad_hooks_': class 'std::unordered_map<int,std::unique_ptr<torch::autograd::FunctionPreHook,std::default_delete<torch::autograd::FunctionPreHook>>,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<const int,std::unique_ptr<torch::autograd::FunctionPreHook,std::default_delete<torch::autograd::FunctionPreHook>>>>>'에서는 struct 'torch::autograd::Node'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\autograd\function.h(519): message : 'std::unordered_map<int,std::unique_ptr<torch::autograd::FunctionPreHook,std::default_delete<torch::autograd::FunctionPreHook>>,std::hash<int>,std::equal_to<int>,std::allocator<std::pair<const int,std::unique_ptr<torch::autograd::FunctionPreHook,std::default_delete<torch::autograd::FunctionPreHook>>>>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\autograd\function.h(650,50): warning C4251: 'torch::autograd::Node::post_hooks_': class 'std::vector<std::unique_ptr<torch::autograd::FunctionPostHook,std::default_delete<torch::autograd::FunctionPostHook>>,std::allocator<std::unique_ptr<torch::autograd::FunctionPostHook,std::default_delete<torch::autograd::FunctionPostHook>>>>'에서는 struct 'torch::autograd::Node'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\autograd\function.h(465): message : 'std::vector<std::unique_ptr<torch::autograd::FunctionPostHook,std::default_delete<torch::autograd::FunctionPostHook>>,std::allocator<std::unique_ptr<torch::autograd::FunctionPostHook,std::default_delete<torch::autograd::FunctionPostHook>>>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\autograd\function.h(652,37): warning C4251: 'torch::autograd::Node::input_metadata_': class 'c10::SmallVector<torch::autograd::InputMetadata,2>'에서는 struct 'torch::autograd::Node'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\autograd\function.h(652): message : 'c10::SmallVector<torch::autograd::InputMetadata,2>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(212,1): warning C4624: 'c10::constexpr_storage_t<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=at::StepCallbacks
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(411): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::constexpr_storage_t<T>'에 대한 참조를 확인하세요.
          with
          [
              T=at::StepCallbacks
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(549): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::trivially_copyable_optimization_optional_base<T>'에 대한 참조를 확인하세요.
          with
          [
              T=at::StepCallbacks
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(549): message : 컴파일되는 별칭 템플릿 인스턴스화 'c10::OptionalBase<T>'에 대한 참조를 확인하세요.
          with
          [
              T=at::StepCallbacks
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\autograd\function.h(166): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::optional<at::StepCallbacks>'에 대한 참조를 확인하세요.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(446,1): warning C4624: 'c10::trivially_copyable_optimization_optional_base<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=at::StepCallbacks
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\autograd\function.h(204,1): warning C4267: '초기화 중': 'size_t'에서 'uint32_t'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\autograd\function.h(212,1): warning C4267: '초기화 중': 'size_t'에서 'uint32_t'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\autograd\function.h(220,1): warning C4267: '초기화 중': 'size_t'에서 'uint32_t'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\autograd\function.h(226,1): warning C4267: 'return': 'size_t'에서 'uint32_t'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\autograd\function.h(302,1): warning C4267: 'return': 'size_t'에서 'uint32_t'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\autograd\custom_function.h(109,47): warning C4251: 'torch::autograd::AutogradContext::saved_data': class 'ska::flat_hash_map<std::string,c10::IValue,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::pair<_Kty,_Ty>>>'에서는 struct 'torch::autograd::AutogradContext'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=std::string,
              _Ty=c10::IValue
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\autograd\custom_function.h(109): message : 'ska::flat_hash_map<std::string,c10::IValue,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::pair<_Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=std::string,
              _Ty=c10::IValue
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\autograd\custom_function.h(139,39): warning C4251: 'torch::autograd::AutogradContext::non_differentiable_': class 'std::unordered_set<c10::TensorImpl *,std::hash<c10::TensorImpl *>,std::equal_to<c10::TensorImpl *>,std::allocator<c10::TensorImpl *>>'에서는 struct 'torch::autograd::AutogradContext'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\autograd\custom_function.h(18): message : 'std::unordered_set<c10::TensorImpl *,std::hash<c10::TensorImpl *>,std::equal_to<c10::TensorImpl *>,std::allocator<c10::TensorImpl *>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\autograd\custom_function.h(140,39): warning C4251: 'torch::autograd::AutogradContext::dirty_inputs_': class 'std::unordered_set<c10::TensorImpl *,std::hash<c10::TensorImpl *>,std::equal_to<c10::TensorImpl *>,std::allocator<c10::TensorImpl *>>'에서는 struct 'torch::autograd::AutogradContext'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\autograd\custom_function.h(18): message : 'std::unordered_set<c10::TensorImpl *,std::hash<c10::TensorImpl *>,std::equal_to<c10::TensorImpl *>,std::allocator<c10::TensorImpl *>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\autograd\custom_function.h(141,47): warning C4251: 'torch::autograd::AutogradContext::saved_variables_': class 'std::vector<torch::autograd::SavedVariable,std::allocator<torch::autograd::SavedVariable>>'에서는 struct 'torch::autograd::AutogradContext'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\autograd\function.h(42): message : 'std::vector<torch::autograd::SavedVariable,std::allocator<torch::autograd::SavedVariable>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\autograd\custom_function.h(142,17): warning C4251: 'torch::autograd::AutogradContext::to_save_': class 'std::vector<at::Tensor,std::allocator<at::Tensor>>'에서는 struct 'torch::autograd::AutogradContext'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\ops\chunk_ops.h(18): message : 'std::vector<at::Tensor,std::allocator<at::Tensor>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\autograd\custom_function.h(148,23): warning C4251: 'torch::autograd::AutogradContext::grad_fn_': class 'std::weak_ptr<torch::autograd::Node>'에서는 struct 'torch::autograd::AutogradContext'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\autograd\variable.h(128): message : 'std::weak_ptr<torch::autograd::Node>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\autograd\custom_function.h(166,24): warning C4251: 'torch::autograd::VariableInfo::size': class 'std::vector<int64_t,std::allocator<int64_t>>'에서는 struct 'torch::autograd::VariableInfo'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\MemoryFormat.h(85): message : 'std::vector<int64_t,std::allocator<int64_t>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\TensorIterator.h(136,16): warning C4251: 'at::OperandInfo::stride_bytes': class 'c10::SmallVector<int64_t,6>'에서는 struct 'at::OperandInfo'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\TensorIterator.h(121): message : 'c10::SmallVector<int64_t,6>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\TensorIterator.h(145,25): warning C4251: 'at::OperandInfo::device': class 'c10::optional<c10::Device>'에서는 struct 'at::OperandInfo'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\TensorOptions.h(25): message : 'c10::optional<c10::Device>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\TensorIterator.h(210,31): warning C4251: 'at::OperandInfo::tensor_base_': class 'c10::MaybeOwned<at::TensorBase>'에서는 struct 'at::OperandInfo'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\TensorBase.h(136): message : 'c10::MaybeOwned<at::TensorBase>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\TensorIterator.h(211,31): warning C4251: 'at::OperandInfo::original_tensor_base_': class 'c10::MaybeOwned<at::TensorBase>'에서는 struct 'at::OperandInfo'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\TensorBase.h(136): message : 'c10::MaybeOwned<at::TensorBase>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\TensorIterator.h(619,13): warning C4251: 'at::TensorIteratorBase::shape_': class 'c10::SmallVector<int64_t,5>'에서는 struct 'at::TensorIteratorBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\DimVector.h(13): message : 'c10::SmallVector<int64_t,5>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\TensorIterator.h(629,13): warning C4251: 'at::TensorIteratorBase::perm_': class 'c10::SmallVector<int64_t,5>'에서는 struct 'at::TensorIteratorBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\DimVector.h(13): message : 'c10::SmallVector<int64_t,5>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\TensorIterator.h(642,13): warning C4251: 'at::TensorIteratorBase::view_offsets_': class 'c10::SmallVector<int64_t,5>'에서는 struct 'at::TensorIteratorBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\DimVector.h(13): message : 'c10::SmallVector<int64_t,5>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\TensorIterator.h(645,14): warning C4251: 'at::TensorIteratorBase::names_': class 'c10::SmallVector<at::Dimname,5>'에서는 struct 'at::TensorIteratorBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\NamedTensorUtils.h(12): message : 'c10::SmallVector<at::Dimname,5>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\TensorIterator.h(656,31): warning C4251: 'at::TensorIteratorBase::operands_': class 'c10::SmallVector<at::OperandInfo,4>'에서는 struct 'at::TensorIteratorBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\TensorIterator.h(656): message : 'c10::SmallVector<at::OperandInfo,4>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\TensorIterator.h(260,1): warning C4267: 'return': 'size_t'에서 'int'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\TensorIterator.h(267,1): warning C4267: 'return': 'size_t'에서 'int'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\TensorIterator.h(914,47): warning C4251: 'at::TensorIteratorConfig::tensors_': class 'c10::SmallVector<c10::MaybeOwned<at::TensorBase>,4>'에서는 class 'at::TensorIteratorConfig'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\TensorIterator.h(914): message : 'c10::SmallVector<c10::MaybeOwned<at::TensorBase>,4>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(212,1): warning C4624: 'c10::constexpr_storage_t<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=c10::DimVector
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(411): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::constexpr_storage_t<T>'에 대한 참조를 확인하세요.
          with
          [
              T=c10::DimVector
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(549): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::trivially_copyable_optimization_optional_base<T>'에 대한 참조를 확인하세요.
          with
          [
              T=c10::DimVector
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(549): message : 컴파일되는 별칭 템플릿 인스턴스화 'c10::OptionalBase<T>'에 대한 참조를 확인하세요.
          with
          [
              T=c10::DimVector
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\TensorIterator.h(918): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::optional<c10::DimVector>'에 대한 참조를 확인하세요.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(446,1): warning C4624: 'c10::trivially_copyable_optimization_optional_base<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=c10::DimVector
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\TensorIterator.h(918,28): warning C4251: 'at::TensorIteratorConfig::static_shape_': class 'c10::optional<c10::DimVector>'에서는 class 'at::TensorIteratorConfig'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\TensorUtils.h(179): message : 'c10::optional<c10::DimVector>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\TensorIterator.h(919,29): warning C4251: 'at::TensorIteratorConfig::static_dtype_': class 'c10::optional<c10::ScalarType>'에서는 class 'at::TensorIteratorConfig'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\ScalarTypeToTypeMeta.h(30): message : 'c10::optional<c10::ScalarType>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\TensorIterator.h(920,25): warning C4251: 'at::TensorIteratorConfig::static_device_': class 'c10::optional<c10::Device>'에서는 class 'at::TensorIteratorConfig'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\TensorOptions.h(25): message : 'c10::optional<c10::Device>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\TensorIterator.h(957,50): warning C4251: 'at::SplitUntil32Bit::iterator::vec': class 'std::vector<std::unique_ptr<at::TensorIterator,std::default_delete<at::TensorIterator>>,std::allocator<std::unique_ptr<at::TensorIterator,std::default_delete<at::TensorIterator>>>>'에서는 struct 'at::SplitUntil32Bit::iterator'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\TensorIterator.h(957): message : 'std::vector<std::unique_ptr<at::TensorIterator,std::default_delete<at::TensorIterator>>,std::allocator<std::unique_ptr<at::TensorIterator,std::default_delete<at::TensorIterator>>>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\ops\index_meta.h(42,35): warning C4251: 'at::meta::structured_index_Tensor::precompute_out<SIZES,STRIDES>::sizes': class 'c10::SmallVector<int64_t,5>'에서는 struct 'at::meta::structured_index_Tensor::precompute_out<SIZES,STRIDES>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\DimVector.h(13): message : 'c10::SmallVector<int64_t,5>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\ops\index_meta.h(44): message : 컴파일되는 클래스 템플릿 인스턴스화 'at::meta::structured_index_Tensor::precompute_out<SIZES,STRIDES>'에 대한 참조를 확인하세요.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\ops\index_meta.h(43,15): warning C4251: 'at::meta::structured_index_Tensor::precompute_out<SIZES,STRIDES>::strides': class 'c10::SmallVector<int64_t,5>'에서는 struct 'at::meta::structured_index_Tensor::precompute_out<SIZES,STRIDES>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\DimVector.h(13): message : 'c10::SmallVector<int64_t,5>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\dispatch\DispatchKeyExtractor.h(230,22): warning C4251: 'c10::DispatchKeyExtractor::dispatch_arg_indices_reverse_': struct 'c10::utils::bitset'에서는 struct 'c10::DispatchKeyExtractor'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Bitset.h(22): message : 'c10::utils::bitset' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\dispatch\DispatchKeyExtractor.h(233,18): warning C4251: 'c10::DispatchKeyExtractor::nonFallthroughKeys_': class 'c10::DispatchKeySet'에서는 struct 'c10::DispatchKeyExtractor'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\DispatchKeySet.h(152): message : 'c10::DispatchKeySet' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\dispatch\OperatorEntry.h(222,16): warning C4251: 'c10::impl::OperatorEntry::name_': struct 'c10::OperatorName'에서는 class 'c10::impl::OperatorEntry'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\ATenOpList.h(6): message : 'c10::OperatorName' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(212,1): warning C4624: 'c10::constexpr_storage_t<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=c10::impl::AnnotatedSchema
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(411): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::constexpr_storage_t<T>'에 대한 참조를 확인하세요.
          with
          [
              T=c10::impl::AnnotatedSchema
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(549): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::trivially_copyable_optimization_optional_base<T>'에 대한 참조를 확인하세요.
          with
          [
              T=c10::impl::AnnotatedSchema
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(549): message : 컴파일되는 별칭 템플릿 인스턴스화 'c10::OptionalBase<T>'에 대한 참조를 확인하세요.
          with
          [
              T=c10::impl::AnnotatedSchema
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\dispatch\OperatorEntry.h(223): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::optional<c10::impl::AnnotatedSchema>'에 대한 참조를 확인하세요.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(446,1): warning C4624: 'c10::trivially_copyable_optimization_optional_base<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=c10::impl::AnnotatedSchema
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\dispatch\OperatorEntry.h(223,34): warning C4251: 'c10::impl::OperatorEntry::schema_': class 'c10::optional<c10::impl::AnnotatedSchema>'에서는 class 'c10::impl::OperatorEntry'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\dispatch\OperatorEntry.h(223): message : 'c10::optional<c10::impl::AnnotatedSchema>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\dispatch\OperatorEntry.h(225,26): warning C4251: 'c10::impl::OperatorEntry::tags_': class 'std::vector<at::Tag,std::allocator<at::Tag>>'에서는 class 'c10::impl::OperatorEntry'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\library.h(600): message : 'std::vector<at::Tag,std::allocator<at::Tag>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\dispatch\OperatorEntry.h(230,22): warning C4251: 'c10::impl::OperatorEntry::py_cache_': class 'c10::PyHandleCache'에서는 class 'c10::impl::OperatorEntry'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\PyHandleCache.h(37): message : 'c10::PyHandleCache' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\dispatch\OperatorEntry.h(270,24): warning C4251: 'c10::impl::OperatorEntry::kernels_': class 'ska::flat_hash_map<c10::DispatchKey,std::list<c10::impl::AnnotatedKernel,std::allocator<c10::impl::AnnotatedKernel>>,std::hash<c10::DispatchKey>,std::equal_to<K>,std::allocator<std::pair<K,V>>>'에서는 class 'c10::impl::OperatorEntry'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              K=c10::DispatchKey,
              V=std::list<c10::impl::AnnotatedKernel,std::allocator<c10::impl::AnnotatedKernel>>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\dispatch\OperatorEntry.h(263): message : 'ska::flat_hash_map<c10::DispatchKey,std::list<c10::impl::AnnotatedKernel,std::allocator<c10::impl::AnnotatedKernel>>,std::hash<c10::DispatchKey>,std::equal_to<K>,std::allocator<std::pair<K,V>>>' 선언을 참조하십시오.
          with
          [
              K=c10::DispatchKey,
              V=std::list<c10::impl::AnnotatedKernel,std::allocator<c10::impl::AnnotatedKernel>>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(212,1): warning C4624: 'c10::constexpr_storage_t<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=c10::impl::OperatorEntry::CppSignatureWithDebug
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(411): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::constexpr_storage_t<T>'에 대한 참조를 확인하세요.
          with
          [
              T=c10::impl::OperatorEntry::CppSignatureWithDebug
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(549): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::trivially_copyable_optimization_optional_base<T>'에 대한 참조를 확인하세요.
          with
          [
              T=c10::impl::OperatorEntry::CppSignatureWithDebug
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(549): message : 컴파일되는 별칭 템플릿 인스턴스화 'c10::OptionalBase<T>'에 대한 참조를 확인하세요.
          with
          [
              T=c10::impl::OperatorEntry::CppSignatureWithDebug
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\dispatch\OperatorEntry.h(286): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::optional<c10::impl::OperatorEntry::CppSignatureWithDebug>'에 대한 참조를 확인하세요.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(446,1): warning C4624: 'c10::trivially_copyable_optimization_optional_base<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=c10::impl::OperatorEntry::CppSignatureWithDebug
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\dispatch\OperatorEntry.h(286,40): warning C4251: 'c10::impl::OperatorEntry::cpp_signature_': class 'c10::optional<c10::impl::OperatorEntry::CppSignatureWithDebug>'에서는 class 'c10::impl::OperatorEntry'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\dispatch\OperatorEntry.h(286): message : 'c10::optional<c10::impl::OperatorEntry::CppSignatureWithDebug>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\dispatch\OperatorEntry.h(287,40): warning C4251: 'c10::impl::OperatorEntry::sym_cpp_signature_': class 'c10::optional<c10::impl::OperatorEntry::CppSignatureWithDebug>'에서는 class 'c10::impl::OperatorEntry'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\dispatch\OperatorEntry.h(286): message : 'c10::optional<c10::impl::OperatorEntry::CppSignatureWithDebug>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\dispatch\Dispatcher.h(302,26): warning C4251: 'c10::Dispatcher::operators_': class 'std::list<c10::Dispatcher::OperatorDef,std::allocator<c10::Dispatcher::OperatorDef>>'에서는 class 'c10::Dispatcher'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\dispatch\Dispatcher.h(302): message : 'std::list<c10::Dispatcher::OperatorDef,std::allocator<c10::Dispatcher::OperatorDef>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\dispatch\Dispatcher.h(304,63): warning C4251: 'c10::Dispatcher::operatorLookupTable_': class 'c10::LeftRight<ska::flat_hash_map<c10::OperatorName,c10::OperatorHandle,std::hash<c10::OperatorName>,std::equal_to<K>,std::allocator<std::pair<K,V>>>>'에서는 class 'c10::Dispatcher'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              K=c10::OperatorName,
              V=c10::OperatorHandle
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\dispatch\Dispatcher.h(304): message : 'c10::LeftRight<ska::flat_hash_map<c10::OperatorName,c10::OperatorHandle,std::hash<c10::OperatorName>,std::equal_to<K>,std::allocator<std::pair<K,V>>>>' 선언을 참조하십시오.
          with
          [
              K=c10::OperatorName,
              V=c10::OperatorHandle
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\dispatch\Dispatcher.h(309,48): warning C4251: 'c10::Dispatcher::libraries_': class 'ska::flat_hash_map<std::string,std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::pair<K,V>>>'에서는 class 'c10::Dispatcher'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              K=std::string,
              V=std::string
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\dispatch\Dispatcher.h(309): message : 'ska::flat_hash_map<std::string,std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::pair<K,V>>>' 선언을 참조하십시오.
          with
          [
              K=std::string,
              V=std::string
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\dispatch\Dispatcher.h(313,53): warning C4251: 'c10::Dispatcher::listeners_': class 'std::unique_ptr<c10::detail::RegistrationListenerList,std::default_delete<c10::detail::RegistrationListenerList>>'에서는 class 'c10::Dispatcher'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\dispatch\Dispatcher.h(313): message : 'std::unique_ptr<c10::detail::RegistrationListenerList,std::default_delete<c10::detail::RegistrationListenerList>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\dispatch\Dispatcher.h(316,14): warning C4251: 'c10::Dispatcher::mutex_': class 'std::mutex'에서는 class 'c10::Dispatcher'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\mutex(86): message : 'std::mutex' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\dispatch\Dispatcher.h(330,27): warning C4251: 'c10::Dispatcher::cond_var_': class 'std::condition_variable'에서는 class 'c10::Dispatcher'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\mutex(573): message : 'std::condition_variable' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\dispatch\Dispatcher.h(464,48): warning C4251: 'c10::OperatorHandle::operatorIterator_': class 'std::_List_iterator<std::_List_val<std::_List_simple_types<_Ty>>>'에서는 class 'c10::OperatorHandle'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=c10::Dispatcher::OperatorDef
          ]
C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\list(787): message : 'std::_List_iterator<std::_List_val<std::_List_simple_types<_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Ty=c10::Dispatcher::OperatorDef
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\data\samplers\distributed.h(101,23): warning C4251: 'torch::data::samplers::DistributedRandomSampler::all_indices_': class 'std::vector<T,std::allocator<T>>'에서는 class 'torch::data::samplers::DistributedRandomSampler'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              T=size_t
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\ArrayRef.h(247): message : 'std::vector<T,std::allocator<T>>' 선언을 참조하십시오.
          with
          [
              T=size_t
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\data\samplers\distributed.h(134,23): warning C4251: 'torch::data::samplers::DistributedSequentialSampler::all_indices_': class 'std::vector<T,std::allocator<T>>'에서는 class 'torch::data::samplers::DistributedSequentialSampler'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              T=size_t
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\ArrayRef.h(247): message : 'std::vector<T,std::allocator<T>>' 선언을 참조하십시오.
          with
          [
              T=size_t
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\imethod.h(45,36): warning C4251: 'torch::IMethod::argumentNames_': class 'std::vector<std::string,std::allocator<std::string>>'에서는 class 'torch::IMethod'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Exception.h(36): message : 'std::vector<std::string,std::allocator<std::string>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\jit\ir\attributes.h(128,52): warning C4275: DLL 인터페이스가 아닌 struct 'torch::jit::AttributeValue'이(가) DLL 인터페이스 struct 'torch::jit::GraphAttr'의 기본으로 사용되었습니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\jit\ir\attributes.h(57): message : 'torch::jit::AttributeValue' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\jit\ir\attributes.h(128): message : 'torch::jit::GraphAttr' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\jit\ir\attributes.h(142,26): warning C4251: 'torch::jit::GraphAttr::value_': class 'std::shared_ptr<torch::jit::Graph>'에서는 struct 'torch::jit::GraphAttr'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\function.h(32): message : 'std::shared_ptr<torch::jit::Graph>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\jit\ir\attributes.h(145,53): warning C4275: DLL 인터페이스가 아닌 struct 'torch::jit::AttributeValue'이(가) DLL 인터페이스 struct 'torch::jit::GraphsAttr'의 기본으로 사용되었습니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\jit\ir\attributes.h(57): message : 'torch::jit::AttributeValue' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\jit\ir\attributes.h(145): message : 'torch::jit::GraphsAttr' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\jit\ir\attributes.h(160,13): warning C4251: 'torch::jit::GraphsAttr::value_': class 'std::vector<std::shared_ptr<torch::jit::Graph>,std::allocator<std::shared_ptr<torch::jit::Graph>>>'에서는 struct 'torch::jit::GraphsAttr'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\jit\ir\attributes.h(146): message : 'std::vector<std::shared_ptr<torch::jit::Graph>,std::allocator<std::shared_ptr<torch::jit::Graph>>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\jit\frontend\source_range.h(172,33): warning C4251: 'torch::jit::StringCordView::pieces_': class 'std::vector<c10::string_view,std::allocator<c10::string_view>>'에서는 struct 'torch::jit::StringCordView'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\dynamic_type.h(140): message : 'std::vector<c10::string_view,std::allocator<c10::string_view>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\jit\frontend\source_range.h(173,23): warning C4251: 'torch::jit::StringCordView::accumulated_sizes_': class 'std::vector<T,std::allocator<T>>'에서는 struct 'torch::jit::StringCordView'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              T=size_t
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\ArrayRef.h(247): message : 'std::vector<T,std::allocator<T>>' 선언을 참조하십시오.
          with
          [
              T=size_t
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\jit\frontend\source_range.h(174,45): warning C4251: 'torch::jit::StringCordView::owned_strings_': class 'std::vector<std::shared_ptr<std::string>,std::allocator<std::shared_ptr<std::string>>>'에서는 struct 'torch::jit::StringCordView'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\jit\frontend\source_range.h(26): message : 'std::vector<std::shared_ptr<std::string>,std::allocator<std::shared_ptr<std::string>>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\jit\frontend\source_range.h(290,30): warning C4251: 'torch::jit::Source::filename_': class 'c10::optional<std::string>'에서는 struct 'torch::jit::Source'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\jit_type_base.h(76): message : 'c10::optional<std::string>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\jit\frontend\source_range.h(295,23): warning C4251: 'torch::jit::Source::line_starting_offsets_': class 'std::vector<T,std::allocator<T>>'에서는 struct 'torch::jit::Source'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              T=size_t
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\ArrayRef.h(247): message : 'std::vector<T,std::allocator<T>>' 선언을 참조하십시오.
          with
          [
              T=size_t
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\jit\frontend\source_range.h(297,41): warning C4251: 'torch::jit::Source::gen_ranges_': class 'std::shared_ptr<torch::jit::SourceRangeUnpickler>'에서는 struct 'torch::jit::Source'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\jit\frontend\source_range.h(191): message : 'std::shared_ptr<torch::jit::SourceRangeUnpickler>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\jit\frontend\source_range.h(388,27): warning C4251: 'torch::jit::SourceRange::source_view_': class 'std::shared_ptr<torch::jit::Source>'에서는 struct 'torch::jit::SourceRange'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\jit\frontend\source_range.h(303): message : 'std::shared_ptr<torch::jit::Source>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\jit\frontend\source_range.h(393,28): warning C4251: 'torch::jit::SourceRange::start_iter_': struct 'torch::jit::StringCordView::Iterator'에서는 struct 'torch::jit::SourceRange'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\jit\frontend\source_range.h(60): message : 'torch::jit::StringCordView::Iterator' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(212,1): warning C4624: 'c10::constexpr_storage_t<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=std::tuple<std::string,size_t,size_t>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(411): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::constexpr_storage_t<T>'에 대한 참조를 확인하세요.
          with
          [
              T=std::tuple<std::string,size_t,size_t>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(549): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::trivially_copyable_optimization_optional_base<T>'에 대한 참조를 확인하세요.
          with
          [
              T=std::tuple<std::string,size_t,size_t>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(549): message : 컴파일되는 별칭 템플릿 인스턴스화 'c10::OptionalBase<T>'에 대한 참조를 확인하세요.
          with
          [
              T=std::tuple<std::string,size_t,size_t>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\jit\frontend\source_range.h(357): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::optional<std::tuple<std::string,size_t,size_t>>'에 대한 참조를 확인하세요.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(446,1): warning C4624: 'c10::trivially_copyable_optimization_optional_base<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=std::tuple<std::string,size_t,size_t>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(212,1): warning C4624: 'c10::constexpr_storage_t<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=torch::jit::SourceRange
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(411): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::constexpr_storage_t<T>'에 대한 참조를 확인하세요.
          with
          [
              T=torch::jit::SourceRange
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(549): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::trivially_copyable_optimization_optional_base<T>'에 대한 참조를 확인하세요.
          with
          [
              T=torch::jit::SourceRange
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(549): message : 컴파일되는 별칭 템플릿 인스턴스화 'c10::OptionalBase<T>'에 대한 참조를 확인하세요.
          with
          [
              T=torch::jit::SourceRange
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\jit\frontend\source_range.h(380): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::optional<torch::jit::SourceRange>'에 대한 참조를 확인하세요.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(446,1): warning C4624: 'c10::trivially_copyable_optimization_optional_base<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=torch::jit::SourceRange
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\jit\ir\scope.h(32,12): warning C4251: 'torch::jit::Scope::parent_': class 'c10::intrusive_ptr<torch::jit::Scope,c10::detail::intrusive_target_default_null_type<TTarget>>'에서는 struct 'torch::jit::Scope'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              TTarget=torch::jit::Scope
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\jit\ir\scope.h(27): message : 'c10::intrusive_ptr<torch::jit::Scope,c10::detail::intrusive_target_default_null_type<TTarget>>' 선언을 참조하십시오.
          with
          [
              TTarget=torch::jit::Scope
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(212,1): warning C4624: 'c10::constexpr_storage_t<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=torch::jit::InlinedCallStackPtr
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(411): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::constexpr_storage_t<T>'에 대한 참조를 확인하세요.
          with
          [
              T=torch::jit::InlinedCallStackPtr
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(549): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::trivially_copyable_optimization_optional_base<T>'에 대한 참조를 확인하세요.
          with
          [
              T=torch::jit::InlinedCallStackPtr
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(549): message : 컴파일되는 별칭 템플릿 인스턴스화 'c10::OptionalBase<T>'에 대한 참조를 확인하세요.
          with
          [
              T=torch::jit::InlinedCallStackPtr
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\jit\ir\scope.h(127): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::optional<torch::jit::InlinedCallStackPtr>'에 대한 참조를 확인하세요.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(446,1): warning C4624: 'c10::trivially_copyable_optimization_optional_base<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=torch::jit::InlinedCallStackPtr
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\jit\ir\scope.h(127,38): warning C4251: 'torch::jit::InlinedCallStack::callee_': class 'c10::optional<torch::jit::InlinedCallStackPtr>'에서는 struct 'torch::jit::InlinedCallStack'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\jit\ir\scope.h(127): message : 'c10::optional<torch::jit::InlinedCallStackPtr>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\jit\ir\scope.h(137,15): warning C4251: 'torch::jit::InlinedCallStack::fn_name_': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 struct 'torch::jit::InlinedCallStack'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xstring(5186): message : 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(212,1): warning C4624: 'c10::constexpr_storage_t<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=torch::jit::ModuleInstanceInfo
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(411): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::constexpr_storage_t<T>'에 대한 참조를 확인하세요.
          with
          [
              T=torch::jit::ModuleInstanceInfo
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(549): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::trivially_copyable_optimization_optional_base<T>'에 대한 참조를 확인하세요.
          with
          [
              T=torch::jit::ModuleInstanceInfo
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(549): message : 컴파일되는 별칭 템플릿 인스턴스화 'c10::OptionalBase<T>'에 대한 참조를 확인하세요.
          with
          [
              T=torch::jit::ModuleInstanceInfo
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\jit\ir\scope.h(140): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::optional<torch::jit::ModuleInstanceInfo>'에 대한 참조를 확인하세요.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(446,1): warning C4624: 'c10::trivially_copyable_optimization_optional_base<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=torch::jit::ModuleInstanceInfo
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\jit\ir\scope.h(140,37): warning C4251: 'torch::jit::InlinedCallStack::module_instance_info_': class 'c10::optional<torch::jit::ModuleInstanceInfo>'에서는 struct 'torch::jit::InlinedCallStack'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\jit\ir\scope.h(123): message : 'c10::optional<torch::jit::ModuleInstanceInfo>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\jit\ir\constants.h(21,75): warning C4275: DLL 인터페이스가 아닌 class 'std::runtime_error'이(가) DLL 인터페이스 struct 'torch::jit::constant_not_supported_error'의 기본으로 사용되었습니다.
C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\stdexcept(101): message : 'std::runtime_error' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\jit\ir\constants.h(21): message : 'torch::jit::constant_not_supported_error' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(212,1): warning C4624: 'c10::constexpr_storage_t<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=torch::jit::ScopePtr
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(411): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::constexpr_storage_t<T>'에 대한 참조를 확인하세요.
          with
          [
              T=torch::jit::ScopePtr
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(549): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::trivially_copyable_optimization_optional_base<T>'에 대한 참조를 확인하세요.
          with
          [
              T=torch::jit::ScopePtr
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(549): message : 컴파일되는 별칭 템플릿 인스턴스화 'c10::OptionalBase<T>'에 대한 참조를 확인하세요.
          with
          [
              T=torch::jit::ScopePtr
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\jit\ir\constants.h(29): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::optional<torch::jit::ScopePtr>'에 대한 참조를 확인하세요.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(446,1): warning C4624: 'c10::trivially_copyable_optimization_optional_base<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=torch::jit::ScopePtr
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\jit\runtime\operator.h(244,45): warning C4251: 'torch::jit::Operator::op_': class 'c10::either<torch::jit::Operator::C10Operator,torch::jit::Operator::JitOnlyOperator>'에서는 struct 'torch::jit::Operator'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\jit\runtime\operator.h(244): message : 'c10::either<torch::jit::Operator::C10Operator,torch::jit::Operator::JitOnlyOperator>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\utils\schema_info.h(96,43): warning C4251: 'torch::utils::SchemaInfo::wildcard_set_': class 'std::unordered_set<c10::SchemaArgument,std::hash<c10::SchemaArgument>,std::equal_to<c10::SchemaArgument>,std::allocator<c10::SchemaArgument>>'에서는 struct 'torch::utils::SchemaInfo'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\utils\schema_info.h(91): message : 'std::unordered_set<c10::SchemaArgument,std::hash<c10::SchemaArgument>,std::equal_to<c10::SchemaArgument>,std::allocator<c10::SchemaArgument>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\utils\schema_info.h(99,43): warning C4251: 'torch::utils::SchemaInfo::container_set_': class 'std::unordered_set<c10::SchemaArgument,std::hash<c10::SchemaArgument>,std::equal_to<c10::SchemaArgument>,std::allocator<c10::SchemaArgument>>'에서는 struct 'torch::utils::SchemaInfo'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\utils\schema_info.h(91): message : 'std::unordered_set<c10::SchemaArgument,std::hash<c10::SchemaArgument>,std::equal_to<c10::SchemaArgument>,std::allocator<c10::SchemaArgument>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\utils\schema_info.h(102,47): warning C4251: 'torch::utils::SchemaInfo::value_map_': class 'std::unordered_map<std::string,c10::IValue,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::pair<const std::string,c10::IValue>>>'에서는 struct 'torch::utils::SchemaInfo'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\function_schema.h(485): message : 'std::unordered_map<std::string,c10::IValue,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::pair<const std::string,c10::IValue>>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\utils\schema_info.h(105,43): warning C4251: 'torch::utils::SchemaInfo::input_alias_map_': class 'std::vector<std::unordered_set<size_t,std::hash<uint64_t>,std::equal_to<uint64_t>,std::allocator<T>>,std::allocator<std::unordered_set<size_t,std::hash<uint64_t>,std::equal_to<uint64_t>,std::allocator<T>>>>'에서는 struct 'torch::utils::SchemaInfo'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              T=size_t
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\utils\schema_info.h(105): message : 'std::vector<std::unordered_set<size_t,std::hash<uint64_t>,std::equal_to<uint64_t>,std::allocator<T>>,std::allocator<std::unordered_set<size_t,std::hash<uint64_t>,std::equal_to<uint64_t>,std::allocator<T>>>>' 선언을 참조하십시오.
          with
          [
              T=size_t
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\utils\schema_info.h(108,43): warning C4251: 'torch::utils::SchemaInfo::output_alias_map_': class 'std::vector<std::unordered_set<size_t,std::hash<uint64_t>,std::equal_to<uint64_t>,std::allocator<T>>,std::allocator<std::unordered_set<size_t,std::hash<uint64_t>,std::equal_to<uint64_t>,std::allocator<T>>>>'에서는 struct 'torch::utils::SchemaInfo'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              T=size_t
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\utils\schema_info.h(105): message : 'std::vector<std::unordered_set<size_t,std::hash<uint64_t>,std::equal_to<uint64_t>,std::allocator<T>>,std::allocator<std::unordered_set<size_t,std::hash<uint64_t>,std::equal_to<uint64_t>,std::allocator<T>>>>' 선언을 참조하십시오.
          with
          [
              T=size_t
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\enum_type.h(97,11): warning C4251: 'c10::EnumType::value_type_': class 'c10::Type::SingletonOrSharedTypePtr<c10::Type>'에서는 struct 'c10::EnumType'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\jit_type_base.h(384): message : 'c10::Type::SingletonOrSharedTypePtr<c10::Type>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\enum_type.h(98,30): warning C4251: 'c10::EnumType::enum_names_values_': class 'std::vector<c10::EnumNameValue,std::allocator<std::pair<_Kty,_Ty>>>'에서는 struct 'c10::EnumType'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Kty=std::string,
              _Ty=c10::IValue
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\enum_type.h(19): message : 'std::vector<c10::EnumNameValue,std::allocator<std::pair<_Kty,_Ty>>>' 선언을 참조하십시오.
          with
          [
              _Kty=std::string,
              _Ty=c10::IValue
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\enum_type.h(99,48): warning C4251: 'c10::EnumType::cu_': class 'std::weak_ptr<torch::jit::CompilationUnit>'에서는 struct 'c10::EnumType'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\ivalue.h(1404): message : 'std::weak_ptr<torch::jit::CompilationUnit>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\jit\ir\ir.h(329,23): warning C4251: 'torch::jit::Node::inputs_': class 'std::vector<torch::jit::Value *,std::allocator<torch::jit::Value *>>'에서는 struct 'torch::jit::Node'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\jit\ir\ir.h(150): message : 'std::vector<torch::jit::Value *,std::allocator<torch::jit::Value *>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\jit\ir\ir.h(330,23): warning C4251: 'torch::jit::Node::outputs_': class 'std::vector<torch::jit::Value *,std::allocator<torch::jit::Value *>>'에서는 struct 'torch::jit::Node'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\jit\ir\ir.h(150): message : 'std::vector<torch::jit::Value *,std::allocator<torch::jit::Value *>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\jit\ir\ir.h(332,23): warning C4251: 'torch::jit::Node::blocks_': class 'std::vector<torch::jit::Block *,std::allocator<torch::jit::Block *>>'에서는 struct 'torch::jit::Node'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\jit\ir\ir.h(332): message : 'std::vector<torch::jit::Block *,std::allocator<torch::jit::Block *>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\jit\ir\ir.h(335,30): warning C4251: 'torch::jit::Node::source_range_': class 'c10::optional<torch::jit::SourceRange>'에서는 struct 'torch::jit::Node'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\jit\frontend\source_range.h(273): message : 'c10::optional<torch::jit::SourceRange>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\jit\ir\ir.h(336,12): warning C4251: 'torch::jit::Node::scope_': class 'c10::intrusive_ptr<torch::jit::Scope,c10::detail::intrusive_target_default_null_type<TTarget>>'에서는 struct 'torch::jit::Node'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              TTarget=torch::jit::Scope
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\jit\ir\scope.h(27): message : 'c10::intrusive_ptr<torch::jit::Scope,c10::detail::intrusive_target_default_null_type<TTarget>>' 선언을 참조하십시오.
          with
          [
              TTarget=torch::jit::Scope
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\jit\ir\ir.h(337,38): warning C4251: 'torch::jit::Node::callstack_': class 'c10::optional<torch::jit::InlinedCallStackPtr>'에서는 struct 'torch::jit::Node'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\jit\ir\scope.h(127): message : 'c10::optional<torch::jit::InlinedCallStackPtr>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\jit\ir\ir.h(345,31): warning C4251: 'torch::jit::Node::wrap_': class 'std::shared_ptr<torch::jit::Wrap<torch::jit::Node>>'에서는 struct 'torch::jit::Node'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\jit\ir\ir.h(345): message : 'std::shared_ptr<torch::jit::Wrap<torch::jit::Node>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\jit\ir\ir.h(351,30): warning C4251: 'torch::jit::Node::historic_schema_name_': class 'c10::optional<std::string>'에서는 struct 'torch::jit::Node'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\jit_type_base.h(76): message : 'c10::optional<std::string>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\jit\ir\ir.h(959,22): warning C4251: 'torch::jit::Node::values_': class 'std::vector<torch::jit::Node::AVPtr,std::allocator<torch::jit::Node::AVPtr>>'에서는 struct 'torch::jit::Node'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\jit\ir\ir.h(959): message : 'std::vector<torch::jit::Node::AVPtr,std::allocator<torch::jit::Node::AVPtr>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\jit\ir\ir.h(1572,45): warning C4251: 'torch::jit::ProfileIValueOp::callback_': class 'std::function<void (torch::jit::Stack &)>'에서는 struct 'torch::jit::ProfileIValueOp'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\stack.h(19): message : 'std::function<void (torch::jit::Stack &)>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\jit\ir\ir.h(1650,70): warning C4251: 'torch::jit::OperatorSet::ops': class 'std::unordered_map<c10::Symbol,std::vector<std::shared_ptr<torch::jit::Operator>,std::allocator<std::shared_ptr<torch::jit::Operator>>>,std::hash<c10::Symbol>,std::equal_to<c10::Symbol>,std::allocator<std::pair<const c10::Symbol,std::vector<std::shared_ptr<torch::jit::Operator>,std::allocator<std::shared_ptr<torch::jit::Operator>>>>>>'에서는 struct 'torch::jit::OperatorSet'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\jit\ir\ir.h(1650): message : 'std::unordered_map<c10::Symbol,std::vector<std::shared_ptr<torch::jit::Operator>,std::allocator<std::shared_ptr<torch::jit::Operator>>>,std::hash<c10::Symbol>,std::equal_to<c10::Symbol>,std::allocator<std::pair<const c10::Symbol,std::vector<std::shared_ptr<torch::jit::Operator>,std::allocator<std::shared_ptr<torch::jit::Operator>>>>>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\jit\runtime\argument_spec.h(211,21): warning C4251: 'torch::jit::ArgumentSpecCreator::instructions_': class 'std::vector<torch::jit::ArgumentSpecCreator::Inst,std::allocator<torch::jit::ArgumentSpecCreator::Inst>>'에서는 struct 'torch::jit::ArgumentSpecCreator'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\jit\runtime\argument_spec.h(211): message : 'std::vector<torch::jit::ArgumentSpecCreator::Inst,std::allocator<torch::jit::ArgumentSpecCreator::Inst>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\jit\runtime\argument_spec.h(251,1): warning C4267: '초기화 중': 'size_t'에서 'int32_t'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\jit\runtime\argument_spec.h(251,1): warning C4267: '초기화 중': 'size_t'에서 'const int32_t'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\jit\runtime\argument_spec.h(256,33): warning C4244: '+=': 'int64_t'에서 'int32_t'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\jit\runtime\argument_spec.h(282,37): warning C4244: '+=': 'int64_t'에서 'int32_t'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\jit\runtime\argument_spec.h(461,39): warning C4267: '인수': 'size_t'에서 'const int'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\jit\runtime\interpreter.h(80,42): warning C4251: 'torch::jit::Code::pImpl': class 'std::shared_ptr<torch::jit::interpreter::CodeImpl>'에서는 struct 'torch::jit::Code'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\jit\runtime\interpreter.h(80): message : 'std::shared_ptr<torch::jit::interpreter::CodeImpl>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(212,1): warning C4624: 'c10::constexpr_storage_t<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=at::ThreadLocalState
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(411): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::constexpr_storage_t<T>'에 대한 참조를 확인하세요.
          with
          [
              T=at::ThreadLocalState
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(549): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::trivially_copyable_optimization_optional_base<T>'에 대한 참조를 확인하세요.
          with
          [
              T=at::ThreadLocalState
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(549): message : 컴파일되는 별칭 템플릿 인스턴스화 'c10::OptionalBase<T>'에 대한 참조를 확인하세요.
          with
          [
              T=at::ThreadLocalState
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\jit\runtime\interpreter.h(150): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::optional<at::ThreadLocalState>'에 대한 참조를 확인하세요.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(446,1): warning C4624: 'c10::trivially_copyable_optimization_optional_base<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=at::ThreadLocalState
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\jit\runtime\graph_executor.h(93,42): warning C4251: 'torch::jit::GraphExecutor::pImpl': class 'std::shared_ptr<torch::jit::GraphExecutorImplBase>'에서는 struct 'torch::jit::GraphExecutor'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\jit\runtime\graph_executor.h(93): message : 'std::shared_ptr<torch::jit::GraphExecutorImplBase>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\jit\api\function_impl.h(149,22): warning C4251: 'torch::jit::GraphFunction::name_': struct 'c10::QualifiedName'에서는 struct 'torch::jit::GraphFunction'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\qualified_name.h(12): message : 'c10::QualifiedName' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\jit\api\function_impl.h(151,26): warning C4251: 'torch::jit::GraphFunction::graph_': class 'std::shared_ptr<torch::jit::Graph>'에서는 struct 'torch::jit::GraphFunction'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\function.h(32): message : 'std::shared_ptr<torch::jit::Graph>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\jit\api\function_impl.h(155,48): warning C4251: 'torch::jit::GraphFunction::executor_execution_mode_': class 'c10::optional<torch::jit::ExecutorExecutionMode>'에서는 struct 'torch::jit::GraphFunction'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\jit\api\function_impl.h(17): message : 'c10::optional<torch::jit::ExecutorExecutionMode>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(212,1): warning C4624: 'c10::constexpr_storage_t<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=std::shared_ptr<torch::jit::Graph>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(411): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::constexpr_storage_t<T>'에 대한 참조를 확인하세요.
          with
          [
              T=std::shared_ptr<torch::jit::Graph>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(549): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::trivially_copyable_optimization_optional_base<T>'에 대한 참조를 확인하세요.
          with
          [
              T=std::shared_ptr<torch::jit::Graph>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(549): message : 컴파일되는 별칭 템플릿 인스턴스화 'c10::OptionalBase<T>'에 대한 참조를 확인하세요.
          with
          [
              T=std::shared_ptr<torch::jit::Graph>
          ]
C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\array(577): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::optional<std::shared_ptr<torch::jit::Graph>>'에 대한 참조를 확인하세요.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\jit\api\function_impl.h(164): message : 컴파일되는 클래스 템플릿 인스턴스화 'std::array<c10::optional<std::shared_ptr<torch::jit::Graph>>,4>'에 대한 참조를 확인하세요.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(446,1): warning C4624: 'c10::trivially_copyable_optimization_optional_base<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=std::shared_ptr<torch::jit::Graph>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\jit\api\function_impl.h(171,32): warning C4251: 'torch::jit::GraphFunction::compile_mutex': class 'std::recursive_mutex'에서는 struct 'torch::jit::GraphFunction'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\mutex(95): message : 'std::recursive_mutex' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(212,1): warning C4624: 'c10::constexpr_storage_t<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=torch::jit::GraphExecutor
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(411): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::constexpr_storage_t<T>'에 대한 참조를 확인하세요.
          with
          [
              T=torch::jit::GraphExecutor
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(549): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::trivially_copyable_optimization_optional_base<T>'에 대한 참조를 확인하세요.
          with
          [
              T=torch::jit::GraphExecutor
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(549): message : 컴파일되는 별칭 템플릿 인스턴스화 'c10::OptionalBase<T>'에 대한 참조를 확인하세요.
          with
          [
              T=torch::jit::GraphExecutor
          ]
C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\array(577): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::optional<torch::jit::GraphExecutor>'에 대한 참조를 확인하세요.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\jit\api\function_impl.h(178): message : 컴파일되는 클래스 템플릿 인스턴스화 'std::array<c10::optional<torch::jit::GraphExecutor>,4>'에 대한 참조를 확인하세요.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(446,1): warning C4624: 'c10::trivially_copyable_optimization_optional_base<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=torch::jit::GraphExecutor
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\jit\api\function_impl.h(183,39): warning C4251: 'torch::jit::GraphFunction::function_creator_': class 'std::function<void (torch::jit::GraphFunction &)>'에서는 struct 'torch::jit::GraphFunction'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\jit\api\function_impl.h(16): message : 'std::function<void (torch::jit::GraphFunction &)>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\jit\api\function_impl.h(188,43): warning C4251: 'torch::jit::GraphFunction::schema_': class 'std::unique_ptr<c10::FunctionSchema,std::default_delete<c10::FunctionSchema>>'에서는 struct 'torch::jit::GraphFunction'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\op_registration\op_registration.h(28): message : 'std::unique_ptr<c10::FunctionSchema,std::default_delete<c10::FunctionSchema>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\jit\api\method.h(70,13): warning C4251: 'torch::jit::Method::owner_': class 'c10::intrusive_ptr<c10::ivalue::Object,c10::detail::intrusive_target_default_null_type<TTarget>>'에서는 struct 'torch::jit::Method'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              TTarget=c10::ivalue::Object
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\ivalue.h(789): message : 'c10::intrusive_ptr<c10::ivalue::Object,c10::detail::intrusive_target_default_null_type<TTarget>>' 선언을 참조하십시오.
          with
          [
              TTarget=c10::ivalue::Object
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(212,1): warning C4624: 'c10::constexpr_storage_t<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=torch::jit::Method
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(411): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::constexpr_storage_t<T>'에 대한 참조를 확인하세요.
          with
          [
              T=torch::jit::Method
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(549): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::trivially_copyable_optimization_optional_base<T>'에 대한 참조를 확인하세요.
          with
          [
              T=torch::jit::Method
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(549): message : 컴파일되는 별칭 템플릿 인스턴스화 'c10::OptionalBase<T>'에 대한 참조를 확인하세요.
          with
          [
              T=torch::jit::Method
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\jit\api\object.h(48): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::optional<torch::jit::Method>'에 대한 참조를 확인하세요.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(446,1): warning C4624: 'c10::trivially_copyable_optimization_optional_base<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=torch::jit::Method
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\jit\api\object.h(189,21): warning C4251: 'torch::jit::Object::_ivalue_': class 'c10::intrusive_ptr<c10::ivalue::Object,c10::detail::intrusive_target_default_null_type<TTarget>>'에서는 struct 'torch::jit::Object'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              TTarget=c10::ivalue::Object
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\ivalue.h(789): message : 'c10::intrusive_ptr<c10::ivalue::Object,c10::detail::intrusive_target_default_null_type<TTarget>>' 선언을 참조하십시오.
          with
          [
              TTarget=c10::ivalue::Object
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\jit\api\compilation_unit.h(320,42): warning C4251: 'torch::jit::CompilationUnit::functions_': class 'std::vector<std::unique_ptr<torch::jit::Function,std::default_delete<torch::jit::Function>>,std::allocator<std::unique_ptr<torch::jit::Function,std::default_delete<torch::jit::Function>>>>'에서는 struct 'torch::jit::CompilationUnit'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\jit\api\compilation_unit.h(320): message : 'std::vector<std::unique_ptr<torch::jit::Function,std::default_delete<torch::jit::Function>>,std::allocator<std::unique_ptr<torch::jit::Function,std::default_delete<torch::jit::Function>>>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\jit\api\compilation_unit.h(322,50): warning C4251: 'torch::jit::CompilationUnit::dict_': class 'std::unordered_map<c10::QualifiedName,size_t,std::hash<c10::QualifiedName>,std::equal_to<c10::QualifiedName>,std::allocator<std::pair<const c10::QualifiedName,size_t>>>'에서는 struct 'torch::jit::CompilationUnit'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\jit\api\compilation_unit.h(322): message : 'std::unordered_map<c10::QualifiedName,size_t,std::hash<c10::QualifiedName>,std::equal_to<c10::QualifiedName>,std::allocator<std::pair<const c10::QualifiedName,size_t>>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\jit\api\compilation_unit.h(323,50): warning C4251: 'torch::jit::CompilationUnit::classDict_': class 'std::unordered_map<c10::QualifiedName,size_t,std::hash<c10::QualifiedName>,std::equal_to<c10::QualifiedName>,std::allocator<std::pair<const c10::QualifiedName,size_t>>>'에서는 struct 'torch::jit::CompilationUnit'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\jit\api\compilation_unit.h(322): message : 'std::unordered_map<c10::QualifiedName,size_t,std::hash<c10::QualifiedName>,std::equal_to<c10::QualifiedName>,std::allocator<std::pair<const c10::QualifiedName,size_t>>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\jit\api\compilation_unit.h(330,34): warning C4251: 'torch::jit::CompilationUnit::classes_': class 'std::vector<c10::NamedTypePtr,std::allocator<c10::NamedTypePtr>>'에서는 struct 'torch::jit::CompilationUnit'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\jit\api\compilation_unit.h(330): message : 'std::vector<c10::NamedTypePtr,std::allocator<c10::NamedTypePtr>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\jit\api\module.h(319,25): warning C4251: 'torch::jit::Module::mem_to_delete_': class 'std::shared_ptr<char>'에서는 struct 'torch::jit::Module'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\jit\api\module.h(270): message : 'std::shared_ptr<char>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\jit\api\module.h(322,50): warning C4251: 'torch::jit::Module::traced_inputs_': class 'c10::Dict<std::string,c10::impl::GenericList>'에서는 struct 'torch::jit::Module'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\jit\api\module.h(291): message : 'c10::Dict<std::string,c10::impl::GenericList>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(212,1): warning C4624: 'c10::constexpr_storage_t<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=std::vector<std::string,std::allocator<std::string>>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(411): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::constexpr_storage_t<T>'에 대한 참조를 확인하세요.
          with
          [
              T=std::vector<std::string,std::allocator<std::string>>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(549): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::trivially_copyable_optimization_optional_base<T>'에 대한 참조를 확인하세요.
          with
          [
              T=std::vector<std::string,std::allocator<std::string>>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(549): message : 컴파일되는 별칭 템플릿 인스턴스화 'c10::OptionalBase<T>'에 대한 참조를 확인하세요.
          with
          [
              T=std::vector<std::string,std::allocator<std::string>>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\jit\api\module.h(329): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::optional<std::vector<std::string,std::allocator<std::string>>>'에 대한 참조를 확인하세요.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(446,1): warning C4624: 'c10::trivially_copyable_optimization_optional_base<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=std::vector<std::string,std::allocator<std::string>>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\serialize\input-archive.h(114,15): warning C4251: 'torch::serialize::InputArchive::hierarchy_prefix_': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 class 'torch::serialize::InputArchive'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xstring(5186): message : 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\serialize\output-archive.h(78,41): warning C4251: 'torch::serialize::OutputArchive::cu_': class 'std::shared_ptr<torch::jit::CompilationUnit>'에서는 class 'torch::serialize::OutputArchive'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\ivalue.h(1390): message : 'std::shared_ptr<torch::jit::CompilationUnit>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\module.h(64,70): warning C4251: 'std::enable_shared_from_this<torch::nn::Module>::_Wptr': class 'std::weak_ptr<_Ty>'에서는 class 'std::enable_shared_from_this<torch::nn::Module>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              _Ty=torch::nn::Module
          ]
C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\memory(3103): message : 'std::weak_ptr<_Ty>' 선언을 참조하십시오.
          with
          [
              _Ty=torch::nn::Module
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\module.h(549,36): warning C4251: 'torch::nn::Module::parameters_': class 'torch::OrderedDict<std::string,at::Tensor>'에서는 class 'torch::nn::Module'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\module.h(212): message : 'torch::OrderedDict<std::string,at::Tensor>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\module.h(597,36): warning C4251: 'torch::nn::Module::buffers_': class 'torch::OrderedDict<std::string,at::Tensor>'에서는 class 'torch::nn::Module'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\module.h(212): message : 'torch::OrderedDict<std::string,at::Tensor>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\module.h(600,53): warning C4251: 'torch::nn::Module::children_': class 'torch::OrderedDict<std::string,std::shared_ptr<torch::nn::Module>>'에서는 class 'torch::nn::Module'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\module.h(248): message : 'torch::OrderedDict<std::string,std::shared_ptr<torch::nn::Module>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\module.h(603,33): warning C4251: 'torch::nn::Module::name_': class 'c10::optional<std::string>'에서는 class 'torch::nn::Module'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\jit_type_base.h(76): message : 'c10::optional<std::string>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\profiler\orchestration\observer.h(51,28): warning C4251: 'torch::profiler::impl::ExperimentalConfig::profiler_metrics': class 'std::vector<std::string,std::allocator<std::string>>'에서는 struct 'torch::profiler::impl::ExperimentalConfig'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Exception.h(36): message : 'std::vector<std::string,std::allocator<std::string>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\profiler\orchestration\observer.h(58,28): warning C4251: 'torch::profiler::impl::ExperimentalConfig::performance_events': class 'std::vector<std::string,std::allocator<std::string>>'에서는 struct 'torch::profiler::impl::ExperimentalConfig'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Exception.h(36): message : 'std::vector<std::string,std::allocator<std::string>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\profiler\orchestration\observer.h(135,14): warning C4251: 'torch::profiler::impl::ProfilerStateBase::state_mutex_': class 'std::mutex'에서는 struct 'torch::profiler::impl::ProfilerStateBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\mutex(86): message : 'std::mutex' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\profiler\util.h(174,15): warning C4251: 'torch::profiler::impl::FileLineFunc::filename': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 struct 'torch::profiler::impl::FileLineFunc'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xstring(5186): message : 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\profiler\util.h(176,15): warning C4251: 'torch::profiler::impl::FileLineFunc::funcname': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 struct 'torch::profiler::impl::FileLineFunc'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xstring(5186): message : 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\profiler\util.h(232,22): warning C4251: 'torch::profiler::impl::GlobalStateManager<T>::state_': class 'std::shared_ptr<_Ty>'에서는 class 'torch::profiler::impl::GlobalStateManager<T>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\memory(1407): message : 'std::shared_ptr<_Ty>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\profiler\util.h(233): message : 컴파일되는 클래스 템플릿 인스턴스화 'torch::profiler::impl::GlobalStateManager<T>'에 대한 참조를 확인하세요.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\autograd\profiler_kineto.h(64,56): warning C4251: 'torch::autograd::profiler::KinetoEvent::result_': class 'std::shared_ptr<const torch::profiler::impl::Result>'에서는 struct 'torch::autograd::profiler::KinetoEvent'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\autograd\profiler_kineto.h(26): message : 'std::shared_ptr<const torch::profiler::impl::Result>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\autograd\profiler_kineto.h(65,28): warning C4251: 'torch::autograd::profiler::KinetoEvent::python_stack_': class 'std::vector<std::string,std::allocator<std::string>>'에서는 struct 'torch::autograd::profiler::KinetoEvent'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Exception.h(36): message : 'std::vector<std::string,std::allocator<std::string>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\autograd\profiler_kineto.h(68,37): warning C4251: 'torch::autograd::profiler::KinetoEvent::shapes_': class 'std::vector<std::vector<int64_t,std::allocator<int64_t>>,std::allocator<std::vector<int64_t,std::allocator<int64_t>>>>'에서는 struct 'torch::autograd::profiler::KinetoEvent'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\WrapDimUtils.h(32): message : 'std::vector<std::vector<int64_t,std::allocator<int64_t>>,std::allocator<std::vector<int64_t,std::allocator<int64_t>>>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\autograd\profiler_kineto.h(69,28): warning C4251: 'torch::autograd::profiler::KinetoEvent::dtypes_': class 'std::vector<std::string,std::allocator<std::string>>'에서는 struct 'torch::autograd::profiler::KinetoEvent'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Exception.h(36): message : 'std::vector<std::string,std::allocator<std::string>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\autograd\profiler_kineto.h(101,28): warning C4251: 'torch::autograd::profiler::ProfilerResult::events_': class 'std::vector<torch::autograd::profiler::KinetoEvent,std::allocator<torch::autograd::profiler::KinetoEvent>>'에서는 struct 'torch::autograd::profiler::ProfilerResult'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\autograd\profiler_kineto.h(79): message : 'std::vector<torch::autograd::profiler::KinetoEvent,std::allocator<torch::autograd::profiler::KinetoEvent>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\autograd\profiler_kineto.h(102,72): warning C4251: 'torch::autograd::profiler::ProfilerResult::trace_': class 'std::unique_ptr<torch::profiler::impl::kineto::ActivityTraceWrapper,std::default_delete<torch::profiler::impl::kineto::ActivityTraceWrapper>>'에서는 struct 'torch::autograd::profiler::ProfilerResult'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\autograd\profiler_kineto.h(80): message : 'std::unique_ptr<torch::profiler::impl::kineto::ActivityTraceWrapper,std::default_delete<torch::profiler::impl::kineto::ActivityTraceWrapper>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\autograd\profiler_kineto.h(103,37): warning C4251: 'torch::autograd::profiler::ProfilerResult::event_tree_': class 'std::vector<torch::autograd::profiler::experimental_event_t,std::allocator<torch::autograd::profiler::experimental_event_t>>'에서는 struct 'torch::autograd::profiler::ProfilerResult'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\autograd\profiler_kineto.h(82): message : 'std::vector<torch::autograd::profiler::experimental_event_t,std::allocator<torch::autograd::profiler::experimental_event_t>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\autograd\profiler_legacy.h(266,37): warning C4251: 'torch::autograd::profiler::LegacyEvent::shapes_': class 'std::vector<std::vector<int64_t,std::allocator<int64_t>>,std::allocator<std::vector<int64_t,std::allocator<int64_t>>>>'에서는 struct 'torch::autograd::profiler::LegacyEvent'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\WrapDimUtils.h(32): message : 'std::vector<std::vector<int64_t,std::allocator<int64_t>>,std::allocator<std::vector<int64_t,std::allocator<int64_t>>>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\autograd\profiler_legacy.h(270,44): warning C4251: 'torch::autograd::profiler::LegacyEvent::cuda_event': class 'std::shared_ptr<CUevent_st>'에서는 struct 'torch::autograd::profiler::LegacyEvent'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\profiler\stubs\base.h(18): message : 'std::shared_ptr<CUevent_st>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\autograd\profiler_legacy.h(277,28): warning C4251: 'torch::autograd::profiler::LegacyEvent::stack_': class 'std::vector<std::string,std::allocator<std::string>>'에서는 struct 'torch::autograd::profiler::LegacyEvent'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Exception.h(36): message : 'std::vector<std::string,std::allocator<std::string>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\autograd\profiler_legacy.h(281,48): warning C4251: 'torch::autograd::profiler::LegacyEvent::extra_args_': class 'std::unordered_map<std::string,c10::IValue,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::pair<const std::string,c10::IValue>>>'에서는 struct 'torch::autograd::profiler::LegacyEvent'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\function_schema.h(485): message : 'std::unordered_map<std::string,c10::IValue,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::pair<const std::string,c10::IValue>>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\autograd\profiler_legacy.h(81,17): warning C4244: '초기화 중': 'double'에서 'int64_t'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\autograd\profiler_legacy.h(135,43): warning C4244: '=': 'double'에서 'int64_t'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\autograd\profiler_legacy.h(372,34): warning C4251: 'torch::autograd::profiler::RecordProfile::file_': class 'std::unique_ptr<std::ofstream,std::default_delete<std::ofstream>>'에서는 struct 'torch::autograd::profiler::RecordProfile'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\autograd\profiler_legacy.h(372): message : 'std::unique_ptr<std::ofstream,std::default_delete<std::ofstream>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(212,1): warning C4624: 'c10::constexpr_storage_t<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=std::function<void (const torch::autograd::profiler::thread_event_lists &)>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(411): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::constexpr_storage_t<T>'에 대한 참조를 확인하세요.
          with
          [
              T=std::function<void (const torch::autograd::profiler::thread_event_lists &)>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(549): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::trivially_copyable_optimization_optional_base<T>'에 대한 참조를 확인하세요.
          with
          [
              T=std::function<void (const torch::autograd::profiler::thread_event_lists &)>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(549): message : 컴파일되는 별칭 템플릿 인스턴스화 'c10::OptionalBase<T>'에 대한 참조를 확인하세요.
          with
          [
              T=std::function<void (const torch::autograd::profiler::thread_event_lists &)>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\autograd\profiler_legacy.h(411): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::optional<std::function<void (const torch::autograd::profiler::thread_event_lists &)>>'에 대한 참조를 확인하세요.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(446,1): warning C4624: 'c10::trivially_copyable_optimization_optional_base<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=std::function<void (const torch::autograd::profiler::thread_event_lists &)>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\autograd\profiler_legacy.h(411,65): warning C4251: 'torch::autograd::profiler::TLSLegacyProfilerGuard::cb_': class 'c10::optional<std::function<void (const torch::autograd::profiler::thread_event_lists &)>>'에서는 struct 'torch::autograd::profiler::TLSLegacyProfilerGuard'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\autograd\profiler_legacy.h(388): message : 'c10::optional<std::function<void (const torch::autograd::profiler::thread_event_lists &)>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\autograd\profiler_legacy.h(412,47): warning C4251: 'torch::autograd::profiler::TLSLegacyProfilerGuard::profilerDisableOptions_': class 'c10::optional<torch::autograd::profiler::ProfilerDisableOptions>'에서는 struct 'torch::autograd::profiler::TLSLegacyProfilerGuard'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\autograd\profiler_legacy.h(347): message : 'c10::optional<torch::autograd::profiler::ProfilerDisableOptions>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\batchnorm.h(24,3): warning C4251: 'torch::nn::BatchNormOptions::momentum_': class 'c10::optional<double>'에서는 struct 'torch::nn::BatchNormOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\ops\logit_ops.h(18): message : 'c10::optional<double>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\batchnorm.h(85,3): warning C4251: 'torch::nn::functional::BatchNormFuncOptions::momentum_': class 'c10::optional<double>'에서는 struct 'torch::nn::functional::BatchNormFuncOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\ops\logit_ops.h(18): message : 'c10::optional<double>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\embedding.h(31,3): warning C4251: 'torch::nn::EmbeddingOptions::padding_idx_': class 'c10::optional<int64_t>'에서는 struct 'torch::nn::EmbeddingOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\TensorImpl.h(1702): message : 'c10::optional<int64_t>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\embedding.h(34,3): warning C4251: 'torch::nn::EmbeddingOptions::max_norm_': class 'c10::optional<double>'에서는 struct 'torch::nn::EmbeddingOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\ops\logit_ops.h(18): message : 'c10::optional<double>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\embedding.h(58,3): warning C4251: 'torch::nn::EmbeddingFromPretrainedOptions::padding_idx_': class 'c10::optional<int64_t>'에서는 struct 'torch::nn::EmbeddingFromPretrainedOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\TensorImpl.h(1702): message : 'c10::optional<int64_t>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\embedding.h(61,3): warning C4251: 'torch::nn::EmbeddingFromPretrainedOptions::max_norm_': class 'c10::optional<double>'에서는 struct 'torch::nn::EmbeddingFromPretrainedOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\ops\logit_ops.h(18): message : 'c10::optional<double>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\embedding.h(87,3): warning C4251: 'torch::nn::functional::EmbeddingFuncOptions::padding_idx_': class 'c10::optional<int64_t>'에서는 struct 'torch::nn::functional::EmbeddingFuncOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\TensorImpl.h(1702): message : 'c10::optional<int64_t>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\embedding.h(90,3): warning C4251: 'torch::nn::functional::EmbeddingFuncOptions::max_norm_': class 'c10::optional<double>'에서는 struct 'torch::nn::functional::EmbeddingFuncOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\ops\logit_ops.h(18): message : 'c10::optional<double>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\embedding.h(123,3): warning C4251: 'torch::nn::EmbeddingBagOptions::max_norm_': class 'c10::optional<double>'에서는 struct 'torch::nn::EmbeddingBagOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\ops\logit_ops.h(18): message : 'c10::optional<double>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\embedding.h(134,3): warning C4251: 'torch::nn::EmbeddingBagOptions::mode_': class 'c10::variant<torch::enumtype::kSum,torch::enumtype::kMean,torch::enumtype::kMax>'에서는 struct 'torch::nn::EmbeddingBagOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\embedding.h(104): message : 'c10::variant<torch::enumtype::kSum,torch::enumtype::kMean,torch::enumtype::kMax>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\embedding.h(151,3): warning C4251: 'torch::nn::EmbeddingBagOptions::padding_idx_': class 'c10::optional<int64_t>'에서는 struct 'torch::nn::EmbeddingBagOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\TensorImpl.h(1702): message : 'c10::optional<int64_t>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\embedding.h(164,3): warning C4251: 'torch::nn::EmbeddingBagFromPretrainedOptions::max_norm_': class 'c10::optional<double>'에서는 struct 'torch::nn::EmbeddingBagFromPretrainedOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\ops\logit_ops.h(18): message : 'c10::optional<double>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\embedding.h(175,3): warning C4251: 'torch::nn::EmbeddingBagFromPretrainedOptions::mode_': class 'c10::variant<torch::enumtype::kSum,torch::enumtype::kMean,torch::enumtype::kMax>'에서는 struct 'torch::nn::EmbeddingBagFromPretrainedOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\embedding.h(104): message : 'c10::variant<torch::enumtype::kSum,torch::enumtype::kMean,torch::enumtype::kMax>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\embedding.h(187,3): warning C4251: 'torch::nn::EmbeddingBagFromPretrainedOptions::padding_idx_': class 'c10::optional<int64_t>'에서는 struct 'torch::nn::EmbeddingBagFromPretrainedOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\TensorImpl.h(1702): message : 'c10::optional<int64_t>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\embedding.h(208,3): warning C4251: 'torch::nn::functional::EmbeddingBagFuncOptions::max_norm_': class 'c10::optional<double>'에서는 struct 'torch::nn::functional::EmbeddingBagFuncOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\ops\logit_ops.h(18): message : 'c10::optional<double>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\embedding.h(219,3): warning C4251: 'torch::nn::functional::EmbeddingBagFuncOptions::mode_': class 'c10::variant<torch::enumtype::kSum,torch::enumtype::kMean,torch::enumtype::kMax>'에서는 struct 'torch::nn::functional::EmbeddingBagFuncOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\embedding.h(104): message : 'c10::variant<torch::enumtype::kSum,torch::enumtype::kMean,torch::enumtype::kMax>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\embedding.h(236,3): warning C4251: 'torch::nn::functional::EmbeddingBagFuncOptions::padding_idx_': class 'c10::optional<int64_t>'에서는 struct 'torch::nn::functional::EmbeddingBagFuncOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\TensorImpl.h(1702): message : 'c10::optional<int64_t>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\functional\embedding.h(52,59): warning C4244: '인수': 'double'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\functional\embedding.h(52,48): warning C4244: '인수': 'T'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
          with
          [
              T=double
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\functional\embedding.h(154,59): warning C4244: '인수': 'double'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\functional\embedding.h(154,48): warning C4244: '인수': 'T'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
          with
          [
              T=double
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\fold.h(26,3): warning C4251: 'torch::nn::FoldOptions::output_size_': class 'torch::ExpandingArray<2,int64_t>'에서는 struct 'torch::nn::FoldOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\functional\conv.h(76): message : 'torch::ExpandingArray<2,int64_t>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\fold.h(29,3): warning C4251: 'torch::nn::FoldOptions::kernel_size_': class 'torch::ExpandingArray<2,int64_t>'에서는 struct 'torch::nn::FoldOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\functional\conv.h(76): message : 'torch::ExpandingArray<2,int64_t>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\fold.h(33,3): warning C4251: 'torch::nn::FoldOptions::dilation_': class 'torch::ExpandingArray<2,int64_t>'에서는 struct 'torch::nn::FoldOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\functional\conv.h(76): message : 'torch::ExpandingArray<2,int64_t>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\fold.h(37,3): warning C4251: 'torch::nn::FoldOptions::padding_': class 'torch::ExpandingArray<2,int64_t>'에서는 struct 'torch::nn::FoldOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\functional\conv.h(76): message : 'torch::ExpandingArray<2,int64_t>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\fold.h(40,3): warning C4251: 'torch::nn::FoldOptions::stride_': class 'torch::ExpandingArray<2,int64_t>'에서는 struct 'torch::nn::FoldOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\functional\conv.h(76): message : 'torch::ExpandingArray<2,int64_t>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\fold.h(70,3): warning C4251: 'torch::nn::UnfoldOptions::kernel_size_': class 'torch::ExpandingArray<2,int64_t>'에서는 struct 'torch::nn::UnfoldOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\functional\conv.h(76): message : 'torch::ExpandingArray<2,int64_t>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\fold.h(74,3): warning C4251: 'torch::nn::UnfoldOptions::dilation_': class 'torch::ExpandingArray<2,int64_t>'에서는 struct 'torch::nn::UnfoldOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\functional\conv.h(76): message : 'torch::ExpandingArray<2,int64_t>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\fold.h(78,3): warning C4251: 'torch::nn::UnfoldOptions::padding_': class 'torch::ExpandingArray<2,int64_t>'에서는 struct 'torch::nn::UnfoldOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\functional\conv.h(76): message : 'torch::ExpandingArray<2,int64_t>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\fold.h(81,3): warning C4251: 'torch::nn::UnfoldOptions::stride_': class 'torch::ExpandingArray<2,int64_t>'에서는 struct 'torch::nn::UnfoldOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\functional\conv.h(76): message : 'torch::ExpandingArray<2,int64_t>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\activation.h(107,3): warning C4251: 'torch::nn::GELUOptions::approximate_': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 struct 'torch::nn::GELUOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xstring(5186): message : 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\activation.h(255,3): warning C4251: 'torch::nn::functional::SoftmaxFuncOptions::dtype_': class 'c10::optional<c10::ScalarType>'에서는 struct 'torch::nn::functional::SoftmaxFuncOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\ScalarTypeToTypeMeta.h(30): message : 'c10::optional<c10::ScalarType>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\activation.h(296,3): warning C4251: 'torch::nn::functional::SoftminFuncOptions::dtype_': class 'c10::optional<c10::ScalarType>'에서는 struct 'torch::nn::functional::SoftminFuncOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\ScalarTypeToTypeMeta.h(30): message : 'c10::optional<c10::ScalarType>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\activation.h(337,3): warning C4251: 'torch::nn::functional::LogSoftmaxFuncOptions::dtype_': class 'c10::optional<c10::ScalarType>'에서는 struct 'torch::nn::functional::LogSoftmaxFuncOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\ScalarTypeToTypeMeta.h(30): message : 'c10::optional<c10::ScalarType>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\linear.h(65,3): warning C4251: 'torch::nn::UnflattenOptions::dimname_': class 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'에서는 struct 'torch::nn::UnflattenOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xstring(5186): message : 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\linear.h(67,3): warning C4251: 'torch::nn::UnflattenOptions::sizes_': class 'std::vector<int64_t,std::allocator<int64_t>>'에서는 struct 'torch::nn::UnflattenOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\MemoryFormat.h(85): message : 'std::vector<int64_t,std::allocator<int64_t>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\linear.h(69,3): warning C4251: 'torch::nn::UnflattenOptions::namedshape_': class 'std::vector<std::pair<std::string,int64_t>,std::allocator<std::pair<std::string,int64_t>>>'에서는 struct 'torch::nn::UnflattenOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\linear.h(56): message : 'std::vector<std::pair<std::string,int64_t>,std::allocator<std::pair<std::string,int64_t>>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\functional\activation.h(711,18): warning C4244: '=': 'const T'에서 'int'(으)로 변환하면서 데이터가 손실될 수 있습니다.
          with
          [
              T=int64_t
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\functional\activation.h(733,16): warning C4244: '=': 'const T'에서 'int'(으)로 변환하면서 데이터가 손실될 수 있습니다.
          with
          [
              T=int64_t
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\functional\activation.h(743,26): warning C4244: '=': 'T'에서 'int'(으)로 변환하면서 데이터가 손실될 수 있습니다.
          with
          [
              T=int64_t
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(24,3): warning C4251: 'torch::nn::L1LossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>'에서는 struct 'torch::nn::L1LossOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(18): message : 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(68,3): warning C4251: 'torch::nn::KLDivLossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kBatchMean,torch::enumtype::kSum,torch::enumtype::kMean>'에서는 struct 'torch::nn::KLDivLossOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(51): message : 'c10::variant<torch::enumtype::kNone,torch::enumtype::kBatchMean,torch::enumtype::kSum,torch::enumtype::kMean>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(105,3): warning C4251: 'torch::nn::MSELossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>'에서는 struct 'torch::nn::MSELossOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(18): message : 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(138,3): warning C4251: 'torch::nn::BCELossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>'에서는 struct 'torch::nn::BCELossOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(18): message : 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(173,3): warning C4251: 'torch::nn::HingeEmbeddingLossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>'에서는 struct 'torch::nn::HingeEmbeddingLossOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(18): message : 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(218,3): warning C4251: 'torch::nn::MultiMarginLossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>'에서는 struct 'torch::nn::MultiMarginLossOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(18): message : 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(253,3): warning C4251: 'torch::nn::CosineEmbeddingLossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>'에서는 struct 'torch::nn::CosineEmbeddingLossOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(18): message : 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(294,3): warning C4251: 'torch::nn::MultiLabelMarginLossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>'에서는 struct 'torch::nn::MultiLabelMarginLossOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(18): message : 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(335,3): warning C4251: 'torch::nn::SoftMarginLossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>'에서는 struct 'torch::nn::SoftMarginLossOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(18): message : 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(375,3): warning C4251: 'torch::nn::MultiLabelSoftMarginLossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>'에서는 struct 'torch::nn::MultiLabelSoftMarginLossOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(18): message : 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(417,3): warning C4251: 'torch::nn::TripletMarginLossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>'에서는 struct 'torch::nn::TripletMarginLossOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(18): message : 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(212,1): warning C4624: 'c10::constexpr_storage_t<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=torch::nn::TripletMarginWithDistanceLossOptions::distance_function_t
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(411): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::constexpr_storage_t<T>'에 대한 참조를 확인하세요.
          with
          [
              T=torch::nn::TripletMarginWithDistanceLossOptions::distance_function_t
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(549): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::trivially_copyable_optimization_optional_base<T>'에 대한 참조를 확인하세요.
          with
          [
              T=torch::nn::TripletMarginWithDistanceLossOptions::distance_function_t
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(549): message : 컴파일되는 별칭 템플릿 인스턴스화 'c10::OptionalBase<T>'에 대한 참조를 확인하세요.
          with
          [
              T=torch::nn::TripletMarginWithDistanceLossOptions::distance_function_t
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(453): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::optional<torch::nn::TripletMarginWithDistanceLossOptions::distance_function_t>'에 대한 참조를 확인하세요.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(446,1): warning C4624: 'c10::trivially_copyable_optimization_optional_base<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=torch::nn::TripletMarginWithDistanceLossOptions::distance_function_t
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(453,3): warning C4251: 'torch::nn::TripletMarginWithDistanceLossOptions::distance_function_': class 'c10::optional<torch::nn::TripletMarginWithDistanceLossOptions::distance_function_t>'에서는 struct 'torch::nn::TripletMarginWithDistanceLossOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(453): message : 'c10::optional<torch::nn::TripletMarginWithDistanceLossOptions::distance_function_t>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(467,3): warning C4251: 'torch::nn::TripletMarginWithDistanceLossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>'에서는 struct 'torch::nn::TripletMarginWithDistanceLossOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(18): message : 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(502,3): warning C4251: 'torch::nn::CTCLossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>'에서는 struct 'torch::nn::CTCLossOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(18): message : 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(547,3): warning C4251: 'torch::nn::SmoothL1LossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>'에서는 struct 'torch::nn::SmoothL1LossOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(18): message : 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(590,3): warning C4251: 'torch::nn::HuberLossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>'에서는 struct 'torch::nn::HuberLossOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(18): message : 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(633,3): warning C4251: 'torch::nn::PoissonNLLLossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>'에서는 struct 'torch::nn::PoissonNLLLossOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(18): message : 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(667,3): warning C4251: 'torch::nn::MarginRankingLossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>'에서는 struct 'torch::nn::MarginRankingLossOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(18): message : 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(705,3): warning C4251: 'torch::nn::NLLLossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>'에서는 struct 'torch::nn::NLLLossOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(18): message : 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(743,3): warning C4251: 'torch::nn::CrossEntropyLossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>'에서는 struct 'torch::nn::CrossEntropyLossOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(18): message : 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(779,3): warning C4251: 'torch::nn::BCEWithLogitsLossOptions::reduction_': class 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>'에서는 struct 'torch::nn::BCEWithLogitsLossOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\loss.h(18): message : 'c10::variant<torch::enumtype::kNone,torch::enumtype::kMean,torch::enumtype::kSum>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\padding.h(26,3): warning C4251: 'torch::nn::ReflectionPadOptions<D>::padding_': class 'torch::ExpandingArray<D*2,int64_t>'에서는 struct 'torch::nn::ReflectionPadOptions<D>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\padding.h(16): message : 'torch::ExpandingArray<D*2,int64_t>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\padding.h(27): message : 컴파일되는 클래스 템플릿 인스턴스화 'torch::nn::ReflectionPadOptions<D>'에 대한 참조를 확인하세요.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\padding.h(69,3): warning C4251: 'torch::nn::ReplicationPadOptions<D>::padding_': class 'torch::ExpandingArray<D*2,int64_t>'에서는 struct 'torch::nn::ReplicationPadOptions<D>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\padding.h(16): message : 'torch::ExpandingArray<D*2,int64_t>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\padding.h(70): message : 컴파일되는 클래스 템플릿 인스턴스화 'torch::nn::ReplicationPadOptions<D>'에 대한 참조를 확인하세요.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\padding.h(111,3): warning C4251: 'torch::nn::ZeroPad2dOptions::padding_': class 'torch::ExpandingArray<4,int64_t>'에서는 struct 'torch::nn::ZeroPad2dOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\padding.h(105): message : 'torch::ExpandingArray<4,int64_t>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\padding.h(131,3): warning C4251: 'torch::nn::ConstantPadOptions<D>::padding_': class 'torch::ExpandingArray<D*2,int64_t>'에서는 struct 'torch::nn::ConstantPadOptions<D>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\padding.h(16): message : 'torch::ExpandingArray<D*2,int64_t>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\padding.h(135): message : 컴파일되는 클래스 템플릿 인스턴스화 'torch::nn::ConstantPadOptions<D>'에 대한 참조를 확인하세요.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\padding.h(184,3): warning C4251: 'torch::nn::functional::PadFuncOptions::pad_': class 'std::vector<int64_t,std::allocator<int64_t>>'에서는 struct 'torch::nn::functional::PadFuncOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\MemoryFormat.h(85): message : 'std::vector<int64_t,std::allocator<int64_t>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\padding.h(187,3): warning C4251: 'torch::nn::functional::PadFuncOptions::mode_': class 'c10::variant<torch::enumtype::kConstant,torch::enumtype::kReflect,torch::enumtype::kReplicate,torch::enumtype::kCircular>'에서는 struct 'torch::nn::functional::PadFuncOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\padding.h(174): message : 'c10::variant<torch::enumtype::kConstant,torch::enumtype::kReflect,torch::enumtype::kReplicate,torch::enumtype::kCircular>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\functional\pooling.h(1053,10): warning C4244: '초기화 중': '_Ty'에서 'int'(으)로 변환하면서 데이터가 손실될 수 있습니다.
          with
          [
              _Ty=int64_t
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\functional\pooling.h(1054,10): warning C4244: '초기화 중': '_Ty'에서 'int'(으)로 변환하면서 데이터가 손실될 수 있습니다.
          with
          [
              _Ty=int64_t
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\normalization.h(21,3): warning C4251: 'torch::nn::LayerNormOptions::normalized_shape_': class 'std::vector<int64_t,std::allocator<int64_t>>'에서는 struct 'torch::nn::LayerNormOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\MemoryFormat.h(85): message : 'std::vector<int64_t,std::allocator<int64_t>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\normalization.h(45,3): warning C4251: 'torch::nn::functional::LayerNormFuncOptions::normalized_shape_': class 'std::vector<int64_t,std::allocator<int64_t>>'에서는 struct 'torch::nn::functional::LayerNormFuncOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\MemoryFormat.h(85): message : 'std::vector<int64_t,std::allocator<int64_t>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\normalization.h(136,3): warning C4251: 'torch::nn::functional::NormalizeFuncOptions::out_': class 'c10::optional<at::Tensor>'에서는 struct 'torch::nn::functional::NormalizeFuncOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\ops\_backward_ops.h(18): message : 'c10::optional<at::Tensor>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\upsampling.h(24,3): warning C4251: 'torch::nn::UpsampleOptions::size_': class 'c10::optional<std::vector<int64_t,std::allocator<int64_t>>>'에서는 struct 'torch::nn::UpsampleOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\jit_type.h(542): message : 'c10::optional<std::vector<int64_t,std::allocator<int64_t>>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(212,1): warning C4624: 'c10::constexpr_storage_t<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=std::vector<double,std::allocator<double>>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(411): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::constexpr_storage_t<T>'에 대한 참조를 확인하세요.
          with
          [
              T=std::vector<double,std::allocator<double>>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(549): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::trivially_copyable_optimization_optional_base<T>'에 대한 참조를 확인하세요.
          with
          [
              T=std::vector<double,std::allocator<double>>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(549): message : 컴파일되는 별칭 템플릿 인스턴스화 'c10::OptionalBase<T>'에 대한 참조를 확인하세요.
          with
          [
              T=std::vector<double,std::allocator<double>>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\upsampling.h(27): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::optional<std::vector<T,std::allocator<T>>>'에 대한 참조를 확인하세요.
          with
          [
              T=double
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(446,1): warning C4624: 'c10::trivially_copyable_optimization_optional_base<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=std::vector<double,std::allocator<double>>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\upsampling.h(27,3): warning C4251: 'torch::nn::UpsampleOptions::scale_factor_': class 'c10::optional<std::vector<T,std::allocator<T>>>'에서는 struct 'torch::nn::UpsampleOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              T=double
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\upsampling.h(27): message : 'c10::optional<std::vector<T,std::allocator<T>>>' 선언을 참조하십시오.
          with
          [
              T=double
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\upsampling.h(38,3): warning C4251: 'torch::nn::UpsampleOptions::mode_': class 'c10::variant<torch::enumtype::kNearest,torch::enumtype::kLinear,torch::enumtype::kBilinear,torch::enumtype::kBicubic,torch::enumtype::kTrilinear>'에서는 struct 'torch::nn::UpsampleOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\upsampling.h(31): message : 'c10::variant<torch::enumtype::kNearest,torch::enumtype::kLinear,torch::enumtype::kBilinear,torch::enumtype::kBicubic,torch::enumtype::kTrilinear>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\upsampling.h(44,3): warning C4251: 'torch::nn::UpsampleOptions::align_corners_': class 'c10::optional<bool>'에서는 struct 'torch::nn::UpsampleOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\TensorOptions.h(44): message : 'c10::optional<bool>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\upsampling.h(69,3): warning C4251: 'torch::nn::functional::InterpolateFuncOptions::size_': class 'c10::optional<std::vector<int64_t,std::allocator<int64_t>>>'에서는 struct 'torch::nn::functional::InterpolateFuncOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\jit_type.h(542): message : 'c10::optional<std::vector<int64_t,std::allocator<int64_t>>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\upsampling.h(72,3): warning C4251: 'torch::nn::functional::InterpolateFuncOptions::scale_factor_': class 'c10::optional<std::vector<T,std::allocator<T>>>'에서는 struct 'torch::nn::functional::InterpolateFuncOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              T=double
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\upsampling.h(27): message : 'c10::optional<std::vector<T,std::allocator<T>>>' 선언을 참조하십시오.
          with
          [
              T=double
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\upsampling.h(76,3): warning C4251: 'torch::nn::functional::InterpolateFuncOptions::mode_': class 'c10::variant<torch::enumtype::kNearest,torch::enumtype::kLinear,torch::enumtype::kBilinear,torch::enumtype::kBicubic,torch::enumtype::kTrilinear,torch::enumtype::kArea,torch::enumtype::kNearestExact>'에서는 struct 'torch::nn::functional::InterpolateFuncOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\upsampling.h(58): message : 'c10::variant<torch::enumtype::kNearest,torch::enumtype::kLinear,torch::enumtype::kBilinear,torch::enumtype::kBicubic,torch::enumtype::kTrilinear,torch::enumtype::kArea,torch::enumtype::kNearestExact>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\upsampling.h(87,3): warning C4251: 'torch::nn::functional::InterpolateFuncOptions::align_corners_': class 'c10::optional<bool>'에서는 struct 'torch::nn::functional::InterpolateFuncOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\TensorOptions.h(44): message : 'c10::optional<bool>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\upsampling.h(99,3): warning C4251: 'torch::nn::functional::InterpolateFuncOptions::recompute_scale_factor_': class 'c10::optional<bool>'에서는 struct 'torch::nn::functional::InterpolateFuncOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\TensorOptions.h(44): message : 'c10::optional<bool>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\vision.h(27,3): warning C4251: 'torch::nn::functional::GridSampleFuncOptions::mode_': class 'c10::variant<torch::enumtype::kBilinear,torch::enumtype::kNearest>'에서는 struct 'torch::nn::functional::GridSampleFuncOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\vision.h(21): message : 'c10::variant<torch::enumtype::kBilinear,torch::enumtype::kNearest>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\vision.h(29,3): warning C4251: 'torch::nn::functional::GridSampleFuncOptions::padding_mode_': class 'c10::variant<torch::enumtype::kZeros,torch::enumtype::kBorder,torch::enumtype::kReflection>'에서는 struct 'torch::nn::functional::GridSampleFuncOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\vision.h(23): message : 'c10::variant<torch::enumtype::kZeros,torch::enumtype::kBorder,torch::enumtype::kReflection>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\vision.h(31,3): warning C4251: 'torch::nn::functional::GridSampleFuncOptions::align_corners_': class 'c10::optional<bool>'에서는 struct 'torch::nn::functional::GridSampleFuncOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\TensorOptions.h(44): message : 'c10::optional<bool>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\container\functional.h(95,12): warning C4251: 'torch::nn::FunctionalImpl::function_': class 'std::function<at::Tensor (at::Tensor)>'에서는 class 'torch::nn::FunctionalImpl'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\data\transforms\tensor.h(39): message : 'std::function<at::Tensor (at::Tensor)>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\activation.h(860,10): warning C4251: 'torch::nn::MultiheadAttentionImpl::out_proj': class 'torch::nn::Linear'에서는 class 'torch::nn::MultiheadAttentionImpl'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\linear.h(83): message : 'torch::nn::Linear' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\adaptive.h(30,3): warning C4251: 'torch::nn::AdaptiveLogSoftmaxWithLossOptions::cutoffs_': class 'std::vector<int64_t,std::allocator<int64_t>>'에서는 struct 'torch::nn::AdaptiveLogSoftmaxWithLossOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\MemoryFormat.h(85): message : 'std::vector<int64_t,std::allocator<int64_t>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\adaptive.h(85,24): warning C4251: 'torch::nn::AdaptiveLogSoftmaxWithLossImpl::cutoffs': class 'std::vector<int64_t,std::allocator<int64_t>>'에서는 class 'torch::nn::AdaptiveLogSoftmaxWithLossImpl'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\MemoryFormat.h(85): message : 'std::vector<int64_t,std::allocator<int64_t>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\adaptive.h(95,10): warning C4251: 'torch::nn::AdaptiveLogSoftmaxWithLossImpl::head': class 'torch::nn::Linear'에서는 class 'torch::nn::AdaptiveLogSoftmaxWithLossImpl'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\linear.h(83): message : 'torch::nn::Linear' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\adaptive.h(97,14): warning C4251: 'torch::nn::AdaptiveLogSoftmaxWithLossImpl::tail': class 'torch::nn::ModuleList'에서는 class 'torch::nn::AdaptiveLogSoftmaxWithLossImpl'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\container\modulelist.h(271): message : 'torch::nn::ModuleList' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\conv.h(179,63): warning C4251: 'torch::nn::ConvNdImpl<1,torch::nn::Conv1dImpl>::options': struct 'torch::nn::detail::ConvNdOptions<1>'에서는 class 'torch::nn::ConvNdImpl<1,torch::nn::Conv1dImpl>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\conv.h(27): message : 'torch::nn::detail::ConvNdOptions<1>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\conv.h(179,63): warning C4251: 'torch::nn::ConvNdImpl<1,torch::nn::Conv1dImpl>::_reversed_padding_repeated_twice': class 'std::vector<int64_t,std::allocator<int64_t>>'에서는 class 'torch::nn::ConvNdImpl<1,torch::nn::Conv1dImpl>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\MemoryFormat.h(85): message : 'std::vector<int64_t,std::allocator<int64_t>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\conv.h(211,63): warning C4251: 'torch::nn::ConvNdImpl<2,torch::nn::Conv2dImpl>::options': struct 'torch::nn::detail::ConvNdOptions<2>'에서는 class 'torch::nn::ConvNdImpl<2,torch::nn::Conv2dImpl>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\conv.h(27): message : 'torch::nn::detail::ConvNdOptions<2>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\conv.h(211,63): warning C4251: 'torch::nn::ConvNdImpl<2,torch::nn::Conv2dImpl>::_reversed_padding_repeated_twice': class 'std::vector<int64_t,std::allocator<int64_t>>'에서는 class 'torch::nn::ConvNdImpl<2,torch::nn::Conv2dImpl>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\MemoryFormat.h(85): message : 'std::vector<int64_t,std::allocator<int64_t>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\conv.h(246,63): warning C4251: 'torch::nn::ConvNdImpl<3,torch::nn::Conv3dImpl>::options': struct 'torch::nn::detail::ConvNdOptions<3>'에서는 class 'torch::nn::ConvNdImpl<3,torch::nn::Conv3dImpl>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\conv.h(27): message : 'torch::nn::detail::ConvNdOptions<3>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\conv.h(246,63): warning C4251: 'torch::nn::ConvNdImpl<3,torch::nn::Conv3dImpl>::_reversed_padding_repeated_twice': class 'std::vector<int64_t,std::allocator<int64_t>>'에서는 class 'torch::nn::ConvNdImpl<3,torch::nn::Conv3dImpl>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\MemoryFormat.h(85): message : 'std::vector<int64_t,std::allocator<int64_t>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\conv.h(338,58): warning C4251: 'torch::nn::ConvNdImpl<1,Derived>::options': struct 'torch::nn::detail::ConvNdOptions<1>'에서는 class 'torch::nn::ConvNdImpl<1,Derived>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              Derived=torch::nn::ConvTranspose1dImpl
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\conv.h(27): message : 'torch::nn::detail::ConvNdOptions<1>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\conv.h(338,58): warning C4251: 'torch::nn::ConvNdImpl<1,Derived>::_reversed_padding_repeated_twice': class 'std::vector<int64_t,std::allocator<int64_t>>'에서는 class 'torch::nn::ConvNdImpl<1,Derived>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              Derived=torch::nn::ConvTranspose1dImpl
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\MemoryFormat.h(85): message : 'std::vector<int64_t,std::allocator<int64_t>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\conv.h(380,58): warning C4251: 'torch::nn::ConvNdImpl<2,Derived>::options': struct 'torch::nn::detail::ConvNdOptions<2>'에서는 class 'torch::nn::ConvNdImpl<2,Derived>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              Derived=torch::nn::ConvTranspose2dImpl
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\conv.h(27): message : 'torch::nn::detail::ConvNdOptions<2>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\conv.h(380,58): warning C4251: 'torch::nn::ConvNdImpl<2,Derived>::_reversed_padding_repeated_twice': class 'std::vector<int64_t,std::allocator<int64_t>>'에서는 class 'torch::nn::ConvNdImpl<2,Derived>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              Derived=torch::nn::ConvTranspose2dImpl
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\MemoryFormat.h(85): message : 'std::vector<int64_t,std::allocator<int64_t>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\conv.h(422,58): warning C4251: 'torch::nn::ConvNdImpl<3,Derived>::options': struct 'torch::nn::detail::ConvNdOptions<3>'에서는 class 'torch::nn::ConvNdImpl<3,Derived>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              Derived=torch::nn::ConvTranspose3dImpl
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\conv.h(27): message : 'torch::nn::detail::ConvNdOptions<3>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\conv.h(422,58): warning C4251: 'torch::nn::ConvNdImpl<3,Derived>::_reversed_padding_repeated_twice': class 'std::vector<int64_t,std::allocator<int64_t>>'에서는 class 'torch::nn::ConvNdImpl<3,Derived>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              Derived=torch::nn::ConvTranspose3dImpl
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\MemoryFormat.h(85): message : 'std::vector<int64_t,std::allocator<int64_t>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\padding.h(26,3): warning C4251: 'torch::nn::ReflectionPadOptions<1>::padding_': class 'torch::ExpandingArray<2,int64_t>'에서는 struct 'torch::nn::ReflectionPadOptions<1>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\functional\conv.h(76): message : 'torch::ExpandingArray<2,int64_t>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\padding.h(28): message : 컴파일되는 클래스 템플릿 인스턴스화 'torch::nn::ReflectionPadOptions<1>'에 대한 참조를 확인하세요.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\padding.h(46): message : 컴파일되는 클래스 템플릿 인스턴스화 'torch::nn::ReflectionPadImpl<1,torch::nn::ReflectionPad1dImpl>'에 대한 참조를 확인하세요.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\padding.h(26,3): warning C4251: 'torch::nn::ReflectionPadOptions<2>::padding_': class 'torch::ExpandingArray<4,int64_t>'에서는 struct 'torch::nn::ReflectionPadOptions<2>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\padding.h(105): message : 'torch::ExpandingArray<4,int64_t>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\padding.h(28): message : 컴파일되는 클래스 템플릿 인스턴스화 'torch::nn::ReflectionPadOptions<2>'에 대한 참조를 확인하세요.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\padding.h(73): message : 컴파일되는 클래스 템플릿 인스턴스화 'torch::nn::ReflectionPadImpl<2,torch::nn::ReflectionPad2dImpl>'에 대한 참조를 확인하세요.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\padding.h(26,3): warning C4251: 'torch::nn::ReflectionPadOptions<3>::padding_': class 'torch::ExpandingArray<6,int64_t>'에서는 struct 'torch::nn::ReflectionPadOptions<3>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\padding.h(16): message : 'torch::ExpandingArray<6,int64_t>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\padding.h(28): message : 컴파일되는 클래스 템플릿 인스턴스화 'torch::nn::ReflectionPadOptions<3>'에 대한 참조를 확인하세요.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\padding.h(101): message : 컴파일되는 클래스 템플릿 인스턴스화 'torch::nn::ReflectionPadImpl<3,torch::nn::ReflectionPad3dImpl>'에 대한 참조를 확인하세요.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\padding.h(69,3): warning C4251: 'torch::nn::ReplicationPadOptions<1>::padding_': class 'torch::ExpandingArray<2,int64_t>'에서는 struct 'torch::nn::ReplicationPadOptions<1>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\functional\conv.h(76): message : 'torch::ExpandingArray<2,int64_t>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\padding.h(131): message : 컴파일되는 클래스 템플릿 인스턴스화 'torch::nn::ReplicationPadOptions<1>'에 대한 참조를 확인하세요.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\padding.h(149): message : 컴파일되는 클래스 템플릿 인스턴스화 'torch::nn::ReplicationPadImpl<1,torch::nn::ReplicationPad1dImpl>'에 대한 참조를 확인하세요.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\padding.h(69,3): warning C4251: 'torch::nn::ReplicationPadOptions<2>::padding_': class 'torch::ExpandingArray<4,int64_t>'에서는 struct 'torch::nn::ReplicationPadOptions<2>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\padding.h(105): message : 'torch::ExpandingArray<4,int64_t>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\padding.h(131): message : 컴파일되는 클래스 템플릿 인스턴스화 'torch::nn::ReplicationPadOptions<2>'에 대한 참조를 확인하세요.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\padding.h(176): message : 컴파일되는 클래스 템플릿 인스턴스화 'torch::nn::ReplicationPadImpl<2,torch::nn::ReplicationPad2dImpl>'에 대한 참조를 확인하세요.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\padding.h(69,3): warning C4251: 'torch::nn::ReplicationPadOptions<3>::padding_': class 'torch::ExpandingArray<6,int64_t>'에서는 struct 'torch::nn::ReplicationPadOptions<3>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\padding.h(16): message : 'torch::ExpandingArray<6,int64_t>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\padding.h(131): message : 컴파일되는 클래스 템플릿 인스턴스화 'torch::nn::ReplicationPadOptions<3>'에 대한 참조를 확인하세요.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\padding.h(203): message : 컴파일되는 클래스 템플릿 인스턴스화 'torch::nn::ReplicationPadImpl<3,torch::nn::ReplicationPad3dImpl>'에 대한 참조를 확인하세요.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\padding.h(131,3): warning C4251: 'torch::nn::ConstantPadOptions<1>::padding_': class 'torch::ExpandingArray<2,int64_t>'에서는 struct 'torch::nn::ConstantPadOptions<1>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\functional\conv.h(76): message : 'torch::ExpandingArray<2,int64_t>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\padding.h(270): message : 컴파일되는 클래스 템플릿 인스턴스화 'torch::nn::ConstantPadOptions<1>'에 대한 참조를 확인하세요.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\padding.h(287): message : 컴파일되는 클래스 템플릿 인스턴스화 'torch::nn::ConstantPadImpl<1,torch::nn::ConstantPad1dImpl>'에 대한 참조를 확인하세요.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\padding.h(131,3): warning C4251: 'torch::nn::ConstantPadOptions<2>::padding_': class 'torch::ExpandingArray<4,int64_t>'에서는 struct 'torch::nn::ConstantPadOptions<2>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\padding.h(105): message : 'torch::ExpandingArray<4,int64_t>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\padding.h(270): message : 컴파일되는 클래스 템플릿 인스턴스화 'torch::nn::ConstantPadOptions<2>'에 대한 참조를 확인하세요.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\padding.h(313): message : 컴파일되는 클래스 템플릿 인스턴스화 'torch::nn::ConstantPadImpl<2,torch::nn::ConstantPad2dImpl>'에 대한 참조를 확인하세요.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\padding.h(131,3): warning C4251: 'torch::nn::ConstantPadOptions<3>::padding_': class 'torch::ExpandingArray<6,int64_t>'에서는 struct 'torch::nn::ConstantPadOptions<3>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\padding.h(16): message : 'torch::ExpandingArray<6,int64_t>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\padding.h(270): message : 컴파일되는 클래스 템플릿 인스턴스화 'torch::nn::ConstantPadOptions<3>'에 대한 참조를 확인하세요.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\padding.h(339): message : 컴파일되는 클래스 템플릿 인스턴스화 'torch::nn::ConstantPadImpl<3,torch::nn::ConstantPad3dImpl>'에 대한 참조를 확인하세요.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(28,21): warning C4251: 'torch::nn::AvgPoolImpl<1,torch::nn::AvgPool1dImpl>::options': struct 'torch::nn::AvgPoolOptions<1>'에서는 class 'torch::nn::AvgPoolImpl<1,torch::nn::AvgPool1dImpl>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\pooling.h(44): message : 'torch::nn::AvgPoolOptions<1>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(44): message : 컴파일되는 클래스 템플릿 인스턴스화 'torch::nn::AvgPoolImpl<1,torch::nn::AvgPool1dImpl>'에 대한 참조를 확인하세요.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(28,21): warning C4251: 'torch::nn::AvgPoolImpl<2,torch::nn::AvgPool2dImpl>::options': struct 'torch::nn::AvgPoolOptions<2>'에서는 class 'torch::nn::AvgPoolImpl<2,torch::nn::AvgPool2dImpl>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\pooling.h(52): message : 'torch::nn::AvgPoolOptions<2>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(70): message : 컴파일되는 클래스 템플릿 인스턴스화 'torch::nn::AvgPoolImpl<2,torch::nn::AvgPool2dImpl>'에 대한 참조를 확인하세요.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(28,21): warning C4251: 'torch::nn::AvgPoolImpl<3,torch::nn::AvgPool3dImpl>::options': struct 'torch::nn::AvgPoolOptions<3>'에서는 class 'torch::nn::AvgPoolImpl<3,torch::nn::AvgPool3dImpl>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\pooling.h(60): message : 'torch::nn::AvgPoolOptions<3>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(96): message : 컴파일되는 클래스 템플릿 인스턴스화 'torch::nn::AvgPoolImpl<3,torch::nn::AvgPool3dImpl>'에 대한 참조를 확인하세요.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(125,21): warning C4251: 'torch::nn::MaxPoolImpl<1,torch::nn::MaxPool1dImpl>::options': struct 'torch::nn::MaxPoolOptions<1>'에서는 class 'torch::nn::MaxPoolImpl<1,torch::nn::MaxPool1dImpl>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\pooling.h(134): message : 'torch::nn::MaxPoolOptions<1>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(141): message : 컴파일되는 클래스 템플릿 인스턴스화 'torch::nn::MaxPoolImpl<1,torch::nn::MaxPool1dImpl>'에 대한 참조를 확인하세요.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(125,21): warning C4251: 'torch::nn::MaxPoolImpl<2,torch::nn::MaxPool2dImpl>::options': struct 'torch::nn::MaxPoolOptions<2>'에서는 class 'torch::nn::MaxPoolImpl<2,torch::nn::MaxPool2dImpl>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\pooling.h(142): message : 'torch::nn::MaxPoolOptions<2>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(171): message : 컴파일되는 클래스 템플릿 인스턴스화 'torch::nn::MaxPoolImpl<2,torch::nn::MaxPool2dImpl>'에 대한 참조를 확인하세요.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(125,21): warning C4251: 'torch::nn::MaxPoolImpl<3,torch::nn::MaxPool3dImpl>::options': struct 'torch::nn::MaxPoolOptions<3>'에서는 class 'torch::nn::MaxPoolImpl<3,torch::nn::MaxPool3dImpl>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\pooling.h(150): message : 'torch::nn::MaxPoolOptions<3>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(201): message : 컴파일되는 클래스 템플릿 인스턴스화 'torch::nn::MaxPoolImpl<3,torch::nn::MaxPool3dImpl>'에 대한 참조를 확인하세요.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(241,41): warning C4251: 'torch::nn::AdaptiveMaxPoolImpl<D,output_size_t,Derived>::options': struct 'torch::nn::AdaptiveMaxPoolOptions<output_size_t>'에서는 class 'torch::nn::AdaptiveMaxPoolImpl<D,output_size_t,Derived>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(228): message : 'torch::nn::AdaptiveMaxPoolOptions<output_size_t>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(242): message : 컴파일되는 클래스 템플릿 인스턴스화 'torch::nn::AdaptiveMaxPoolImpl<D,output_size_t,Derived>'에 대한 참조를 확인하세요.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(241,41): warning C4251: 'torch::nn::AdaptiveMaxPoolImpl<1,torch::ExpandingArray<1,int64_t>,torch::nn::AdaptiveMaxPool1dImpl>::options': struct 'torch::nn::AdaptiveMaxPoolOptions<torch::ExpandingArray<1,int64_t>>'에서는 class 'torch::nn::AdaptiveMaxPoolImpl<1,torch::ExpandingArray<1,int64_t>,torch::nn::AdaptiveMaxPool1dImpl>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\pooling.h(206): message : 'torch::nn::AdaptiveMaxPoolOptions<torch::ExpandingArray<1,int64_t>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(258): message : 컴파일되는 클래스 템플릿 인스턴스화 'torch::nn::AdaptiveMaxPoolImpl<1,torch::ExpandingArray<1,int64_t>,torch::nn::AdaptiveMaxPool1dImpl>'에 대한 참조를 확인하세요.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(241,41): warning C4251: 'torch::nn::AdaptiveMaxPoolImpl<2,torch::ExpandingArrayWithOptionalElem<2,int64_t>,torch::nn::AdaptiveMaxPool2dImpl>::options': struct 'torch::nn::AdaptiveMaxPoolOptions<torch::ExpandingArrayWithOptionalElem<2,int64_t>>'에서는 class 'torch::nn::AdaptiveMaxPoolImpl<2,torch::ExpandingArrayWithOptionalElem<2,int64_t>,torch::nn::AdaptiveMaxPool2dImpl>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\pooling.h(215): message : 'torch::nn::AdaptiveMaxPoolOptions<torch::ExpandingArrayWithOptionalElem<2,int64_t>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(293): message : 컴파일되는 클래스 템플릿 인스턴스화 'torch::nn::AdaptiveMaxPoolImpl<2,torch::ExpandingArrayWithOptionalElem<2,int64_t>,torch::nn::AdaptiveMaxPool2dImpl>'에 대한 참조를 확인하세요.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(241,41): warning C4251: 'torch::nn::AdaptiveMaxPoolImpl<3,torch::ExpandingArrayWithOptionalElem<3,int64_t>,torch::nn::AdaptiveMaxPool3dImpl>::options': struct 'torch::nn::AdaptiveMaxPoolOptions<torch::ExpandingArrayWithOptionalElem<3,int64_t>>'에서는 class 'torch::nn::AdaptiveMaxPoolImpl<3,torch::ExpandingArrayWithOptionalElem<3,int64_t>,torch::nn::AdaptiveMaxPool3dImpl>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\pooling.h(224): message : 'torch::nn::AdaptiveMaxPoolOptions<torch::ExpandingArrayWithOptionalElem<3,int64_t>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(330): message : 컴파일되는 클래스 템플릿 인스턴스화 'torch::nn::AdaptiveMaxPoolImpl<3,torch::ExpandingArrayWithOptionalElem<3,int64_t>,torch::nn::AdaptiveMaxPool3dImpl>'에 대한 참조를 확인하세요.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(374,41): warning C4251: 'torch::nn::AdaptiveAvgPoolImpl<D,output_size_t,Derived>::options': struct 'torch::nn::AdaptiveAvgPoolOptions<output_size_t>'에서는 class 'torch::nn::AdaptiveAvgPoolImpl<D,output_size_t,Derived>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(361): message : 'torch::nn::AdaptiveAvgPoolOptions<output_size_t>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(375): message : 컴파일되는 클래스 템플릿 인스턴스화 'torch::nn::AdaptiveAvgPoolImpl<D,output_size_t,Derived>'에 대한 참조를 확인하세요.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(374,41): warning C4251: 'torch::nn::AdaptiveAvgPoolImpl<1,torch::ExpandingArray<1,int64_t>,torch::nn::AdaptiveAvgPool1dImpl>::options': struct 'torch::nn::AdaptiveAvgPoolOptions<torch::ExpandingArray<1,int64_t>>'에서는 class 'torch::nn::AdaptiveAvgPoolImpl<1,torch::ExpandingArray<1,int64_t>,torch::nn::AdaptiveAvgPool1dImpl>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\pooling.h(280): message : 'torch::nn::AdaptiveAvgPoolOptions<torch::ExpandingArray<1,int64_t>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(391): message : 컴파일되는 클래스 템플릿 인스턴스화 'torch::nn::AdaptiveAvgPoolImpl<1,torch::ExpandingArray<1,int64_t>,torch::nn::AdaptiveAvgPool1dImpl>'에 대한 참조를 확인하세요.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(374,41): warning C4251: 'torch::nn::AdaptiveAvgPoolImpl<2,torch::ExpandingArrayWithOptionalElem<2,int64_t>,torch::nn::AdaptiveAvgPool2dImpl>::options': struct 'torch::nn::AdaptiveAvgPoolOptions<torch::ExpandingArrayWithOptionalElem<2,int64_t>>'에서는 class 'torch::nn::AdaptiveAvgPoolImpl<2,torch::ExpandingArrayWithOptionalElem<2,int64_t>,torch::nn::AdaptiveAvgPool2dImpl>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\pooling.h(289): message : 'torch::nn::AdaptiveAvgPoolOptions<torch::ExpandingArrayWithOptionalElem<2,int64_t>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(422): message : 컴파일되는 클래스 템플릿 인스턴스화 'torch::nn::AdaptiveAvgPoolImpl<2,torch::ExpandingArrayWithOptionalElem<2,int64_t>,torch::nn::AdaptiveAvgPool2dImpl>'에 대한 참조를 확인하세요.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(374,41): warning C4251: 'torch::nn::AdaptiveAvgPoolImpl<3,torch::ExpandingArrayWithOptionalElem<3,int64_t>,torch::nn::AdaptiveAvgPool3dImpl>::options': struct 'torch::nn::AdaptiveAvgPoolOptions<torch::ExpandingArrayWithOptionalElem<3,int64_t>>'에서는 class 'torch::nn::AdaptiveAvgPoolImpl<3,torch::ExpandingArrayWithOptionalElem<3,int64_t>,torch::nn::AdaptiveAvgPool3dImpl>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\pooling.h(298): message : 'torch::nn::AdaptiveAvgPoolOptions<torch::ExpandingArrayWithOptionalElem<3,int64_t>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(455): message : 컴파일되는 클래스 템플릿 인스턴스화 'torch::nn::AdaptiveAvgPoolImpl<3,torch::ExpandingArrayWithOptionalElem<3,int64_t>,torch::nn::AdaptiveAvgPool3dImpl>'에 대한 참조를 확인하세요.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(488,23): warning C4251: 'torch::nn::MaxUnpoolImpl<1,torch::nn::MaxUnpool1dImpl>::options': struct 'torch::nn::MaxUnpoolOptions<1>'에서는 class 'torch::nn::MaxUnpoolImpl<1,torch::nn::MaxUnpool1dImpl>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\pooling.h(366): message : 'torch::nn::MaxUnpoolOptions<1>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(504): message : 컴파일되는 클래스 템플릿 인스턴스화 'torch::nn::MaxUnpoolImpl<1,torch::nn::MaxUnpool1dImpl>'에 대한 참조를 확인하세요.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(488,23): warning C4251: 'torch::nn::MaxUnpoolImpl<2,torch::nn::MaxUnpool2dImpl>::options': struct 'torch::nn::MaxUnpoolOptions<2>'에서는 class 'torch::nn::MaxUnpoolImpl<2,torch::nn::MaxUnpool2dImpl>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\pooling.h(374): message : 'torch::nn::MaxUnpoolOptions<2>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(536): message : 컴파일되는 클래스 템플릿 인스턴스화 'torch::nn::MaxUnpoolImpl<2,torch::nn::MaxUnpool2dImpl>'에 대한 참조를 확인하세요.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(488,23): warning C4251: 'torch::nn::MaxUnpoolImpl<3,torch::nn::MaxUnpool3dImpl>::options': struct 'torch::nn::MaxUnpoolOptions<3>'에서는 class 'torch::nn::MaxUnpoolImpl<3,torch::nn::MaxUnpool3dImpl>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\pooling.h(382): message : 'torch::nn::MaxUnpoolOptions<3>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(568): message : 컴파일되는 클래스 템플릿 인스턴스화 'torch::nn::MaxUnpoolImpl<3,torch::nn::MaxUnpool3dImpl>'에 대한 참조를 확인하세요.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(620,30): warning C4251: 'torch::nn::FractionalMaxPool2dImpl::options': struct 'torch::nn::FractionalMaxPoolOptions<2>'에서는 class 'torch::nn::FractionalMaxPool2dImpl'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\pooling.h(469): message : 'torch::nn::FractionalMaxPoolOptions<2>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(665,30): warning C4251: 'torch::nn::FractionalMaxPool3dImpl::options': struct 'torch::nn::FractionalMaxPoolOptions<3>'에서는 class 'torch::nn::FractionalMaxPool3dImpl'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\pooling.h(477): message : 'torch::nn::FractionalMaxPoolOptions<3>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(692,20): warning C4251: 'torch::nn::LPPoolImpl<1,torch::nn::LPPool1dImpl>::options': struct 'torch::nn::LPPoolOptions<1>'에서는 class 'torch::nn::LPPoolImpl<1,torch::nn::LPPool1dImpl>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\pooling.h(533): message : 'torch::nn::LPPoolOptions<1>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(708): message : 컴파일되는 클래스 템플릿 인스턴스화 'torch::nn::LPPoolImpl<1,torch::nn::LPPool1dImpl>'에 대한 참조를 확인하세요.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(692,20): warning C4251: 'torch::nn::LPPoolImpl<2,torch::nn::LPPool2dImpl>::options': struct 'torch::nn::LPPoolOptions<2>'에서는 class 'torch::nn::LPPoolImpl<2,torch::nn::LPPool2dImpl>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\pooling.h(542): message : 'torch::nn::LPPoolOptions<2>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\pooling.h(736): message : 컴파일되는 클래스 템플릿 인스턴스화 'torch::nn::LPPoolImpl<2,torch::nn::LPPool2dImpl>'에 대한 참조를 확인하세요.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\rnn.h(27,3): warning C4251: 'torch::nn::detail::RNNOptionsBase::mode_': class 'c10::variant<torch::enumtype::kLSTM,torch::enumtype::kGRU,torch::enumtype::kRNN_TANH,torch::enumtype::kRNN_RELU>'에서는 struct 'torch::nn::detail::RNNOptionsBase'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\rnn.h(15): message : 'c10::variant<torch::enumtype::kLSTM,torch::enumtype::kGRU,torch::enumtype::kRNN_TANH,torch::enumtype::kRNN_RELU>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\rnn.h(75,3): warning C4251: 'torch::nn::RNNOptions::nonlinearity_': class 'c10::variant<torch::enumtype::kTanh,torch::enumtype::kReLU>'에서는 struct 'torch::nn::RNNOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\rnn.h(60): message : 'c10::variant<torch::enumtype::kTanh,torch::enumtype::kReLU>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\rnn.h(198,3): warning C4251: 'torch::nn::RNNCellOptions::nonlinearity_': class 'c10::variant<torch::enumtype::kTanh,torch::enumtype::kReLU>'에서는 struct 'torch::nn::RNNCellOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\rnn.h(60): message : 'c10::variant<torch::enumtype::kTanh,torch::enumtype::kReLU>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\rnn.h(83,28): warning C4251: 'torch::nn::detail::RNNImplBase<Derived>::flat_weights_names_': class 'std::vector<std::string,std::allocator<std::string>>'에서는 class 'torch::nn::detail::RNNImplBase<Derived>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Exception.h(36): message : 'std::vector<std::string,std::allocator<std::string>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\rnn.h(88): message : 컴파일되는 클래스 템플릿 인스턴스화 'torch::nn::detail::RNNImplBase<Derived>'에 대한 참조를 확인하세요.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\rnn.h(85,41): warning C4251: 'torch::nn::detail::RNNImplBase<Derived>::all_weights_': class 'std::vector<std::vector<std::string,std::allocator<std::string>>,std::allocator<std::vector<std::string,std::allocator<std::string>>>>'에서는 class 'torch::nn::detail::RNNImplBase<Derived>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\rnn.h(85): message : 'std::vector<std::vector<std::string,std::allocator<std::string>>,std::allocator<std::vector<std::string,std::allocator<std::string>>>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\rnn.h(87,23): warning C4251: 'torch::nn::detail::RNNImplBase<Derived>::flat_weights_': class 'std::vector<at::Tensor,std::allocator<at::Tensor>>'에서는 class 'torch::nn::detail::RNNImplBase<Derived>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\ops\chunk_ops.h(18): message : 'std::vector<at::Tensor,std::allocator<at::Tensor>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\rnn.h(83,28): warning C4251: 'torch::nn::detail::RNNImplBase<torch::nn::RNNImpl>::flat_weights_names_': class 'std::vector<std::string,std::allocator<std::string>>'에서는 class 'torch::nn::detail::RNNImplBase<torch::nn::RNNImpl>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Exception.h(36): message : 'std::vector<std::string,std::allocator<std::string>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\rnn.h(105): message : 컴파일되는 클래스 템플릿 인스턴스화 'torch::nn::detail::RNNImplBase<torch::nn::RNNImpl>'에 대한 참조를 확인하세요.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\rnn.h(85,41): warning C4251: 'torch::nn::detail::RNNImplBase<torch::nn::RNNImpl>::all_weights_': class 'std::vector<std::vector<std::string,std::allocator<std::string>>,std::allocator<std::vector<std::string,std::allocator<std::string>>>>'에서는 class 'torch::nn::detail::RNNImplBase<torch::nn::RNNImpl>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\rnn.h(85): message : 'std::vector<std::vector<std::string,std::allocator<std::string>>,std::allocator<std::vector<std::string,std::allocator<std::string>>>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\rnn.h(87,23): warning C4251: 'torch::nn::detail::RNNImplBase<torch::nn::RNNImpl>::flat_weights_': class 'std::vector<at::Tensor,std::allocator<at::Tensor>>'에서는 class 'torch::nn::detail::RNNImplBase<torch::nn::RNNImpl>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\ops\chunk_ops.h(18): message : 'std::vector<at::Tensor,std::allocator<at::Tensor>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\rnn.h(83,28): warning C4251: 'torch::nn::detail::RNNImplBase<torch::nn::LSTMImpl>::flat_weights_names_': class 'std::vector<std::string,std::allocator<std::string>>'에서는 class 'torch::nn::detail::RNNImplBase<torch::nn::LSTMImpl>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Exception.h(36): message : 'std::vector<std::string,std::allocator<std::string>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\rnn.h(154): message : 컴파일되는 클래스 템플릿 인스턴스화 'torch::nn::detail::RNNImplBase<torch::nn::LSTMImpl>'에 대한 참조를 확인하세요.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\rnn.h(85,41): warning C4251: 'torch::nn::detail::RNNImplBase<torch::nn::LSTMImpl>::all_weights_': class 'std::vector<std::vector<std::string,std::allocator<std::string>>,std::allocator<std::vector<std::string,std::allocator<std::string>>>>'에서는 class 'torch::nn::detail::RNNImplBase<torch::nn::LSTMImpl>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\rnn.h(85): message : 'std::vector<std::vector<std::string,std::allocator<std::string>>,std::allocator<std::vector<std::string,std::allocator<std::string>>>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\rnn.h(87,23): warning C4251: 'torch::nn::detail::RNNImplBase<torch::nn::LSTMImpl>::flat_weights_': class 'std::vector<at::Tensor,std::allocator<at::Tensor>>'에서는 class 'torch::nn::detail::RNNImplBase<torch::nn::LSTMImpl>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\ops\chunk_ops.h(18): message : 'std::vector<at::Tensor,std::allocator<at::Tensor>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(212,1): warning C4624: 'c10::constexpr_storage_t<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=std::tuple<at::Tensor,at::Tensor>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(411): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::constexpr_storage_t<T>'에 대한 참조를 확인하세요.
          with
          [
              T=std::tuple<at::Tensor,at::Tensor>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(549): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::trivially_copyable_optimization_optional_base<T>'에 대한 참조를 확인하세요.
          with
          [
              T=std::tuple<at::Tensor,at::Tensor>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(549): message : 컴파일되는 별칭 템플릿 인스턴스화 'c10::OptionalBase<T>'에 대한 참조를 확인하세요.
          with
          [
              T=std::tuple<at::Tensor,at::Tensor>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\rnn.h(162): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::optional<std::tuple<at::Tensor,at::Tensor>>'에 대한 참조를 확인하세요.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(446,1): warning C4624: 'c10::trivially_copyable_optimization_optional_base<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=std::tuple<at::Tensor,at::Tensor>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\rnn.h(83,28): warning C4251: 'torch::nn::detail::RNNImplBase<torch::nn::GRUImpl>::flat_weights_names_': class 'std::vector<std::string,std::allocator<std::string>>'에서는 class 'torch::nn::detail::RNNImplBase<torch::nn::GRUImpl>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Exception.h(36): message : 'std::vector<std::string,std::allocator<std::string>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\rnn.h(219): message : 컴파일되는 클래스 템플릿 인스턴스화 'torch::nn::detail::RNNImplBase<torch::nn::GRUImpl>'에 대한 참조를 확인하세요.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\rnn.h(85,41): warning C4251: 'torch::nn::detail::RNNImplBase<torch::nn::GRUImpl>::all_weights_': class 'std::vector<std::vector<std::string,std::allocator<std::string>>,std::allocator<std::vector<std::string,std::allocator<std::string>>>>'에서는 class 'torch::nn::detail::RNNImplBase<torch::nn::GRUImpl>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\rnn.h(85): message : 'std::vector<std::vector<std::string,std::allocator<std::string>>,std::allocator<std::vector<std::string,std::allocator<std::string>>>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\rnn.h(87,23): warning C4251: 'torch::nn::detail::RNNImplBase<torch::nn::GRUImpl>::flat_weights_': class 'std::vector<at::Tensor,std::allocator<at::Tensor>>'에서는 class 'torch::nn::detail::RNNImplBase<torch::nn::GRUImpl>'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\ops\chunk_ops.h(18): message : 'std::vector<at::Tensor,std::allocator<at::Tensor>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\transformerlayer.h(39,3): warning C4251: 'torch::nn::TransformerEncoderLayerOptions::activation_': class 'c10::variant<torch::enumtype::kReLU,torch::enumtype::kGELU,std::function<torch::autograd::Variable (const torch::autograd::Variable &)>>'에서는 struct 'torch::nn::TransformerEncoderLayerOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\transformerlayer.h(11): message : 'c10::variant<torch::enumtype::kReLU,torch::enumtype::kGELU,std::function<torch::autograd::Variable (const torch::autograd::Variable &)>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\transformerlayer.h(68,3): warning C4251: 'torch::nn::TransformerDecoderLayerOptions::activation_': class 'c10::variant<torch::enumtype::kReLU,torch::enumtype::kGELU,std::function<torch::autograd::Variable (const torch::autograd::Variable &)>>'에서는 struct 'torch::nn::TransformerDecoderLayerOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\transformerlayer.h(11): message : 'c10::variant<torch::enumtype::kReLU,torch::enumtype::kGELU,std::function<torch::autograd::Variable (const torch::autograd::Variable &)>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\transformer.h(54,3): warning C4251: 'torch::nn::TransformerOptions::activation_': class 'c10::variant<torch::enumtype::kReLU,torch::enumtype::kGELU,std::function<torch::autograd::Variable (const torch::autograd::Variable &)>>'에서는 struct 'torch::nn::TransformerOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\transformerlayer.h(11): message : 'c10::variant<torch::enumtype::kReLU,torch::enumtype::kGELU,std::function<torch::autograd::Variable (const torch::autograd::Variable &)>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\transformer.h(57,3): warning C4251: 'torch::nn::TransformerOptions::custom_encoder_': class 'torch::nn::AnyModule'에서는 struct 'torch::nn::TransformerOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\container\any.h(110): message : 'torch::nn::AnyModule' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\transformer.h(60,3): warning C4251: 'torch::nn::TransformerOptions::custom_decoder_': class 'torch::nn::AnyModule'에서는 struct 'torch::nn::TransformerOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\container\any.h(110): message : 'torch::nn::AnyModule' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\transformer.h(128,13): warning C4251: 'torch::nn::TransformerImpl::encoder': class 'torch::nn::AnyModule'에서는 class 'torch::nn::TransformerImpl'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\container\any.h(110): message : 'torch::nn::AnyModule' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\transformer.h(131,13): warning C4251: 'torch::nn::TransformerImpl::decoder': class 'torch::nn::AnyModule'에서는 class 'torch::nn::TransformerImpl'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\container\any.h(110): message : 'torch::nn::AnyModule' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(61,22): warning C4251: 'torch::nn::TransformerEncoderLayerImpl::self_attn': class 'torch::nn::MultiheadAttention'에서는 class 'torch::nn::TransformerEncoderLayerImpl'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\activation.h(872): message : 'torch::nn::MultiheadAttention' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(64,10): warning C4251: 'torch::nn::TransformerEncoderLayerImpl::linear1': class 'torch::nn::Linear'에서는 class 'torch::nn::TransformerEncoderLayerImpl'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\linear.h(83): message : 'torch::nn::Linear' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(67,11): warning C4251: 'torch::nn::TransformerEncoderLayerImpl::dropout': class 'torch::nn::Dropout'에서는 class 'torch::nn::TransformerEncoderLayerImpl'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\dropout.h(69): message : 'torch::nn::Dropout' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(70,10): warning C4251: 'torch::nn::TransformerEncoderLayerImpl::linear2': class 'torch::nn::Linear'에서는 class 'torch::nn::TransformerEncoderLayerImpl'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\linear.h(83): message : 'torch::nn::Linear' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(73,13): warning C4251: 'torch::nn::TransformerEncoderLayerImpl::norm1': class 'torch::nn::LayerNorm'에서는 class 'torch::nn::TransformerEncoderLayerImpl'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\normalization.h(73): message : 'torch::nn::LayerNorm' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(75,13): warning C4251: 'torch::nn::TransformerEncoderLayerImpl::norm2': class 'torch::nn::LayerNorm'에서는 class 'torch::nn::TransformerEncoderLayerImpl'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\normalization.h(73): message : 'torch::nn::LayerNorm' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(78,11): warning C4251: 'torch::nn::TransformerEncoderLayerImpl::dropout1': class 'torch::nn::Dropout'에서는 class 'torch::nn::TransformerEncoderLayerImpl'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\dropout.h(69): message : 'torch::nn::Dropout' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(80,11): warning C4251: 'torch::nn::TransformerEncoderLayerImpl::dropout2': class 'torch::nn::Dropout'에서는 class 'torch::nn::TransformerEncoderLayerImpl'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\dropout.h(69): message : 'torch::nn::Dropout' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(144,22): warning C4251: 'torch::nn::TransformerDecoderLayerImpl::self_attn': class 'torch::nn::MultiheadAttention'에서는 class 'torch::nn::TransformerDecoderLayerImpl'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\activation.h(872): message : 'torch::nn::MultiheadAttention' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(147,11): warning C4251: 'torch::nn::TransformerDecoderLayerImpl::dropout1': class 'torch::nn::Dropout'에서는 class 'torch::nn::TransformerDecoderLayerImpl'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\dropout.h(69): message : 'torch::nn::Dropout' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(150,13): warning C4251: 'torch::nn::TransformerDecoderLayerImpl::norm1': class 'torch::nn::LayerNorm'에서는 class 'torch::nn::TransformerDecoderLayerImpl'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\normalization.h(73): message : 'torch::nn::LayerNorm' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(153,22): warning C4251: 'torch::nn::TransformerDecoderLayerImpl::multihead_attn': class 'torch::nn::MultiheadAttention'에서는 class 'torch::nn::TransformerDecoderLayerImpl'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\activation.h(872): message : 'torch::nn::MultiheadAttention' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(156,11): warning C4251: 'torch::nn::TransformerDecoderLayerImpl::dropout2': class 'torch::nn::Dropout'에서는 class 'torch::nn::TransformerDecoderLayerImpl'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\dropout.h(69): message : 'torch::nn::Dropout' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(159,13): warning C4251: 'torch::nn::TransformerDecoderLayerImpl::norm2': class 'torch::nn::LayerNorm'에서는 class 'torch::nn::TransformerDecoderLayerImpl'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\normalization.h(73): message : 'torch::nn::LayerNorm' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(162,10): warning C4251: 'torch::nn::TransformerDecoderLayerImpl::linear1': class 'torch::nn::Linear'에서는 class 'torch::nn::TransformerDecoderLayerImpl'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\linear.h(83): message : 'torch::nn::Linear' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(165,11): warning C4251: 'torch::nn::TransformerDecoderLayerImpl::dropout': class 'torch::nn::Dropout'에서는 class 'torch::nn::TransformerDecoderLayerImpl'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\dropout.h(69): message : 'torch::nn::Dropout' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(168,10): warning C4251: 'torch::nn::TransformerDecoderLayerImpl::linear2': class 'torch::nn::Linear'에서는 class 'torch::nn::TransformerDecoderLayerImpl'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\linear.h(83): message : 'torch::nn::Linear' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(171,11): warning C4251: 'torch::nn::TransformerDecoderLayerImpl::dropout3': class 'torch::nn::Dropout'에서는 class 'torch::nn::TransformerDecoderLayerImpl'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\dropout.h(69): message : 'torch::nn::Dropout' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(174,13): warning C4251: 'torch::nn::TransformerDecoderLayerImpl::norm3': class 'torch::nn::LayerNorm'에서는 class 'torch::nn::TransformerDecoderLayerImpl'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\normalization.h(73): message : 'torch::nn::LayerNorm' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\transformercoder.h(35,3): warning C4251: 'torch::nn::TransformerEncoderOptions::encoder_layer_': class 'torch::nn::TransformerEncoderLayer'에서는 struct 'torch::nn::TransformerEncoderOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(88): message : 'torch::nn::TransformerEncoderLayer' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\transformercoder.h(41,3): warning C4251: 'torch::nn::TransformerEncoderOptions::norm_': class 'torch::nn::AnyModule'에서는 struct 'torch::nn::TransformerEncoderOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\container\any.h(110): message : 'torch::nn::AnyModule' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\transformercoder.h(66,3): warning C4251: 'torch::nn::TransformerDecoderOptions::decoder_layer_': class 'torch::nn::TransformerDecoderLayer'에서는 struct 'torch::nn::TransformerDecoderOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\transformerlayer.h(192): message : 'torch::nn::TransformerDecoderLayer' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\options\transformercoder.h(72,3): warning C4251: 'torch::nn::TransformerDecoderOptions::norm_': class 'torch::nn::AnyModule'에서는 struct 'torch::nn::TransformerDecoderOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\container\any.h(110): message : 'torch::nn::AnyModule' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\transformercoder.h(63,14): warning C4251: 'torch::nn::TransformerEncoderImpl::layers': class 'torch::nn::ModuleList'에서는 class 'torch::nn::TransformerEncoderImpl'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\container\modulelist.h(271): message : 'torch::nn::ModuleList' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\transformercoder.h(66,13): warning C4251: 'torch::nn::TransformerEncoderImpl::norm': class 'torch::nn::AnyModule'에서는 class 'torch::nn::TransformerEncoderImpl'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\container\any.h(110): message : 'torch::nn::AnyModule' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\transformercoder.h(132,14): warning C4251: 'torch::nn::TransformerDecoderImpl::layers': class 'torch::nn::ModuleList'에서는 class 'torch::nn::TransformerDecoderImpl'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\container\modulelist.h(271): message : 'torch::nn::ModuleList' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\transformercoder.h(135,13): warning C4251: 'torch::nn::TransformerDecoderImpl::norm': class 'torch::nn::AnyModule'에서는 class 'torch::nn::TransformerDecoderImpl'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\nn\modules\container\any.h(110): message : 'torch::nn::AnyModule' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\optim\optimizer.h(94,23): warning C4251: 'torch::optim::OptimizerParamGroup::params_': class 'std::vector<at::Tensor,std::allocator<at::Tensor>>'에서는 class 'torch::optim::OptimizerParamGroup'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\ops\chunk_ops.h(18): message : 'std::vector<at::Tensor,std::allocator<at::Tensor>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\optim\optimizer.h(95,37): warning C4251: 'torch::optim::OptimizerParamGroup::options_': class 'std::unique_ptr<torch::optim::OptimizerOptions,std::default_delete<torch::optim::OptimizerOptions>>'에서는 class 'torch::optim::OptimizerParamGroup'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\optim\optimizer.h(52): message : 'std::unique_ptr<torch::optim::OptimizerOptions,std::default_delete<torch::optim::OptimizerOptions>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\optim\optimizer.h(173,36): warning C4251: 'torch::optim::Optimizer::param_groups_': class 'std::vector<torch::optim::OptimizerParamGroup,std::allocator<torch::optim::OptimizerParamGroup>>'에서는 class 'torch::optim::Optimizer'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\optim\optimizer.h(106): message : 'std::vector<torch::optim::OptimizerParamGroup,std::allocator<torch::optim::OptimizerParamGroup>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\optim\optimizer.h(174,73): warning C4251: 'torch::optim::Optimizer::state_': class 'ska::flat_hash_map<std::string,std::unique_ptr<torch::optim::OptimizerParamState,std::default_delete<torch::optim::OptimizerParamState>>,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::pair<K,V>>>'에서는 class 'torch::optim::Optimizer'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
          with
          [
              K=std::string,
              V=std::unique_ptr<torch::optim::OptimizerParamState,std::default_delete<torch::optim::OptimizerParamState>>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\optim\optimizer.h(159): message : 'ska::flat_hash_map<std::string,std::unique_ptr<torch::optim::OptimizerParamState,std::default_delete<torch::optim::OptimizerParamState>>,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::pair<K,V>>>' 선언을 참조하십시오.
          with
          [
              K=std::string,
              V=std::unique_ptr<torch::optim::OptimizerParamState,std::default_delete<torch::optim::OptimizerParamState>>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\optim\optimizer.h(175,37): warning C4251: 'torch::optim::Optimizer::defaults_': class 'std::unique_ptr<torch::optim::OptimizerOptions,std::default_delete<torch::optim::OptimizerOptions>>'에서는 class 'torch::optim::Optimizer'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\optim\optimizer.h(52): message : 'std::unique_ptr<torch::optim::OptimizerOptions,std::default_delete<torch::optim::OptimizerOptions>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\optim\adam.h(24,3): warning C4251: 'torch::optim::AdamOptions::betas_': class 'std::tuple<double,double>'에서는 struct 'torch::optim::AdamOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\optim\adam.h(23): message : 'std::tuple<double,double>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\optim\adamw.h(24,3): warning C4251: 'torch::optim::AdamWOptions::betas_': class 'std::tuple<double,double>'에서는 struct 'torch::optim::AdamWOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\optim\adam.h(23): message : 'std::tuple<double,double>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\optim\lbfgs.h(20,3): warning C4251: 'torch::optim::LBFGSOptions::max_eval_': class 'c10::optional<int64_t>'에서는 struct 'torch::optim::LBFGSOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\TensorImpl.h(1702): message : 'c10::optional<int64_t>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\optim\lbfgs.h(24,3): warning C4251: 'torch::optim::LBFGSOptions::line_search_fn_': class 'c10::optional<std::string>'에서는 struct 'torch::optim::LBFGSOptions'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\jit_type_base.h(76): message : 'c10::optional<std::string>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\optim\lbfgs.h(46,3): warning C4251: 'torch::optim::LBFGSParamState::old_dirs_': class 'std::deque<at::Tensor,std::allocator<at::Tensor>>'에서는 struct 'torch::optim::LBFGSParamState'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\optim\lbfgs.h(46): message : 'std::deque<at::Tensor,std::allocator<at::Tensor>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\optim\lbfgs.h(47,3): warning C4251: 'torch::optim::LBFGSParamState::old_stps_': class 'std::deque<at::Tensor,std::allocator<at::Tensor>>'에서는 struct 'torch::optim::LBFGSParamState'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\optim\lbfgs.h(46): message : 'std::deque<at::Tensor,std::allocator<at::Tensor>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\optim\lbfgs.h(48,3): warning C4251: 'torch::optim::LBFGSParamState::ro_': class 'std::deque<at::Tensor,std::allocator<at::Tensor>>'에서는 struct 'torch::optim::LBFGSParamState'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\optim\lbfgs.h(46): message : 'std::deque<at::Tensor,std::allocator<at::Tensor>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(212,1): warning C4624: 'c10::constexpr_storage_t<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=std::vector<at::Tensor,std::allocator<at::Tensor>>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(411): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::constexpr_storage_t<T>'에 대한 참조를 확인하세요.
          with
          [
              T=std::vector<at::Tensor,std::allocator<at::Tensor>>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(549): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::trivially_copyable_optimization_optional_base<T>'에 대한 참조를 확인하세요.
          with
          [
              T=std::vector<at::Tensor,std::allocator<at::Tensor>>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(549): message : 컴파일되는 별칭 템플릿 인스턴스화 'c10::OptionalBase<T>'에 대한 참조를 확인하세요.
          with
          [
              T=std::vector<at::Tensor,std::allocator<at::Tensor>>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\optim\lbfgs.h(49): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::optional<std::vector<at::Tensor,std::allocator<at::Tensor>>>'에 대한 참조를 확인하세요.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(446,1): warning C4624: 'c10::trivially_copyable_optimization_optional_base<T>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              T=std::vector<at::Tensor,std::allocator<at::Tensor>>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\optim\lbfgs.h(49,3): warning C4251: 'torch::optim::LBFGSParamState::al_': class 'c10::optional<std::vector<at::Tensor,std::allocator<at::Tensor>>>'에서는 struct 'torch::optim::LBFGSParamState'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\optim\lbfgs.h(49): message : 'c10::optional<std::vector<at::Tensor,std::allocator<at::Tensor>>>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\optim\lbfgs.h(87,26): warning C4251: 'torch::optim::LBFGS::_numel_cache': class 'c10::optional<int64_t>'에서는 class 'torch::optim::LBFGS'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\TensorImpl.h(1702): message : 'c10::optional<int64_t>' 선언을 참조하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\special.h(1,1): warning C4819: 현재 코드 페이지(949)에서 표시할 수 없는 문자가 파일에 들어 있습니다. 데이터가 손실되지 않게 하려면 해당 파일을 유니코드 형식으로 저장하십시오.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\flat_hash_map.h(171,1): warning C4624: 'ska::detailv3::sherwood_v3_entry<std::pair<K,V>>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              K=std::string,
              V=std::unique_ptr<torch::optim::OptimizerParamState,std::default_delete<torch::optim::OptimizerParamState>>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\flat_hash_map.h(779): message : 컴파일되는 클래스 템플릿 인스턴스화 'ska::detailv3::sherwood_v3_entry<std::pair<K,V>>'에 대한 참조를 확인하세요.
          with
          [
              K=std::string,
              V=std::unique_ptr<torch::optim::OptimizerParamState,std::default_delete<torch::optim::OptimizerParamState>>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\flat_hash_map.h(775): message : 클래스 템플릿 멤버 함수 'ska::detailv3::sherwood_v3_entry<std::pair<K,V>> *ska::detailv3::sherwood_v3_table<std::pair<K,V>,K,H,ska::detailv3::KeyOrValueHasher<K,std::pair<K,V>,H>,E,ska::detailv3::KeyOrValueEquality<K,std::pair<K,V>,E>,A,std::allocator<ska::detailv3::sherwood_v3_entry<std::pair<K,V>>>>::empty_default_table(void)'을(를) 컴파일하는 중입니다.
          with
          [
              K=std::string,
              V=std::unique_ptr<torch::optim::OptimizerParamState,std::default_delete<torch::optim::OptimizerParamState>>,
              H=std::hash<std::string>,
              E=std::equal_to<std::string>,
              A=std::allocator<std::pair<std::string,std::unique_ptr<torch::optim::OptimizerParamState,std::default_delete<torch::optim::OptimizerParamState>>>>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\flat_hash_map.h(768): message : 컴파일되는 함수 템플릿 인스턴스화 'ska::detailv3::sherwood_v3_entry<std::pair<K,V>> *ska::detailv3::sherwood_v3_table<std::pair<K,V>,K,H,ska::detailv3::KeyOrValueHasher<K,std::pair<K,V>,H>,E,ska::detailv3::KeyOrValueEquality<K,std::pair<K,V>,E>,A,std::allocator<ska::detailv3::sherwood_v3_entry<std::pair<K,V>>>>::empty_default_table(void)'에 대한 참조를 확인하세요.
          with
          [
              K=std::string,
              V=std::unique_ptr<torch::optim::OptimizerParamState,std::default_delete<torch::optim::OptimizerParamState>>,
              H=std::hash<std::string>,
              E=std::equal_to<std::string>,
              A=std::allocator<std::pair<std::string,std::unique_ptr<torch::optim::OptimizerParamState,std::default_delete<torch::optim::OptimizerParamState>>>>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\flat_hash_map.h(1938): message : 컴파일되는 클래스 템플릿 인스턴스화 'ska::detailv3::sherwood_v3_table<std::pair<K,V>,K,H,ska::detailv3::KeyOrValueHasher<K,std::pair<K,V>,H>,E,ska::detailv3::KeyOrValueEquality<K,std::pair<K,V>,E>,A,std::allocator<ska::detailv3::sherwood_v3_entry<std::pair<K,V>>>>'에 대한 참조를 확인하세요.
          with
          [
              K=std::string,
              V=std::unique_ptr<torch::optim::OptimizerParamState,std::default_delete<torch::optim::OptimizerParamState>>,
              H=std::hash<std::string>,
              E=std::equal_to<std::string>,
              A=std::allocator<std::pair<std::string,std::unique_ptr<torch::optim::OptimizerParamState,std::default_delete<torch::optim::OptimizerParamState>>>>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\torch\csrc\api\include\torch\optim\optimizer.h(174): message : 컴파일되는 클래스 템플릿 인스턴스화 'ska::flat_hash_map<std::string,std::unique_ptr<torch::optim::OptimizerParamState,std::default_delete<torch::optim::OptimizerParamState>>,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::pair<K,V>>>'에 대한 참조를 확인하세요.
          with
          [
              K=std::string,
              V=std::unique_ptr<torch::optim::OptimizerParamState,std::default_delete<torch::optim::OptimizerParamState>>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\flat_hash_map.h(171,1): warning C4624: 'ska::detailv3::sherwood_v3_entry<std::pair<K,V>>': 소멸자가 암시적으로 삭제된 것으로 정의되었습니다.
          with
          [
              K=c10::DispatchKey,
              V=std::list<c10::impl::AnnotatedKernel,std::allocator<c10::impl::AnnotatedKernel>>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\flat_hash_map.h(711): message : 컴파일되는 클래스 템플릿 인스턴스화 'ska::detailv3::sherwood_v3_entry<std::pair<K,V>>'에 대한 참조를 확인하세요.
          with
          [
              K=c10::DispatchKey,
              V=std::list<c10::impl::AnnotatedKernel,std::allocator<c10::impl::AnnotatedKernel>>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\flat_hash_map.h(708): message : 클래스 템플릿 멤버 함수 'void ska::detailv3::sherwood_v3_table<std::pair<K,V>,K,H,ska::detailv3::KeyOrValueHasher<K,std::pair<K,V>,H>,E,ska::detailv3::KeyOrValueEquality<K,std::pair<K,V>,E>,A,std::allocator<ska::detailv3::sherwood_v3_entry<std::pair<K,V>>>>::clear(void)'을(를) 컴파일하는 중입니다.
          with
          [
              K=c10::DispatchKey,
              V=std::list<c10::impl::AnnotatedKernel,std::allocator<c10::impl::AnnotatedKernel>>,
              H=std::hash<c10::DispatchKey>,
              E=std::equal_to<c10::DispatchKey>,
              A=std::allocator<std::pair<c10::DispatchKey,std::list<c10::impl::AnnotatedKernel,std::allocator<c10::impl::AnnotatedKernel>>>>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\flat_hash_map.h(431): message : 컴파일되는 함수 템플릿 인스턴스화 'void ska::detailv3::sherwood_v3_table<std::pair<K,V>,K,H,ska::detailv3::KeyOrValueHasher<K,std::pair<K,V>,H>,E,ska::detailv3::KeyOrValueEquality<K,std::pair<K,V>,E>,A,std::allocator<ska::detailv3::sherwood_v3_entry<std::pair<K,V>>>>::clear(void)'에 대한 참조를 확인하세요.
          with
          [
              K=c10::DispatchKey,
              V=std::list<c10::impl::AnnotatedKernel,std::allocator<c10::impl::AnnotatedKernel>>,
              H=std::hash<c10::DispatchKey>,
              E=std::equal_to<c10::DispatchKey>,
              A=std::allocator<std::pair<c10::DispatchKey,std::list<c10::impl::AnnotatedKernel,std::allocator<c10::impl::AnnotatedKernel>>>>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\flat_hash_map.h(1938): message : 컴파일되는 클래스 템플릿 인스턴스화 'ska::detailv3::sherwood_v3_table<std::pair<K,V>,K,H,ska::detailv3::KeyOrValueHasher<K,std::pair<K,V>,H>,E,ska::detailv3::KeyOrValueEquality<K,std::pair<K,V>,E>,A,std::allocator<ska::detailv3::sherwood_v3_entry<std::pair<K,V>>>>'에 대한 참조를 확인하세요.
          with
          [
              K=c10::DispatchKey,
              V=std::list<c10::impl::AnnotatedKernel,std::allocator<c10::impl::AnnotatedKernel>>,
              H=std::hash<c10::DispatchKey>,
              E=std::equal_to<c10::DispatchKey>,
              A=std::allocator<std::pair<c10::DispatchKey,std::list<c10::impl::AnnotatedKernel,std::allocator<c10::impl::AnnotatedKernel>>>>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\dispatch\OperatorEntry.h(270): message : 컴파일되는 클래스 템플릿 인스턴스화 'ska::flat_hash_map<c10::DispatchKey,std::list<c10::impl::AnnotatedKernel,std::allocator<c10::impl::AnnotatedKernel>>,std::hash<c10::DispatchKey>,std::equal_to<K>,std::allocator<std::pair<K,V>>>'에 대한 참조를 확인하세요.
          with
          [
              K=c10::DispatchKey,
              V=std::list<c10::impl::AnnotatedKernel,std::allocator<c10::impl::AnnotatedKernel>>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\SmallVector.h(105,1): warning C4267: '=': 'size_t'에서 'Size_T'(으)로 변환하면서 데이터가 손실될 수 있습니다.
          with
          [
              Size_T=unsigned int
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\SmallVector.h(103): message : 클래스 템플릿 멤버 함수 'void c10::SmallVectorBase<unsigned int>::set_size(size_t)'을(를) 컴파일하는 중입니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\SmallVector.h(628): message : 컴파일되는 함수 템플릿 인스턴스화 'void c10::SmallVectorBase<unsigned int>::set_size(size_t)'에 대한 참조를 확인하세요.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\SmallVector.h(126): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::SmallVectorBase<unsigned int>'에 대한 참조를 확인하세요.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\SmallVector.h(382): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::SmallVectorTemplateCommon<T,void>'에 대한 참조를 확인하세요.
          with
          [
              T=c10::SymInt
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\SmallVector.h(639): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::SmallVectorTemplateBase<T,false>'에 대한 참조를 확인하세요.
          with
          [
              T=c10::SymInt
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\SmallVector.h(1284): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::SmallVectorImpl<T>'에 대한 참조를 확인하세요.
          with
          [
              T=c10::SymInt
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\TensorImpl.h(221): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::SmallVector<c10::SymInt,5>'에 대한 참조를 확인하세요.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\SmallVector.h(69,26): warning C4267: '초기화 중': 'size_t'에서 'Size_T'(으)로 변환하면서 데이터가 손실될 수 있습니다.
          with
          [
              Size_T=unsigned int
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\SmallVector.h(68): message : 클래스 템플릿 멤버 함수 'c10::SmallVectorBase<unsigned int>::SmallVectorBase(void *,size_t)'을(를) 컴파일하는 중입니다.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\SmallVector.h(140): message : 컴파일되는 함수 템플릿 인스턴스화 'c10::SmallVectorBase<unsigned int>::SmallVectorBase(void *,size_t)'에 대한 참조를 확인하세요.
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\complex.h(173,14): warning C4244: '초기화 중': 'const T'에서 'T'(으)로 변환하면서 데이터가 손실될 수 있습니다.
          with
          [
              T=double
          ]
          and
          [
              T=float
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\TypeCast.h(97): message : 컴파일되는 함수 템플릿 인스턴스화 'c10::complex<float>::complex<T>(const c10::complex<double> &)'에 대한 참조를 확인하세요.
          with
          [
              T=float
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\TypeCast.h(96): message : 컴파일되는 함수 템플릿 인스턴스화 'c10::complex<float>::complex<T>(const c10::complex<double> &)'에 대한 참조를 확인하세요.
          with
          [
              T=float
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\complex.h(173,34): warning C4244: '초기화 중': 'const T'에서 'T'(으)로 변환하면서 데이터가 손실될 수 있습니다.
          with
          [
              T=double
          ]
          and
          [
              T=float
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\Optional.h(647,1): warning C4267: '인수': 'size_t'에서 'T'(으)로 변환하면서 데이터가 손실될 수 있습니다.
          with
          [
              T=int32_t
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\function_schema.h(436): message : 컴파일되는 함수 템플릿 인스턴스화 'c10::optional<int32_t>::optional<const I,false>(U &&)'에 대한 참조를 확인하세요.
          with
          [
              I=unsigned __int64,
              U=unsigned __int64
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\ATen\core\function_schema.h(436): message : 컴파일되는 함수 템플릿 인스턴스화 'c10::optional<int32_t>::optional<const I,false>(U &&)'에 대한 참조를 확인하세요.
          with
          [
              I=unsigned __int64,
              U=unsigned __int64
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\TypeCast.h(48,32): warning C4244: '인수': 'src_t'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
          with
          [
              src_t=int64_t
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\TypeCast.h(45): message : 클래스 템플릿 멤버 함수 'dest_t c10::static_cast_with_inter_type<dest_t,From>::apply(src_t)'을(를) 컴파일하는 중입니다.
          with
          [
              dest_t=c10::BFloat16,
              From=int64_t,
              src_t=int64_t
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\TypeCast.h(103): message : 컴파일되는 함수 템플릿 인스턴스화 'dest_t c10::static_cast_with_inter_type<dest_t,From>::apply(src_t)'에 대한 참조를 확인하세요.
          with
          [
              dest_t=c10::BFloat16,
              From=int64_t,
              src_t=int64_t
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\TypeCast.h(103): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::static_cast_with_inter_type<To,From>'에 대한 참조를 확인하세요.
          with
          [
              To=c10::BFloat16,
              From=int64_t
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\TypeCast.h(115): message : 컴파일되는 함수 템플릿 인스턴스화 'To c10::convert<To,From>(From)'에 대한 참조를 확인하세요.
          with
          [
              To=c10::BFloat16,
              From=int64_t
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\Scalar.h(89): message : 컴파일되는 함수 템플릿 인스턴스화 'To c10::checked_convert<c10::BFloat16,int64_t>(From,const char *)'에 대한 참조를 확인하세요.
          with
          [
              To=c10::BFloat16,
              From=int64_t
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\TypeCast.h(48,32): warning C4244: '인수': 'T'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
          with
          [
              T=double
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\TypeCast.h(45): message : 클래스 템플릿 멤버 함수 'dest_t c10::static_cast_with_inter_type<dest_t,From>::apply(src_t)'을(를) 컴파일하는 중입니다.
          with
          [
              dest_t=c10::BFloat16,
              From=c10::complex<double>,
              src_t=c10::complex<double>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\TypeCast.h(103): message : 컴파일되는 함수 템플릿 인스턴스화 'dest_t c10::static_cast_with_inter_type<dest_t,From>::apply(src_t)'에 대한 참조를 확인하세요.
          with
          [
              dest_t=c10::BFloat16,
              From=c10::complex<double>,
              src_t=c10::complex<double>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\TypeCast.h(103): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::static_cast_with_inter_type<To,From>'에 대한 참조를 확인하세요.
          with
          [
              To=c10::BFloat16,
              From=c10::complex<double>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\TypeCast.h(115): message : 컴파일되는 함수 템플릿 인스턴스화 'To c10::convert<To,From>(From)'에 대한 참조를 확인하세요.
          with
          [
              To=c10::BFloat16,
              From=c10::complex<double>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\Scalar.h(89): message : 컴파일되는 함수 템플릿 인스턴스화 'To c10::checked_convert<c10::BFloat16,c10::complex<double>>(From,const char *)'에 대한 참조를 확인하세요.
          with
          [
              To=c10::BFloat16,
              From=c10::complex<double>
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\TypeCast.h(48,32): warning C4244: '인수': 'src_t'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
          with
          [
              src_t=double
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\TypeCast.h(45): message : 클래스 템플릿 멤버 함수 'dest_t c10::static_cast_with_inter_type<dest_t,From>::apply(src_t)'을(를) 컴파일하는 중입니다.
          with
          [
              dest_t=c10::BFloat16,
              From=double,
              src_t=double
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\TypeCast.h(103): message : 컴파일되는 함수 템플릿 인스턴스화 'dest_t c10::static_cast_with_inter_type<dest_t,From>::apply(src_t)'에 대한 참조를 확인하세요.
          with
          [
              dest_t=c10::BFloat16,
              From=double,
              src_t=double
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\TypeCast.h(103): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::static_cast_with_inter_type<To,From>'에 대한 참조를 확인하세요.
          with
          [
              To=c10::BFloat16,
              From=double
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\TypeCast.h(115): message : 컴파일되는 함수 템플릿 인스턴스화 'To c10::convert<To,From>(From)'에 대한 참조를 확인하세요.
          with
          [
              To=c10::BFloat16,
              From=double
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\Scalar.h(89): message : 컴파일되는 함수 템플릿 인스턴스화 'To c10::checked_convert<c10::BFloat16,double>(From,const char *)'에 대한 참조를 확인하세요.
          with
          [
              To=c10::BFloat16,
              From=double
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\TypeCast.h(48,32): warning C4244: '인수': 'src_t'에서 'const T'(으)로 변환하면서 데이터가 손실될 수 있습니다.
          with
          [
              src_t=int64_t
          ]
          and
          [
              T=double
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\TypeCast.h(45): message : 클래스 템플릿 멤버 함수 'dest_t c10::static_cast_with_inter_type<dest_t,From>::apply(src_t)'을(를) 컴파일하는 중입니다.
          with
          [
              dest_t=c10::complex<double>,
              From=int64_t,
              src_t=int64_t
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\TypeCast.h(103): message : 컴파일되는 함수 템플릿 인스턴스화 'dest_t c10::static_cast_with_inter_type<dest_t,From>::apply(src_t)'에 대한 참조를 확인하세요.
          with
          [
              dest_t=c10::complex<double>,
              From=int64_t,
              src_t=int64_t
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\TypeCast.h(103): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::static_cast_with_inter_type<To,From>'에 대한 참조를 확인하세요.
          with
          [
              To=c10::complex<double>,
              From=int64_t
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\TypeCast.h(115): message : 컴파일되는 함수 템플릿 인스턴스화 'To c10::convert<To,From>(From)'에 대한 참조를 확인하세요.
          with
          [
              To=c10::complex<double>,
              From=int64_t
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\Scalar.h(89): message : 컴파일되는 함수 템플릿 인스턴스화 'To c10::checked_convert<c10::complex<double>,int64_t>(From,const char *)'에 대한 참조를 확인하세요.
          with
          [
              To=c10::complex<double>,
              From=int64_t
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\TypeCast.h(48,32): warning C4244: '인수': 'src_t'에서 'const T'(으)로 변환하면서 데이터가 손실될 수 있습니다.
          with
          [
              src_t=int64_t
          ]
          and
          [
              T=float
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\TypeCast.h(45): message : 클래스 템플릿 멤버 함수 'dest_t c10::static_cast_with_inter_type<dest_t,From>::apply(src_t)'을(를) 컴파일하는 중입니다.
          with
          [
              dest_t=c10::complex<float>,
              From=int64_t,
              src_t=int64_t
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\TypeCast.h(103): message : 컴파일되는 함수 템플릿 인스턴스화 'dest_t c10::static_cast_with_inter_type<dest_t,From>::apply(src_t)'에 대한 참조를 확인하세요.
          with
          [
              dest_t=c10::complex<float>,
              From=int64_t,
              src_t=int64_t
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\TypeCast.h(103): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::static_cast_with_inter_type<To,From>'에 대한 참조를 확인하세요.
          with
          [
              To=c10::complex<float>,
              From=int64_t
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\TypeCast.h(115): message : 컴파일되는 함수 템플릿 인스턴스화 'To c10::convert<To,From>(From)'에 대한 참조를 확인하세요.
          with
          [
              To=c10::complex<float>,
              From=int64_t
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\Scalar.h(89): message : 컴파일되는 함수 템플릿 인스턴스화 'To c10::checked_convert<c10::complex<float>,int64_t>(From,const char *)'에 대한 참조를 확인하세요.
          with
          [
              To=c10::complex<float>,
              From=int64_t
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\TypeCast.h(48,32): warning C4244: '인수': 'src_t'에서 'const T'(으)로 변환하면서 데이터가 손실될 수 있습니다.
          with
          [
              src_t=double
          ]
          and
          [
              T=float
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\TypeCast.h(45): message : 클래스 템플릿 멤버 함수 'dest_t c10::static_cast_with_inter_type<dest_t,From>::apply(src_t)'을(를) 컴파일하는 중입니다.
          with
          [
              dest_t=c10::complex<float>,
              From=double,
              src_t=double
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\TypeCast.h(103): message : 컴파일되는 함수 템플릿 인스턴스화 'dest_t c10::static_cast_with_inter_type<dest_t,From>::apply(src_t)'에 대한 참조를 확인하세요.
          with
          [
              dest_t=c10::complex<float>,
              From=double,
              src_t=double
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\TypeCast.h(103): message : 컴파일되는 클래스 템플릿 인스턴스화 'c10::static_cast_with_inter_type<To,From>'에 대한 참조를 확인하세요.
          with
          [
              To=c10::complex<float>,
              From=double
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\TypeCast.h(115): message : 컴파일되는 함수 템플릿 인스턴스화 'To c10::convert<To,From>(From)'에 대한 참조를 확인하세요.
          with
          [
              To=c10::complex<float>,
              From=double
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\core\Scalar.h(89): message : 컴파일되는 함수 템플릿 인스턴스화 'To c10::checked_convert<c10::complex<float>,double>(From,const char *)'에 대한 참조를 확인하세요.
          with
          [
              To=c10::complex<float>,
              From=double
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\SmallVector.h(523,1): warning C4267: '=': 'size_t'에서 'Size_T'(으)로 변환하면서 데이터가 손실될 수 있습니다.
          with
          [
              Size_T=unsigned int
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\SmallVector.h(517): message : 클래스 템플릿 멤버 함수 'void c10::SmallVectorTemplateBase<T,false>::takeAllocationForGrow(T *,size_t)'을(를) 컴파일하는 중입니다.
          with
          [
              T=c10::SymInt
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\SmallVector.h(499): message : 컴파일되는 함수 템플릿 인스턴스화 'void c10::SmallVectorTemplateBase<T,false>::takeAllocationForGrow(T *,size_t)'에 대한 참조를 확인하세요.
          with
          [
              T=c10::SymInt
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\SmallVector.h(1082): message : 클래스 템플릿 멤버 함수 'c10::SmallVectorImpl<T> &c10::SmallVectorImpl<T>::operator =(const c10::SmallVectorImpl<T> &)'을(를) 컴파일하는 중입니다.
          with
          [
              T=c10::SymInt
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\SmallVector.h(1334): message : 컴파일되는 함수 템플릿 인스턴스화 'c10::SmallVectorImpl<T> &c10::SmallVectorImpl<T>::operator =(const c10::SmallVectorImpl<T> &)'에 대한 참조를 확인하세요.
          with
          [
              T=c10::SymInt
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\SmallVector.h(1130): message : 클래스 템플릿 멤버 함수 'c10::SmallVectorImpl<T> &c10::SmallVectorImpl<T>::operator =(c10::SmallVectorImpl<T> &&)'을(를) 컴파일하는 중입니다.
          with
          [
              T=c10::SymInt
          ]
D:\Magnus\libtorch-win-shared-with-deps-2.0.1+cpu\libtorch\include\c10\util\SmallVector.h(1344): message : 컴파일되는 함수 템플릿 인스턴스화 'c10::SmallVectorImpl<T> &c10::SmallVectorImpl<T>::operator =(c10::SmallVectorImpl<T> &&)'에 대한 참조를 확인하세요.
          with
          [
              T=c10::SymInt
          ]
     D:\Magnus\Magnus\x64\Debug\Magnus.lib 라이브러리 및 D:\Magnus\Magnus\x64\Debug\Magnus.exp 개체를 생성하고 있습니다.
  Magnus.vcxproj -> D:\Magnus\Magnus\x64\Debug\Magnus.exe
